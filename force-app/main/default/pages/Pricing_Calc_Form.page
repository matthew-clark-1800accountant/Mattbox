<apex:page controller="PricingCalcController" standardStyleSheets="false">

    <html xmlns="http://www.w3.org/1999/xhtml">
        <head>
            
            <title>Pricing Calculator</title>
            
            <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous"></link>

            <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
            <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>
            <script type="text/javascript" src="https://1800accountant.com/sfapi/js/custom.forms.jqueryv2.js"></script>
            <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" ></link>
            
            <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.0/css/all.css" integrity="sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ" crossorigin="anonymous"></link>

            <style>
                .form-group {
                    margin-bottom: 14px;
                    font-size: 14px;
                    text-align: right;
                }
                .form-group span{
                    text-align: left;
                }
                h2 {
                    font-size: 20px;
                    color: #5d5d5d;
                }
                h1 {
                    margin-top: 15px;
                    margin-bottom: 15px;
                    font-size: 28px;
                    color: #5d5d5d;
                }
                .radioOpt td, .radioOptinput, .radioOpt label{
                    font-size : 12px;
                    margin-right:5px;   
                    margin-left:5px;
                }
                .custom-form-select {
                    background:url("https://1800accountant.com/sfapi/js/sprite.png")no-repeat scroll -12px -76px transparent;
                    color:#000000;
                    height:38px;
                    overflow:hidden;
                    padding:0 24px 0 8px;
                    position:absolute;
                    width:205px;
                    font:bold 12px/35px Helvetica,Arial,sans-serif;
                }
                    
                .custom-form-focused {
                  background-position:-12px -123px;
                }
                
                .custom-form-disabled {
                  color: gray;
                }
                    
                .custom-form-checkbox {
                  float:right;
                  display:block;
                  width:21px;
                  height:23px;
                  margin-right:10px;
                  background:url('https://1800accountant.com/sfapi/js/sprite.png')no-repeat scroll -51px -9px transparent;
                }
                
                .custom-form-checkbox.custom-form-focused {
                  background-position:-10px -9px;
                }
                
                .custom-form-checkbox.custom-form-checked {
                  background-position:-51px -39px;
                }
                
                .custom-form-checkbox.custom-form-checked.custom-form-focused {
                  background-position:-10px -39px;
                }
                
                .custom-form-radio {
                  float:left;
                  display:block;
                  width:21px;
                  height:23px;
                  margin-right:10px;
                  background:url('https://1800accountant.com/sfapi/js/sprite.png')no-repeat scroll -133px -9px transparent;
                }
                
                .custom-form-radio.custom-form-focused {
                  background-position:-92px -9px;
                }
                
                .custom-form-radio.custom-form-checked {
                  background-position:-133px -39px;
                }
                
                .custom-form-radio.custom-form-checked.custom-form-focused {
                  background-position:-92px -39px;
                }

            </style>
            
            <script type='text/javascript'>
                
                function updateTotal(doAmount,element) {
                    
                    // get existing total amount
                    var theValue = parseFloat(document.getElementById('holdTotal').value);
                    
                    doAmount = parseFloat(doAmount);
                    
                    if (element.checked) {
                        // if checked add to total
                        theValue = theValue + doAmount;
                    } else {
                        // if unchecked subtract from total
                        theValue = theValue - doAmount;
                    }
                    
                    // set new amount
                    document.getElementById('holdTotal').value = parseFloat(theValue).toFixed(2);
                    
                }
                
                function checkBundleApproval() {
                
                    var skillList = '{!UserSkill}';
                    var sarray = skillList.split(";");
                    if (sarray.includes('Inbound') || sarray.includes('Paid Digital') || sarray.includes('Calculator Override')) {
                        
                        $('#approvalwarning').hide();
                        $('[data-id="bdloverride"]').val('no');
                        return false;
                        
                    }
                
                    var bundleSel = $('[data-id="bundlecheck"]').val();

                    var approvalMessage = false;
                    
                    <apex:repeat var="bundleOne" value="{!offerProductList}" >
                        
                        // todo, check bcheck, pcheck and other main product ids
                        
                        if ($('[data-id="{!bundleOne.calcId}"]').prop('checked') == false) {
                        
                            if ({!bundleOne.upsell} == false) {
                        
                            //    approvalMessage = true;
                            
                            }
                            
                        }
                        
                    </apex:repeat>

                    if (approvalMessage) {
                        $('#approvalwarning').show();
                        $('[data-id="bdloverride"]').val('yes');
                    } else {
                        $('#approvalwarning').hide();
                        $('[data-id="bdloverride"]').val('no');
                    }
                    
                    return approvalMessage;
                
                }
                
                function checkDefaultApproval() {
                
                    var skillList = '{!UserSkill}';
                    var sarray = skillList.split(";");
                    if (sarray.includes('Inbound') || sarray.includes('Paid Digital') || sarray.includes('Calculator Override')) {
                        
                        $('#approvalwarning').hide();
                        $('[data-id="bdloverride"]').val('no');
                        return false;
                        
                    }
                    
                    var approvalMessage = false;
                    
                    var excludeBTP = {!IF((disableBusinessReturn=true),'true','false')};
                    //alert(excludeBTP);
                    // btp
                    if ($('[data-id="bcheck"]').prop('checked') == false && excludeBTP == false) { 
                     //   approvalMessage = true;
                    }
                    
                    // ptp
                    if ($('[data-id="pcheck"]').prop('checked') == false) { 
                      //  approvalMessage = true;
                    }
                    
                    // adv
                    if ($('[data-id="acheck"]').prop('checked') == false) { 
                     //   approvalMessage = true;
                    }
                    
                    // 1800 access
                    if ($('[data-id="01tf1000003JjrwAACcheck"]').prop('checked') == false) { 
                     //   approvalMessage = true;
                    }
                    
                    if (approvalMessage) {
                        $('#approvalwarning').show();
                        $('[data-id="bdloverride"]').val('yes');
                    } else {
                        $('#approvalwarning').hide();
                        $('[data-id="bdloverride"]').val('no');
                    }
                    
                    return approvalMessage;
                    
                }
                
                function updateFinance() {
                    
                    updateProductTotal();
                    
                }
                
                function updateFromWSG() {
                    
                    if ($('[data-id="01tf1000003JjruAACcheck"]').length) {
                    
                        var wsgTmp = $('[data-id="WebsiteSellingGoods"]').val();
                        
                        var tmpName = $('[data-id="01tf1000003JjrrAACcheck"]').attr('name');
                        
                        var res = tmpName.replace(/:/g, "");
                        
                        tmpName = res.toLowerCase();
                        
                        if (wsgTmp == 'Yes') {
                        
                            if ($('[data-id="01tf1000003JjrrAACcheck"]').prop('checked')) {
                            
                            } else {
                            
                                $('#ProdCust').hide();
                                $('.prodgroup').show();
                            
                                $('[data-id="01tf1000003JjrrAACcheck"]').prop('checked', true);
                                //$('.custom-form-checkbox.'+tmpName).trigger("click");
                                
                            }
                        
                        }
                    
                    }
                    
                    updateProductTotal();
                    
                }
                
                function updateFromET() {
                
                    var entTmp = $('[data-id="EntityType"]').val();
                
                    if ($('[data-id="01tf1000003JjruAACcheck"]').length) {
                    
                        var tmpName = $('[data-id="01tf1000003JjruAACcheck"]').attr('name');
                    
                        var res = tmpName.replace(/:/g, "");
                        
                        tmpName = res.toLowerCase();
                        
                        //alert('.custom-form-checkbox.'+tmpName);
                        if (entTmp == 'Non-Profit') {
                        
                            //$('#ProductStep2').show();                   
                            $('#ProdCust').hide();
                            $('.prodgroup').show();
                        
                            // uncheck btp
                            if ($('[data-id="bcheck"]').prop('checked')) {
    
                                //$('.custom-form-checkbox.j_id0theformbcheck').trigger("click");
                                $('[data-id="bcheck"]').prop('checked', false);
                                
                            } 
    
                            // check non profit btp
                            if ($('[data-id="01tf1000003JjruAACcheck"]').prop('checked')) {
                            
                            } else {
                                //$('.custom-form-checkbox.'+tmpName).trigger("click");
                                $('[data-id="01tf1000003JjruAACcheck"]').prop('checked', true);
                            }
                            
                            //$('#ProductStep2').hide();
                        
                        }
                    
                    } 
                    
                    if ($('[data-id="paycheck"]').length) {
                        if (entTmp == 'S Corporation') {
                    
                            // check non payroll monthly
                            if ($('[data-id="paycheck"]').prop('checked')) {
                            
                            } else {
                            
                                $('#ProdCust').hide();
                                $('.prodgroup').show();
                            
                                //$('.custom-form-checkbox.j_id0theformpaycheck').trigger("click");
                                $('[data-id="paycheck"]').prop('checked', true);
                                
                            }
                        
                        }
                    } 
                    
                    updateProductTotal();
                
                }
                
                function getBundlePrice(calcID) {
                    
                    var bundleSel = $('[data-id="bundlecheck"]').val();
                    
                    var returnVal = false;
                       
                    <apex:repeat var="bundleOne" value="{!offerProductList}" >
                        
                        if ('{!bundleOne.calcId}' == calcID && bundleSel == '{!bundleOne.offerId}' && {!bundleOne.usePricebook} == false) {
                            
                            var tmpAmount = document.getElementById('holdOfferTotal').value;
                            
                            //tmpAmount.replace('$', '');
                            
                            tmpAmount = parseFloat(tmpAmount) + parseFloat({!bundleOne.amount});

                            document.getElementById('holdOfferTotal').value = parseFloat(tmpAmount).toFixed(2);
                            
                            return {!bundleOne.amount};
                            
                        }
                        
                    </apex:repeat>
                    
                    return false;
                    
                }
                
                function getIsBundle(calcID) {
                    
                    var bundleSel = $('[data-id="bundlecheck"]').val();
                    
                    var returnVal = false;
                       
                    <apex:repeat var="bundleOne" value="{!offerProductList}" >
                        
                        if ('{!bundleOne.calcId}' == calcID && bundleSel == '{!bundleOne.offerId}') {
                            
                            return true;
                            
                        }
                        
                    </apex:repeat>
                    
                    return false;
                    
                }
                
                function getIsBundleDelay(calcID) {
                    
                    var bundleSel = $('[data-id="bundlecheck"]').val();
                    
                    var returnVal = false;
                       
                    <apex:repeat var="bundleOne" value="{!offerProductList}" >
                        
                        if ('{!bundleOne.calcId}' == calcID && bundleSel == '{!bundleOne.offerId}' && {!bundleOne.delayDays} > 0) {
                            
                            return true;
                            
                        }
                        
                    </apex:repeat>
                    
                    return false;
                    
                }
                
                function updateBundle() {
                
                    //return false;
                
                    // clear checkboxes
                    $('[data-id="bcheck"]').prop('checked', false);
                    $('[data-id="pcheck"]').prop('checked', false);
                    $('[data-id="paycheck"]').prop('checked', false);
                    $('[data-id="acheck"]').prop('checked', false);
                    $('[data-id="bkcheck"]').prop('checked', false);
                    $('[data-id="sfcheck"]').prop('checked', false);
                    $('[data-id="sfccheck"]').prop('checked', false);
                    $('[data-id="bbkcheck"]').prop('checked', false);
                    $('[data-id="fscheck"]').prop('checked', false);
                    $('[data-id="bpycheck"]').prop('checked', false);
                    $('[data-id="bbcheck"]').prop('checked', false);
                    $('[data-id="bpcheck"]').prop('checked', false);
                    $('[data-id="npbcheck"]').prop('checked', false);
                    
                    // now add a la carte items
                    <apex:repeat var="acOne" value="{!acList}" >
                    
                        $('[data-id="{!acOne.id}check"]').prop('checked', false);
                                
                    </apex:repeat>
                
                    var bundleSel = '';
                
                    //var bundleHold = $('[name="{!$Component.theForm.bundlecheck}"]');
                    //for (var x = 0; x < bundleHold.length; x++)
                    //{

                    //    if (bundleHold[x].checked) {
                            
                    //        bundleSel = bundleHold[x].value;
                            //alert('You checked : ' + bundleHold[x].value);

                    //    }

                    //}
                    
                    bundleSel = $('[data-id="bundlecheck"]').val();
                    
                    <apex:repeat var="bundleOne" value="{!offerProductList}" >
                    
                        if ('{!bundleOne.offerId}' == bundleSel) {
                        
                            $('[data-id="{!bundleOne.calcId}"]').prop('checked', true);
                            
                        }
                        
                        if ($('[data-id="{!bundleOne.calcId}"]').prop('checked') == false) {
                        
                            if ({!bundleOne.upsell} == false) {
                        
                                approvalMessage = true;
                            
                            }
                            
                        }
                        
                    </apex:repeat>

                    var entityTypeCheck = $('[data-id="EntityType"]').val();
                    
                    switch (bundleSel) {
                        case 'None':
                            // dont need to do anything, everything is unchecked
                            break;
                        case 'Basic Accounting':
                        
                            break;
                        case 'BTP Basic Accounting':
                        
                            break;
                        case 'BTP Pro Accounting':
                            
                            break;
                        case 'Dissolution & Final Return':
                        
                            break;
                        case 'Non-Profit Tax Prep & Tax Advisory':
                        
                            break;
                        case 'Personal Basic Accounting':
                        
                            break;
                        case 'Pro Accounting':
                        
                            break;
                        case 'Sprout Growth':
                                $('#ProdCust').hide();
                                $('.prodgroup').show();
                            break;
                        case 'Sprout Advantage':
                                $('#ProdCust').hide();
                                $('.prodgroup').show();
                            break;
                        case 'Sprout Opportunity':
                                $('#ProdCust').hide();
                                $('.prodgroup').show();
                            break;
                        default:
                            $('#ProdCust').hide();
                            $('.prodgroup').show();
                        break;
                    }
                    
                    if ($('[data-id="01tf1000004hsUWAAYcheck"]').prop('checked')) {
                    
                        if (entityTypeCheck == 'Single Member LLC' || entityTypeCheck == 'LLC') {
                            $('[data-id="sfcheck"]').prop('checked', true);
                            $('[data-id="sfccheck"]').prop('checked', false);
                        } else {
                            $('[data-id="sfcheck"]').prop('checked', false);
                            $('[data-id="sfccheck"]').prop('checked', true);
                        }
                    
                    }

                    //alert(bundleSel);
                    updateProductTotal();
                
                }
                
                function updateProductTotal() {
                
                    var tmpVal = '';
                    
                    document.getElementById('holdOfferTotal').value = parseFloat(0).toFixed(2);
                
                    // link state filing and entity formation
                    if ($('[data-id="sfcheck"]').prop('checked') || $('[data-id="sfccheck"]').prop('checked')) {
                        $('[data-id="01tf1000004hsUWAAYcheck"]').prop('checked', true);
                    } else {
                        $('[data-id="01tf1000004hsUWAAYcheck"]').prop('checked', false);
                    }
                    
                    var entTmp = $('[data-id="EntityType"]').val();
                    
                    if (entTmp != 'Personal Only') {
                        $('[data-id="01tf1000004sVDeAAMcheck"]').prop('checked', false);
                        $('[data-id="01tf1000004sVDeAAMcontainacone"]').hide();
                    } else {
                        $('[data-id="01tf1000004sVDeAAMcontainacone"]').show();
                        $('[data-id="01tf1000004sVDeAAMcontainacone"]').css("display","block");
                    }
                    
                    // link payroll to payroll setup fee if run payroll before is No
                    if ($('[data-id="paycheck"]').prop('checked')) {
                        
                        // need some logic here for uat vs prod id
                        tmpVal = $('[data-id="RunPayrollBefore"]').val();
                        
                        if (tmpVal == 'No') {
                            
                            $('[data-id="01t2h000001O6MDAA0check"]').prop('checked', true);
                            $('[data-id="01t3Z000004bnnIQAQcheck"]').prop('checked', true);
                            
                        } else {
                        
                            $('[data-id="01t2h000001O6MDAA0check"]').prop('checked', false);
                            $('[data-id="01t3Z000004bnnIQAQcheck"]').prop('checked', false);
                        
                        }
                        
                    } else {
                    
                        $('[data-id="01t2h000001O6MDAA0check"]').prop('checked', false);
                        $('[data-id="01t3Z000004bnnIQAQcheck"]').prop('checked', false);
                        
                    }
                   
                    // enforce platform access
                    if (1 == {!IF((hasPlatformAccess=true),"0","1")}) {
                        if ($('[data-id="bcheck"]').prop('checked') && $('[data-id="acheck"]').prop('checked')) 
                        {
                            $('[data-id="01tf1000003JjrwAACcheck"]').prop('checked', true);
                        }
                    }
                    
                    // link templated website with maintenance and management and CMS hosting
                    if ($('[data-id="01t3Z000004boGhQAIcheck"]').prop('checked')) {
                    
                        // maintenance and management
                        $('[data-id="01t3Z000004boGrQAIcheck"]').prop('checked', true);
                        
                        // website builder (cms hosting)
                        $('[data-id="01t3Z000004boGnQAIcheck"]').prop('checked', true);
                        
                    }
                    
                    if ($('[data-id="01t3Z000004boGmQAIcheck"]').prop('checked')) {
                    
                        // maintenance and management
                        $('[data-id="01t3Z000004boGrQAIcheck"]').prop('checked', true);
                        
                        // website builder (cms hosting)
                        $('[data-id="01t3Z000004boGnQAIcheck"]').prop('checked', true);
                        
                    }
                    
                    // link maintenance and management with CMS hosting if neither CMS hosting or templated website is not selected
                    if ($('[data-id="01t3Z000004boGrQAIcheck"]').prop('checked')) {
                        
                        if ($('[data-id="01t3Z000004boGmQAIcheck"]').prop('checked') == false && $('[data-id="01t3Z000004boGhQAIcheck"]').prop('checked') == false && $('[data-id="01t3Z000004boGnQAIcheck"]').prop('checked') == false) {
                            
                            // check website builder
                            $('[data-id="01t3Z000004boGnQAIcheck"]').prop('checked', true);
                            
                        }
                        
                    }
                    
                    // link expedited bookkeeping to another bookkeeping product
                    if ($('[data-id="01t5e000001uIPRAA2check"]').prop('checked')) {
                    
                        if ($('[data-id="bbkcheck"]').prop('checked') == false && $('[data-id="bkcheck"]').prop('checked') == false) {
                            
                            // uncheck expedited bookkeeping
                            $('[data-id="01t5e000001uIPRAA2check"]').prop('checked', false);
                            
                        }
                    
                    }
                    
                    
                    // calculate potential savings
                    var projProfit = '';
                    var entType = '';
                    var industry = '';
                    var numForOwners = '';
                    
                    projProfit = $('[data-id="ProjectedFirstYearProfit"]').val();
                    entType = $('[data-id="EntityType"]').val();
                    industry = $('[data-id="IndustryType"]').val();
                    numForOwners = $('[data-id="ForeignOwners"]').val();

                    //PricingCalcController.kobyTest(projProfit);

                    
                    switch (projProfit) {
                        case '5000':
                          //  $('[data-id="potentialSavings"]').val('459.00');
                        break;
                        case '10000':
                          //  $('[data-id="potentialSavings"]').val('918.00');
                        break;
                        case '25000':
                          //  $('[data-id="potentialSavings"]').val('2,295.00');
                        break;
                        case '50000':
                           // $('[data-id="potentialSavings"]').val('4,590.00');
                        break;
                        case '75000':
                          //  $('[data-id="potentialSavings"]').val('6,885.00');
                        break;
                        case '100000':
                           // $('[data-id="potentialSavings"]').val('9,180.00');
                        break;
                        case '150000':
                          //  $('[data-id="potentialSavings"]').val('12,877.20');
                        break;
                        case '250000':
                          //  $('[data-id="potentialSavings"]').val('17,307.20');
                        break;
                        case '500000':
                          //  $('[data-id="potentialSavings"]').val('22,557.20');
                        break;
                        case '1000000':
                          //  $('[data-id="potentialSavings"]').val('31,407.20');
                        break;
                        default:
                           // $('[data-id="potentialSavings"]').val('0.00');
                        break;
                    }
                    
                    // check industry
                    if (industry == 'Cryptocurrency' || industry == 'Investments' || industry == 'Not For Profit' || industry == 'Real Estate') {
                        //$('[data-id="potentialSavings"]').val('0.00');
                    }
                    
                    // check entity type
                    if (entType == 'S Corporation' || entType == 'C Corporation' || entType == 'Non-Profit') {
                        //$('[data-id="potentialSavings"]').val('0.00');
                    }
                    
                    // check foreign owners
                    if (numForOwners != '0') {
                        //$('[data-id="potentialSavings"]').val('0.00');
                    }
                    
                    if ($('[data-id="potentialSavings"]').val() == '0.00') {
                        // hide element
                        //$('#SavingsHolder').hide();
                    } else {
                        // show element
                        //$('#SavingsHolder').show();
                    }
                   
                    
                    {!IF((showBundles=true),"checkBundleApproval();","checkDefaultApproval();")}
                
                    var didCustomMsg = false;
                
                    var businessPrice = 0;
                    var businessQTY = $('[data-id="bqty"]').val();
                    var businessBundlePrice = getBundlePrice('bcheck');
                    
                    if (getIsBundle('bcheck') !== false) {
                        // unselect bundle of a necessary product is not selected
                        if ($('[data-id="bcheck"]').prop('checked')) {
                            
                        } else {
                            
                            $('[data-id="bundlecheck"]').val('None');
                            updateBundle();
                            
                        }
                    }
                    
                    var personalPrice = 0;
                    var personalQTY = $('[data-id="pqty"]').val();
                    var personalBundlePrice = getBundlePrice('pcheck');
                    
                    if (getIsBundle('pcheck') !== false) {
                        // unselect bundle of a necessary product is not selected
                        if ($('[data-id="pcheck"]').prop('checked')) {
                        
                        } else {
                            
                            $('[data-id="bundlecheck"]').val('None');
                            updateBundle();
                            
                        }
                    }
                    
                    var payrollPrice = 0;
                    var payrollQTY = $('[data-id="payqty"]').val();
                    var payrollFee = 0;
                    var payrollBundlePrice = getBundlePrice('paycheck');
                    
                    if (getIsBundle('paycheck') !== false) {
                        // unselect bundle of a necessary product is not selected
                        if ($('[data-id="paycheck"]').prop('checked')) {
                        
                        } else {
                            
                            $('[data-id="bundlecheck"]').val('None');
                            updateBundle();
                            
                        }
                    }
                    
                    var advisoryPrice = 0;
                    var advisoryQTY = $('[data-id="aqty"]').val();
                    var advisoryBundlePrice = getBundlePrice('acheck');
                    
                    if (getIsBundle('acheck') !== false) {
                        // unselect bundle of a necessary product is not selected
                        if ($('[data-id="acheck"]').prop('checked')) {
                        
                        } else {
                            
                            $('[data-id="bundlecheck"]').val('None');
                            updateBundle();
                            
                        }
                    }
                    
                    var bookkeepingPrice = 0;
                    var bookkeepingQTY = $('[data-id="bkqty"]').val();
                    var bookkeepingBundlePrice = getBundlePrice('bkcheck');
                    
                    if (getIsBundle('bkcheck') !== false) {
                        // unselect bundle of a necessary product is not selected
                        if ($('[data-id="bkcheck"]').prop('checked')) {
                        
                        } else {
                            
                            $('[data-id="bundlecheck"]').val('None');
                            updateBundle();
                            
                        }
                    }
                    
                    var stateFilingPrice = 0;
                    var stateFilingQTY = $('[data-id="sfqty"]').val();
                    var stateFilingBundlePrice = getBundlePrice('sfcheck');
                    
                    if (getIsBundle('sfcheck') !== false) {
                        // unselect bundle of a necessary product is not selected
                        if ($('[data-id="sfcheck"]').prop('checked')) {
                        
                        } else {
                            
                            $('[data-id="bundlecheck"]').val('None');
                            updateBundle();
                            
                        }
                    }
                    
                    var stateFilingCorpPrice = 0;
                    var stateFilingCorpQTY = $('[data-id="sfcqty"]').val();
                    var stateFilingCorpBundlePrice = getBundlePrice('sfccheck');
                    
                    if (getIsBundle('sfccheck') !== false) {
                        // unselect bundle of a necessary product is not selected
                        if ($('[data-id="sfccheck"]').prop('checked')) {
                        
                        } else {
                            
                            $('[data-id="bundlecheck"]').val('None');
                            updateBundle();
                            
                        }
                    }
                    
                    var backBookkeepingPrice = 0;
                    var backBookkeepingQTY = $('[data-id="bbkqty"]').val();
                    var backBookkeepingBundlePrice = getBundlePrice('bbkcheck');
                    
                    if (getIsBundle('bbkcheck') !== false) {
                        // unselect bundle of a necessary product is not selected
                        if ($('[data-id="bbkcheck"]').prop('checked')) {
                        
                        } else {
                            
                            $('[data-id="bundlecheck"]').val('None');
                            updateBundle();
                            
                        }
                    }
                    
                    var foreignStatePrice = 0;
                    var foreignStateQTY = $('[data-id="fsqty"]').val();
                    var foreignStateBundlePrice = getBundlePrice('fscheck');
                    
                    if (getIsBundle('fscheck') !== false) {
                        // unselect bundle of a necessary product is not selected
                        if ($('[data-id="fscheck"]').prop('checked')) {
                        
                        } else {
                            
                            $('[data-id="bundlecheck"]').val('None');
                            updateBundle();
                            
                        }
                    }
                    
                    var backPayrollPrice = 0;
                    var backPayrollQTY = $('[data-id="bpyqty"]').val();
                    var backPayrollBundlePrice = getBundlePrice('bpycheck');
                    
                    if (getIsBundle('bpycheck') !== false) {
                        // unselect bundle of a necessary product is not selected
                        if ($('[data-id="bpycheck"]').prop('checked')) {
                        
                        } else {
                            
                            $('[data-id="bundlecheck"]').val('None');
                            updateBundle();
                            
                        }
                    }
                    
                    var backBusinessPrice = 0;
                    var backBusinessQTY = $('[data-id="bbqty"]').val();
                    var backBusinessBundlePrice = getBundlePrice('bbcheck');
                    
                    if (getIsBundle('bbcheck') !== false) {
                        // unselect bundle of a necessary product is not selected
                        if ($('[data-id="bbcheck"]').prop('checked')) {
                        
                        } else {
                            
                            $('[data-id="bundlecheck"]').val('None');
                            updateBundle();
                            
                        }
                    }
                    
                    var backPersonalPrice = 0;
                    var backPersonalQTY = $('[data-id="bpqty"]').val();
                    var backPersonalBundlePrice = getBundlePrice('bpcheck');
                    
                    if (getIsBundle('bpcheck') !== false) {
                        // unselect bundle of a necessary product is not selected
                        if ($('[data-id="bpcheck"]').prop('checked')) {
                        
                        } else {
                            
                            $('[data-id="bundlecheck"]').val('None');
                            updateBundle();
                            
                        }
                    }
                    
                    var nonProfitBookkeepingPrice = 0;
                    var nonProfitBookkeepingQTY = $('[data-id="npbqty"]').val();
                    var nonProfitBookkeepingBundlePrice = getBundlePrice('npbcheck');
                    
                    if (getIsBundle('npbcheck') !== false) {
                        // unselect bundle of a necessary product is not selected
                        if ($('[data-id="npbcheck"]').prop('checked')) {
                        
                        } else {
                            
                            $('[data-id="bundlecheck"]').val('None');
                            updateBundle();
                            
                        }
                    }
                    
                    var totalPrice = 0;
                    var totalPriceMonth = 0;
                    var tmpACPrice = 0;
                    
                    // check override amounts
                    <apex:repeat var="orOne" value="{!overrideList}" >
                        
                        if ('Business Return' == '{!orOne.productPostion}') {
                            businessPrice = {!orOne.amount};
                        }
                        
                        if ('Personal Return' == '{!orOne.productPostion}') {
                            personalPrice = {!orOne.amount};
                        }
                        
                        if ('Payroll' == '{!orOne.productPostion}') {
                            payrollPrice = {!orOne.amount};
                        }
                        
                        if ('Bookkeeping' == '{!orOne.productPostion}') {
                            bookkeepingPrice = {!orOne.amount};
                        }
                        
                        if ('LLC State Filing' == '{!orOne.productPostion}') {
                            stateFilingPrice = {!orOne.amount};
                        }
                        
                        if ('Corp State Filing' == '{!orOne.productPostion}') {
                            stateFilingCorpPrice = {!orOne.amount};
                        }
                        
                        if ('Back Bookkeeping' == '{!orOne.productPostion}') {
                            backBookkeepingPrice = {!orOne.amount};
                        }
                        
                        if ('Foreign State' == '{!orOne.productPostion}') {
                            foreignStatePrice = {!orOne.amount};
                        }
                        
                        if ('Back Quarterly Payroll' == '{!orOne.productPostion}') {
                            backPayrollPrice = {!orOne.amount};
                        }
                        
                        if ('Back Business Return' == '{!orOne.productPostion}') {
                            backBusinessPrice = {!orOne.amount};
                        }
                        
                        if ('Back Personal Return' == '{!orOne.productPostion}') {
                            backPersonalPrice = {!orOne.amount};
                        }
                        
                        if ('Non-Profit Bookkeeping' == '{!orOne.productPostion}') {
                            nonProfitBookkeepingPrice = {!orOne.amount};
                        }
                        
                    </apex:repeat>
                    
                    var totalFinanceTrack = 0;
                    
                    var totalTotalPrice = 0;
                    var totalTodayPrice = 0;
                    
                    var subtractDelayPrice = 0;
                    var subtractMonthlyDelayPrice = 0;
                    var subtractFinanceDelayPrice = 0;
                    
                    var tmpDiscountQty = 0;
                    //var tmpTotalDiscountQty = 0;
                    
                    var financeSel = $('[data-id="financecheck"]').val();
                    
                    
                    
                    var bundleSel = $('[data-id="bundlecheck"]').val();
                    
                    var count = 0;
                    
                    <apex:repeat var="adjustOne" value="{!adjustList}" >
                        
                        tmpVal = $('[data-id="{!adjustOne.field}"]').val();
                        //tmpVal = document.getElementById('{!adjustOne.field}').value;
                        
                        if (tmpVal == '{!adjustOne.value}') {
                            //alert("{!adjustOne.field}");
                            if ('{!adjustOne.value}' == '13+' || '{!adjustOne.value}' == '10+' || '{!adjustOne.value}' == '21+' || '{!adjustOne.value}' == '41+') {
                                
                                if (didCustomMsg == false) {
                                    alert('This client requires a custom pricing quote.');
                                    didCustomMsg = true;
                                }
                                
                            }
                            
                            if ({!adjustOne.setupFee}) {
                                switch('{!adjustOne.product}') {
                                  case 'Business Return':
                                    //businessPrice = businessPrice + {!adjustOne.amount};
                                    break;
                                  case 'Personal Return':
                                    //personalPrice = personalPrice + {!adjustOne.amount};
                                    break;
                                  case 'Payroll':
                                    payrollFee = payrollFee + {!adjustOne.amount};
                                    break;
                                  case 'Bookkeeping':
                                    //bookkeepingPrice = bookkeepingPrice + {!adjustOne.amount};
                                    break;
                                  case 'LLC State Filing':
                                    //stateFilingPrice = stateFilingPrice + {!adjustOne.amount};
                                    break;
                                  case 'Corp State Filing':
                                    //stateFilingCorpPrice = stateFilingCorpPrice + {!adjustOne.amount};
                                    break;
                                  case 'Back Bookkeeping':
                                    //backBookkeepingPrice = backBookkeepingPrice + {!adjustOne.amount};
                                    break;
                                  case 'Foreign State':
                                    //foreignStatePrice = foreignStatePrice + {!adjustOne.amount};
                                    break;
                                  case 'Back Quarterly Payroll':
                                    //backPayrollPrice = backPayrollPrice + {!adjustOne.amount};
                                    break;
                                  case 'Back Business Return':
                                    //backBusinessPrice = backBusinessPrice + {!adjustOne.amount};
                                    break;
                                  case 'Back Personal Return':
                                    //backPersonalPrice = backPersonalPrice + {!adjustOne.amount};
                                    break;
                                  case 'Non-Profit Bookkeeping':
                                    //nonProfitBookkeepingPrice = nonProfitBookkeepingPrice + {!adjustOne.amount};
                                    break;
                                  default:
                                    // code block
                                }
                            } else {
                                switch('{!adjustOne.product}') {
                                  case 'Business Return':
                                    businessPrice = businessPrice + {!adjustOne.amount};
                                    //alert(businessPrice);
                                    break;
                                  case 'Personal Return':
                                    personalPrice = personalPrice + {!adjustOne.amount};
                                    break;
                                  case 'Payroll':
                                    payrollPrice = payrollPrice + {!adjustOne.amount};
                                    break;
                                  case 'Bookkeeping':
                                    bookkeepingPrice = bookkeepingPrice + {!adjustOne.amount};
                                    break;
                                  case 'LLC State Filing':
                                    stateFilingPrice = stateFilingPrice + {!adjustOne.amount};
                                    break;
                                  case 'Corp State Filing':
                                    stateFilingCorpPrice = stateFilingCorpPrice + {!adjustOne.amount};
                                    break;
                                  case 'Back Bookkeeping':
                                    backBookkeepingPrice = backBookkeepingPrice + {!adjustOne.amount};
                                    break;
                                  case 'Foreign State':
                                    foreignStatePrice = foreignStatePrice + {!adjustOne.amount};
                                    break;
                                  case 'Back Quarterly Payroll':
                                    backPayrollPrice = backPayrollPrice + {!adjustOne.amount};
                                    break;
                                  case 'Back Business Return':
                                    backBusinessPrice = backBusinessPrice + {!adjustOne.amount};
                                    break;
                                  case 'Back Personal Return':
                                    backPersonalPrice = backPersonalPrice + {!adjustOne.amount};
                                    break;
                                  case 'Non-Profit Bookkeeping':
                                    nonProfitBookkeepingPrice = nonProfitBookkeepingPrice + {!adjustOne.amount};
                                    break;
                                  default:
                                    // code block
                                }
                            }
                            
                            
                            
                        }      
                                
                    </apex:repeat>
                    
                    //alert(count);
                    
                    var tmpPriceMon = 0;
                    
                    advisoryPrice = ((businessPrice + personalPrice) / (815 + 365)) * 1125;
                    
                    if (businessBundlePrice !== false) {
                        
                        businessPrice = businessBundlePrice;
                        
                    }
                    
                    if (personalBundlePrice !== false) {
                        
                        personalPrice = personalBundlePrice;
                        
                    }
                    
                    if (payrollBundlePrice !== false) {
                        
                        payrollPrice = payrollBundlePrice;
                        
                    }
                    
                    if (advisoryBundlePrice !== false) {
                        
                        advisoryPrice = advisoryBundlePrice;
                        
                    }
                    
                    if (bookkeepingBundlePrice !== false) {
                        
                        bookkeepingPrice = bookkeepingBundlePrice;
                        
                    }
                    
                    if (stateFilingBundlePrice !== false) {
                        
                        stateFilingPrice = stateFilingBundlePrice;
                        
                    }
                    
                    if (stateFilingCorpBundlePrice !== false) {
                        
                        stateFilingCorpPrice = stateFilingCorpBundlePrice;
                        
                    }
                    
                    if (backBookkeepingBundlePrice !== false) {
                        
                        backBookkeepingPrice = backBookkeepingBundlePrice;
                        
                    }
                    
                    if (foreignStateBundlePrice !== false) {
                        
                        foreignStatePrice = foreignStateBundlePrice;
                        
                    }
                    
                    if (backPayrollBundlePrice !== false) {
                        
                        backPayrollPrice = backPayrollBundlePrice;
                        
                    }
                    
                    if (backBusinessBundlePrice !== false) {
                        
                        backBusinessPrice = backBusinessBundlePrice;
                        
                    }
                    
                    if (backPersonalBundlePrice !== false) {
                        
                        backPersonalPrice = backPersonalBundlePrice;
                        
                    }
                    
                    if (nonProfitBookkeepingBundlePrice !== false) {
                        
                        nonProfitBookkeepingPrice = nonProfitBookkeepingBundlePrice;
                        
                    }
                    
                    // set values
                    if ($('[data-id="btime"]').val() == 'Monthly') {
                    
                        if ($('#btimedef').val() == 'Monthly') {
                    
                            document.getElementById('bTotalMonth').value = '$'+parseFloat(businessPrice).toFixed(2);
                            document.getElementById('bTotal').value = '-';
                            
                        } else {
                        
                            document.getElementById('bTotalMonth').value = '$'+parseFloat(businessPrice / 12).toFixed(2);
                            document.getElementById('bTotal').value = '-';
                        
                        }
                        
                    } else {
                    
                        tmpPriceMon = (businessPrice / 12) * 1.2;
                    
                        if (financeSel == 'mon' && {!bizTaxPrepNoSplit} == false) {
                        
                            if ($('#btimedef').val() == 'Monthly') {
                                document.getElementById('bTotalMonth').value = '$'+parseFloat(businessPrice).toFixed(2);
                                document.getElementById('bTotal').value = '-';
                            } else {
                                document.getElementById('bTotalMonth').value = '$'+parseFloat(tmpPriceMon).toFixed(2);
                                document.getElementById('bTotal').value = '-';
                            }

                        } else {
                        
                            if ($('#btimedef').val() == 'Monthly') {
                                document.getElementById('bTotalMonth').value = '-';
                                document.getElementById('bTotal').value = '$'+parseFloat(businessPrice * 11).toFixed(2);
                            } else {
                                document.getElementById('bTotalMonth').value = '-';
                                document.getElementById('bTotal').value = '$'+parseFloat(businessPrice).toFixed(2);
                            }

                        }
                    
                    }
                    
                    if ($('[data-id="ptime"]').val() == 'Monthly') {
                    
                        if ($('#ptimedef').val() == 'Monthly') {
                    
                            document.getElementById('pTotalMonth').value = '$'+parseFloat(personalPrice).toFixed(2);
                            document.getElementById('pTotal').value = '-';
                            
                        } else {
                        
                            document.getElementById('pTotalMonth').value = '$'+parseFloat(personalPrice / 12).toFixed(2);
                            document.getElementById('pTotal').value = '-';
                        
                        }
                      
                    } else {
                    
                        tmpPriceMon = (personalPrice / 12) * 1.2;
                        
                        if (financeSel == 'mon' && {!personalTaxPrepNoSplit} == false) {
                        
                            if ($('#ptimedef').val() == 'Monthly') {
                                document.getElementById('pTotalMonth').value = '$'+parseFloat(personalPrice).toFixed(2);
                                document.getElementById('pTotal').value = '-';
                            } else {
                                document.getElementById('pTotalMonth').value = '$'+parseFloat(tmpPriceMon).toFixed(2);
                                document.getElementById('pTotal').value = '-';
                            }
                        
                        } else {
                        
                            if ($('#ptimedef').val() == 'Monthly') {
                                document.getElementById('pTotalMonth').value = '-';
                                document.getElementById('pTotal').value = '$'+parseFloat(personalPrice * 11).toFixed(2);
                            } else {
                                document.getElementById('pTotalMonth').value = '-';
                                document.getElementById('pTotal').value = '$'+parseFloat(personalPrice).toFixed(2);
                            }

                        }

                    }
                    
                    if ($('[data-id="atime"]').val() == 'Monthly') {
                    
                        if ($('#atimedef').val() == 'Monthly') {
                    
                            document.getElementById('taTotalMonth').value = '$'+parseFloat(advisoryPrice).toFixed(2);
                            document.getElementById('taTotal').value = '-';
                            
                        } else {
                        
                            document.getElementById('taTotalMonth').value = '$'+parseFloat(advisoryPrice / 12).toFixed(2);
                            document.getElementById('taTotal').value = '-';
                        
                        }

                    } else {
                    
                        tmpPriceMon = (advisoryPrice / 12) * 1.2;
                    
                        if (financeSel == 'mon' && {!taxAdvisoryNoSplit} == false) {
                        
                            if ($('#atimedef').val() == 'Monthly') {
                                document.getElementById('taTotalMonth').value = '$'+parseFloat(advisoryPrice).toFixed(2);
                                document.getElementById('taTotal').value = '-';
                            } else {
                                document.getElementById('taTotalMonth').value = '$'+parseFloat(tmpPriceMon).toFixed(2);
                                document.getElementById('taTotal').value = '-';
                            }

                        } else {
                        
                            if ($('#atimedef').val() == 'Monthly') {
                                document.getElementById('taTotalMonth').value = '-';
                                document.getElementById('taTotal').value = '$'+parseFloat(advisoryPrice * 11).toFixed(2);
                            } else {
                                document.getElementById('taTotalMonth').value = '-';
                                document.getElementById('taTotal').value = '$'+parseFloat(advisoryPrice).toFixed(2);
                            }
                        
                        }

                    }
                    
                    if ($('[data-id="paytime"]').val() == 'Monthly') {
                    
                        if ($('#paytimedef').val() == 'Monthly') {
                    
                            document.getElementById('payTotalMonth').value = '$'+parseFloat(payrollPrice).toFixed(2);
                            document.getElementById('payTotal').value = '-';
                            
                        } else {
                        
                            document.getElementById('payTotalMonth').value = '$'+parseFloat(payrollPrice / 12).toFixed(2);
                            document.getElementById('payTotal').value = '-';
                        
                        }
                        
                        if (payrollFee > 0) {
                        
                            document.getElementById('payTotal').value = '$'+parseFloat(payrollFee).toFixed(2);
                            
                        }
                        
                    } else {
                    
                        tmpPriceMon = (payrollPrice / 12) * 1.2;
                        
                        if (financeSel == 'mon') {
                        
                            if ($('#paytimedef').val() == 'Monthly') {
                                document.getElementById('payTotalMonth').value = '$'+parseFloat(payrollPrice).toFixed(2);
                                document.getElementById('payTotal').value = '-';
                            } else {
                                document.getElementById('payTotalMonth').value = '$'+parseFloat(tmpPriceMon).toFixed(2);
                                document.getElementById('payTotal').value = '-';
                            }
                            
                            if (payrollFee > 0) {
                        
                                document.getElementById('payTotal').value = '$'+parseFloat(payrollFee).toFixed(2);
                                
                            }

                        } else {
                        
                            if ($('#paytimedef').val() == 'Monthly') {
                                document.getElementById('payTotalMonth').value = '-';
                                document.getElementById('payTotal').value = '$'+parseFloat((payrollPrice * 11) + payrollFee).toFixed(2);
                            } else {
                                document.getElementById('payTotalMonth').value = '-';
                                document.getElementById('payTotal').value = '$'+parseFloat(payrollPrice + payrollFee).toFixed(2);
                            }

                        }
                    
                    }
                    
                    if ($('[data-id="bktime"]').val() == 'Monthly') {
                    
                        if ($('#bktimedef').val() == 'Monthly') {
                    
                            document.getElementById('bkTotalMonth').value = '$'+parseFloat(bookkeepingPrice).toFixed(2);
                            document.getElementById('bkTotal').value = '-';
                            
                        } else {
                        
                            document.getElementById('bkTotalMonth').value = '$'+parseFloat(bookkeepingPrice / 12).toFixed(2);
                            document.getElementById('bkTotal').value = '-';
                        
                        }
                        
                    } else {
                    
                        tmpPriceMon = (bookkeepingPrice / 12) * 1.2;
                        
                        if (financeSel == 'mon' && {!bookkeepingNoSplit} == false) {
                        
                            if ($('#bktimedef').val() == 'Monthly') {
                                document.getElementById('bkTotalMonth').value = '$'+parseFloat(bookkeepingPrice).toFixed(2);
                                document.getElementById('bkTotal').value = '-';
                            } else {
                                document.getElementById('bkTotalMonth').value = '$'+parseFloat(tmpPriceMon).toFixed(2);
                                document.getElementById('bkTotal').value = '-';
                            }

                        } else {
                        
                            if ($('#bktimedef').val() == 'Monthly') {
                                document.getElementById('bkTotalMonth').value = '-';
                                document.getElementById('bkTotal').value = '$'+parseFloat(bookkeepingPrice * 11).toFixed(2);
                            } else {
                                document.getElementById('bkTotalMonth').value = '-';
                                document.getElementById('bkTotal').value = '$'+parseFloat(bookkeepingPrice).toFixed(2);
                            }

                        }

                    }
                    
                    if ($('[data-id="sftime"]').val() == 'Monthly') {
                    
                        if ($('#sftimedef').val() == 'Monthly') {
                    
                            document.getElementById('sfTotalMonth').value = '$'+parseFloat(stateFilingPrice).toFixed(2);
                            document.getElementById('sfTotal').value = '-';
                            
                        } else {
                        
                            document.getElementById('sfTotalMonth').value = '$'+parseFloat(stateFilingPrice / 12).toFixed(2);
                            document.getElementById('sfTotal').value = '-';
                        
                        }
                        
                    } else {
                    
                        tmpPriceMon = (stateFilingPrice / 12) * 1.2;
                        
                        if (financeSel == 'mon' && {!stateFilingNoSplit} == false) {
                        
                            if ($('#sftimedef').val() == 'Monthly') {
                                document.getElementById('sfTotalMonth').value = '$'+parseFloat(stateFilingPrice).toFixed(2);
                                document.getElementById('sfTotal').value = '-';
                            } else {
                                document.getElementById('sfTotalMonth').value = '$'+parseFloat(tmpPriceMon).toFixed(2);
                                document.getElementById('sfTotal').value = '-';
                            }

                        } else {
                        
                            if ($('#sftimedef').val() == 'Monthly') {
                                document.getElementById('sfTotalMonth').value = '-';
                                document.getElementById('sfTotal').value = '$'+parseFloat(stateFilingPrice * 11).toFixed(2);
                            } else {
                                document.getElementById('sfTotalMonth').value = '-';
                                document.getElementById('sfTotal').value = '$'+parseFloat(stateFilingPrice).toFixed(2);
                            }

                        }

                    }
                    
                    if ($('[data-id="sfctime"]').val() == 'Monthly') {
                    
                        if ($('#sfctimedef').val() == 'Monthly') {
                    
                            document.getElementById('sfcTotalMonth').value = '$'+parseFloat(stateFilingCorpPrice).toFixed(2);
                            document.getElementById('sfcTotal').value = '-';
                            
                        } else {
                        
                            document.getElementById('sfcTotalMonth').value = '$'+parseFloat(stateFilingCorpPrice / 12).toFixed(2);
                            document.getElementById('sfcTotal').value = '-';
                        
                        }
                        
                    } else {
                    
                        tmpPriceMon = (stateFilingCorpPrice / 12) * 1.2;
                        
                        if (financeSel == 'mon' && {!stateFilingCorpNoSplit} == false) {
                        
                            if ($('#sfctimedef').val() == 'Monthly') {
                                document.getElementById('sfcTotalMonth').value = '$'+parseFloat(stateFilingCorpPrice).toFixed(2);
                                document.getElementById('sfcTotal').value = '-';
                            } else {
                                document.getElementById('sfcTotalMonth').value = '$'+parseFloat(tmpPriceMon).toFixed(2);
                                document.getElementById('sfcTotal').value = '-';
                            }

                        } else {
                        
                            if ($('#sfctimedef').val() == 'Monthly') {
                                document.getElementById('sfcTotalMonth').value = '-';
                                document.getElementById('sfcTotal').value = '$'+parseFloat(stateFilingCorpPrice * 11).toFixed(2);
                            } else {
                                document.getElementById('sfcTotalMonth').value = '-';
                                document.getElementById('sfcTotal').value = '$'+parseFloat(stateFilingCorpPrice).toFixed(2);
                            }

                        }

                    }
                    
                    if ($('[data-id="bbktime"]').val() == 'Monthly') {
                    
                        if ($('#bbktimedef').val() == 'Monthly') {
                    
                            document.getElementById('bbkTotalMonth').value = '$'+parseFloat(backBookkeepingPrice).toFixed(2);
                            document.getElementById('bbkTotal').value = '-';
                            
                        } else {
                        
                            document.getElementById('bbkTotalMonth').value = '$'+parseFloat(backBookkeepingPrice / 12).toFixed(2);
                            document.getElementById('bbkTotal').value = '-';
                        
                        }
                        
                    } else {
                    
                        tmpPriceMon = (backBookkeepingPrice / 12) * 1.2;
                        
                        if (financeSel == 'mon' && {!backBookkeepingNoSplit} == false) {
                        
                            if ($('#bbktimedef').val() == 'Monthly') {
                                document.getElementById('bbkTotalMonth').value = '$'+parseFloat(backBookkeepingPrice).toFixed(2);
                                document.getElementById('bbkTotal').value = '-';
                            } else {
                                document.getElementById('bbkTotalMonth').value = '$'+parseFloat(tmpPriceMon).toFixed(2);
                                document.getElementById('bbkTotal').value = '-';
                            }

                        } else {
                        
                            if ($('#bbktimedef').val() == 'Monthly') {
                                document.getElementById('bbkTotalMonth').value = '-';
                                document.getElementById('bbkTotal').value = '$'+parseFloat(backBookkeepingPrice * 11).toFixed(2);
                            } else {
                                document.getElementById('bbkTotalMonth').value = '-';
                                document.getElementById('bbkTotal').value = '$'+parseFloat(backBookkeepingPrice).toFixed(2);
                            }

                        }

                    }
                    
                    if ($('[data-id="fstime"]').val() == 'Monthly') {
                    
                        if ($('#fstimedef').val() == 'Monthly') {
                    
                            document.getElementById('fsTotalMonth').value = '$'+parseFloat(foreignStatePrice).toFixed(2);
                            document.getElementById('fsTotal').value = '-';
                            
                        } else {
                        
                            document.getElementById('fsTotalMonth').value = '$'+parseFloat(foreignStatePrice / 12).toFixed(2);
                            document.getElementById('fsTotal').value = '-';
                        
                        }
                        
                    } else {
                    
                        tmpPriceMon = (foreignStatePrice / 12) * 1.2;
                        
                        if (financeSel == 'mon' && {!foreignStateNoSplit} == false) {
                        
                            if ($('#fstimedef').val() == 'Monthly') {
                                document.getElementById('fsTotalMonth').value = '$'+parseFloat(foreignStatePrice).toFixed(2);
                                document.getElementById('fsTotal').value = '-';
                            } else {
                                document.getElementById('fsTotalMonth').value = '$'+parseFloat(tmpPriceMon).toFixed(2);
                                document.getElementById('fsTotal').value = '-';
                            }

                        } else {
                        
                            if ($('#fstimedef').val() == 'Monthly') {
                                document.getElementById('fsTotalMonth').value = '-';
                                document.getElementById('fsTotal').value = '$'+parseFloat(foreignStatePrice * 11).toFixed(2);
                            } else {
                                document.getElementById('fsTotalMonth').value = '-';
                                document.getElementById('fsTotal').value = '$'+parseFloat(foreignStatePrice).toFixed(2);
                            }

                        }

                    }
                    
                    if ($('[data-id="bpytime"]').val() == 'Monthly') {
                    
                        if ($('#bpytimedef').val() == 'Monthly') {
                    
                            document.getElementById('bpyTotalMonth').value = '$'+parseFloat(backPayrollPrice).toFixed(2);
                            document.getElementById('bpyTotal').value = '-';
                            
                        } else {
                        
                            document.getElementById('bpyTotalMonth').value = '$'+parseFloat(backPayrollPrice / 12).toFixed(2);
                            document.getElementById('bpyTotal').value = '-';
                        
                        }
                        
                    } else {
                    
                        tmpPriceMon = (backPayrollPrice / 12) * 1.2;
                        
                        if (financeSel == 'mon' && {!backPayrollNoSplit} == false) {
                        
                            if ($('#bpytimedef').val() == 'Monthly') {
                                document.getElementById('bpyTotalMonth').value = '$'+parseFloat(backPayrollPrice).toFixed(2);
                                document.getElementById('bpyTotal').value = '-';
                            } else {
                                document.getElementById('bpyTotalMonth').value = '$'+parseFloat(tmpPriceMon).toFixed(2);
                                document.getElementById('bpyTotal').value = '-';
                            }

                        } else {
                        
                            if ($('#bpytimedef').val() == 'Monthly') {
                                document.getElementById('bpyTotalMonth').value = '-';
                                document.getElementById('bpyTotal').value = '$'+parseFloat(backPayrollPrice * 11).toFixed(2);
                            } else {
                                document.getElementById('bpyTotalMonth').value = '-';
                                document.getElementById('bpyTotal').value = '$'+parseFloat(backPayrollPrice).toFixed(2);
                            }

                        }

                    }
                    
                    if ($('[data-id="bbtime"]').val() == 'Monthly') {
                    
                        if ($('#bbtimedef').val() == 'Monthly') {
                    
                            document.getElementById('bbTotalMonth').value = '$'+parseFloat(backBusinessPrice).toFixed(2);
                            document.getElementById('bbTotal').value = '-';
                            
                        } else {
                        
                            document.getElementById('bbTotalMonth').value = '$'+parseFloat(backBusinessPrice / 12).toFixed(2);
                            document.getElementById('bbTotal').value = '-';
                        
                        }
                        
                    } else {
                    
                        tmpPriceMon = (backBusinessPrice / 12) * 1.2;
                        
                        if (financeSel == 'mon' && {!backBusinessNoSplit} == false) {
                        
                            if ($('#bbtimedef').val() == 'Monthly') {
                                document.getElementById('bbTotalMonth').value = '$'+parseFloat(backBusinessPrice).toFixed(2);
                                document.getElementById('bbTotal').value = '-';
                            } else {
                                document.getElementById('bbTotalMonth').value = '$'+parseFloat(tmpPriceMon).toFixed(2);
                                document.getElementById('bbTotal').value = '-';
                            }

                        } else {
                        
                            if ($('#bbtimedef').val() == 'Monthly') {
                                document.getElementById('bbTotalMonth').value = '-';
                                document.getElementById('bbTotal').value = '$'+parseFloat(backBusinessPrice * 11).toFixed(2);
                            } else {
                                document.getElementById('bbTotalMonth').value = '-';
                                document.getElementById('bbTotal').value = '$'+parseFloat(backBusinessPrice).toFixed(2);
                            }

                        }

                    }
                    
                    if ($('[data-id="bptime"]').val() == 'Monthly') {
                    
                        if ($('#bptimedef').val() == 'Monthly') {
                    
                            document.getElementById('bpTotalMonth').value = '$'+parseFloat(backPersonalPrice).toFixed(2);
                            document.getElementById('bpTotal').value = '-';
                            
                        } else {
                        
                            document.getElementById('bpTotalMonth').value = '$'+parseFloat(backPersonalPrice / 12).toFixed(2);
                            document.getElementById('bpTotal').value = '-';
                        
                        }
                        
                    } else {
                    
                        tmpPriceMon = (backPersonalPrice / 12) * 1.2;
                        
                        if (financeSel == 'mon' && {!backPersonalNoSplit} == false) {
                        
                            if ($('#bptimedef').val() == 'Monthly') {
                                document.getElementById('bpTotalMonth').value = '$'+parseFloat(backPersonalPrice).toFixed(2);
                                document.getElementById('bpTotal').value = '-';
                            } else {
                                document.getElementById('bpTotalMonth').value = '$'+parseFloat(tmpPriceMon).toFixed(2);
                                document.getElementById('bpTotal').value = '-';
                            }

                        } else {
                        
                            if ($('#bptimedef').val() == 'Monthly') {
                                document.getElementById('bpTotalMonth').value = '-';
                                document.getElementById('bpTotal').value = '$'+parseFloat(backPersonalPrice * 11).toFixed(2);
                            } else {
                                document.getElementById('bpTotalMonth').value = '-';
                                document.getElementById('bpTotal').value = '$'+parseFloat(backPersonalPrice).toFixed(2);
                            }

                        }

                    }
                    
                    if ($('[data-id="npbtime"]').val() == 'Monthly') {
                    
                        if ($('#npbtimedef').val() == 'Monthly') {
                    
                            document.getElementById('npbTotalMonth').value = '$'+parseFloat(nonProfitBookkeepingPrice).toFixed(2);
                            document.getElementById('npbTotal').value = '-';
                            
                        } else {
                        
                            document.getElementById('npbTotalMonth').value = '$'+parseFloat(nonProfitBookkeepingPrice / 12).toFixed(2);
                            document.getElementById('npbTotal').value = '-';
                        
                        }
                        
                    } else {
                    
                        tmpPriceMon = (nonProfitBookkeepingPrice / 12) * 1.2;
                        
                        if (financeSel == 'mon' && {!nonProfitBookkeepingNoSplit} == false) {
                        
                            if ($('#npbtimedef').val() == 'Monthly') {
                                document.getElementById('npbTotalMonth').value = '$'+parseFloat(nonProfitBookkeepingPrice).toFixed(2);
                                document.getElementById('npbTotal').value = '-';
                            } else {
                                document.getElementById('npbTotalMonth').value = '$'+parseFloat(tmpPriceMon).toFixed(2);
                                document.getElementById('npbTotal').value = '-';
                            }

                        } else {
                        
                            if ($('#npbtimedef').val() == 'Monthly') {
                                document.getElementById('npbTotalMonth').value = '-';
                                document.getElementById('npbTotal').value = '$'+parseFloat(nonProfitBookkeepingPrice * 11).toFixed(2);
                            } else {
                                document.getElementById('npbTotalMonth').value = '-';
                                document.getElementById('npbTotal').value = '$'+parseFloat(nonProfitBookkeepingPrice).toFixed(2);
                            }

                        }

                    }
                    
                    // need to calculate an adjustment for setup fees
                    var addFinanceToday = 0;
                    
                    // now calculate total
                    if ($('[data-id="bcheck"]').prop('checked')) {
                    
                        if ($('[data-id="btime"]').val() == 'Monthly') {
                        
                            if ($('#btimedef').val() == 'Monthly') {
                            
                                totalPriceMonth = totalPriceMonth + (businessPrice * businessQTY);
                                totalFinanceTrack = totalFinanceTrack + (businessPrice * businessQTY);
                                
                                if (getIsBundleDelay('bcheck')) {
                                
                                    subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (businessPrice * businessQTY);
                                    subtractFinanceDelayPrice = subtractFinanceDelayPrice + (businessPrice * businessQTY);
                                    
                                }
                                
                            } else {
                            
                                totalPriceMonth = totalPriceMonth + ((businessPrice / 12) * businessQTY);
                                totalFinanceTrack = totalFinanceTrack + ((businessPrice / 12) * businessQTY);
                                
                                if (getIsBundleDelay('bcheck')) {
                                
                                    subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + ((businessPrice / 12) * businessQTY);
                                    subtractFinanceDelayPrice = subtractFinanceDelayPrice + ((businessPrice / 12) * businessQTY);
                                    
                                }
                                
                            }

                        } else {
                        
                            if (financeSel == 'mon' && {!bizTaxPrepNoSplit} == false) {
                                
                                if ($('#btimedef').val() == 'Monthly') {
                                
                                    totalPriceMonth = totalPriceMonth + (businessPrice * businessQTY);
                                    totalFinanceTrack = totalFinanceTrack + (businessPrice * businessQTY);
                                    
                                    if (getIsBundleDelay('bcheck')) {
                                    
                                        subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (businessPrice * businessQTY);
                                        subtractFinanceDelayPrice = subtractFinanceDelayPrice + (businessPrice * businessQTY);
                                    }
                                    
                                } else {
                                
                                    totalPriceMonth = totalPriceMonth + (((businessPrice * businessQTY) / 12) * 1.2);
                                    totalFinanceTrack = totalFinanceTrack + ((businessPrice * businessQTY) * 1.2);
                                    
                                    if (getIsBundleDelay('bcheck')) {
                                    
                                        subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (((businessPrice * businessQTY) / 12) * 1.2);
                                        subtractFinanceDelayPrice = subtractFinanceDelayPrice + ((businessPrice * businessQTY) * 1.2);
                                        
                                    }
                                    
                                }

                            } else {
                            
                                if ($('#btimedef').val() == 'Monthly') {
                                
                                    totalPrice = totalPrice + ((businessPrice * 11) * businessQTY);
                                    
                                    if (getIsBundleDelay('bcheck')) {
                                    
                                        subtractDelayPrice = subtractDelayPrice + ((businessPrice * 11) * businessQTY);
                                        
                                    } else {
                                        
                                        if ({!bizTaxPrepNoSplit} == true) {
                                            addFinanceToday = addFinanceToday + ((businessPrice * 11) * businessQTY);
                                        }
                                        
                                    }
                                    
                                } else {
                                
                                    totalPrice = totalPrice + (businessPrice * businessQTY);
                                    
                                    if (getIsBundleDelay('bcheck')) {
                                    
                                        subtractDelayPrice = subtractDelayPrice + (businessPrice * businessQTY);
                                        
                                    } else {
                                    
                                        if ({!bizTaxPrepNoSplit} == true) {
                                            addFinanceToday = addFinanceToday + (businessPrice * businessQTY);
                                        }
                                    
                                    }
                                    
                                }

                            }

                        }
                        
                    }
                    
                    if ($('[data-id="pcheck"]').prop('checked')) {
                    
                        if ($('[data-id="ptime"]').val() == 'Monthly') {
                        
                            if ($('#ptimedef').val() == 'Monthly') {
                            
                                totalPriceMonth = totalPriceMonth + (personalPrice * personalQTY);
                                totalFinanceTrack = totalFinanceTrack + (personalPrice * personalQTY);
                                
                                if (getIsBundleDelay('pcheck')) {
                                
                                    subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (personalPrice * personalQTY);
                                    subtractFinanceDelayPrice = subtractFinanceDelayPrice + (personalPrice * personalQTY);
                                    
                                }
                                
                            } else {
                            
                                totalPriceMonth = totalPriceMonth + ((personalPrice / 12) * personalQTY);
                                totalFinanceTrack = totalFinanceTrack + ((personalPrice / 12) * personalQTY);
                                
                                if (getIsBundleDelay('pcheck')) {
                                
                                    subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + ((personalPrice / 12) * personalQTY);
                                    subtractFinanceDelayPrice = subtractFinanceDelayPrice + ((personalPrice / 12) * personalQTY);
                                    
                                }
                                
                            }

                        } else {
                        
                            if (financeSel == 'mon' && {!personalTaxPrepNoSplit} == false) {
                            
                                if ($('#ptimedef').val() == 'Monthly') {
                                
                                    totalPriceMonth = totalPriceMonth + (personalPrice * personalQTY);
                                    totalFinanceTrack = totalFinanceTrack + (personalPrice * personalQTY);
                                    
                                    if (getIsBundleDelay('pcheck')) {
                                    
                                        subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (personalPrice * personalQTY);
                                        subtractFinanceDelayPrice = subtractFinanceDelayPrice + (personalPrice * personalQTY);
                                        
                                    }
                                    
                                } else {
                                
                                    totalPriceMonth = totalPriceMonth + (((personalPrice * personalQTY) / 12) * 1.2);
                                    totalFinanceTrack = totalFinanceTrack + ((personalPrice * personalQTY) * 1.2);
                                    
                                    if (getIsBundleDelay('pcheck')) {
                                    
                                        subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (((personalPrice * personalQTY) / 12) * 1.2);
                                        subtractFinanceDelayPrice = subtractFinanceDelayPrice + ((personalPrice * personalQTY) * 1.2);
                                        
                                    }
                                    
                                }

                            } else {
                            
                                if ($('#ptimedef').val() == 'Monthly') {
                                
                                    totalPrice = totalPrice + ((personalPrice * 11) * personalQTY);
                                    
                                    if (getIsBundleDelay('pcheck')) {
                                        subtractDelayPrice = subtractDelayPrice + ((personalPrice * 11) * personalQTY);
                                    } else {
                                    
                                        if ({!personalTaxPrepNoSplit} == true) {
                                            addFinanceToday = addFinanceToday + ((personalPrice * 11) * personalQTY);
                                        }
                                    
                                    }
                                    
                                } else {
                                
                                    totalPrice = totalPrice + (personalPrice * personalQTY);
                                    
                                    if (getIsBundleDelay('pcheck')) {
                                        subtractDelayPrice = subtractDelayPrice + (personalPrice * personalQTY);
                                    } else {
                                    
                                        if ({!personalTaxPrepNoSplit} == true) {
                                            addFinanceToday = addFinanceToday + (personalPrice * personalQTY);
                                        }
                                    
                                    }
                                    
                                }

                            }
                        
                        }
                        
                    }
                    
                    if ($('[data-id="paycheck"]').prop('checked')) {
                    
                        if ($('[data-id="paytime"]').val() == 'Monthly') {
                        
                            if ($('#paytimedef').val() == 'Monthly') {
                            
                                totalPriceMonth = totalPriceMonth + (payrollPrice * payrollQTY);
                                totalFinanceTrack = totalFinanceTrack + (payrollPrice * payrollQTY);
                                
                                if (getIsBundleDelay('paycheck')) {
                                
                                    subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (payrollPrice * payrollQTY);
                                    subtractFinanceDelayPrice = subtractFinanceDelayPrice + (payrollPrice * payrollQTY);
                                    
                                }
                                
                            } else {
                            
                                totalPriceMonth = totalPriceMonth + ((payrollPrice / 12) * payrollQTY);
                                totalFinanceTrack = totalFinanceTrack + ((payrollPrice / 12) * payrollQTY);
                                
                                if (getIsBundleDelay('paycheck')) {
                                
                                    subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + ((payrollPrice / 12) * payrollQTY);
                                    subtractFinanceDelayPrice = subtractFinanceDelayPrice + ((payrollPrice / 12) * payrollQTY);
                                    
                                }
                                
                            }

                        } else {
                        
                            if (financeSel == 'mon') {
                            
                                if ($('#paytimedef').val() == 'Monthly') {
                                
                                    totalPriceMonth = totalPriceMonth + (payrollPrice * payrollQTY);
                                    totalFinanceTrack = totalFinanceTrack + (payrollPrice * payrollQTY);
                                    
                                    if (getIsBundleDelay('paycheck')) {
                                    
                                        subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (payrollPrice * payrollQTY);
                                        subtractFinanceDelayPrice = subtractFinanceDelayPrice + (payrollPrice * payrollQTY);
                                        
                                    }
                                    
                                } else {
                                
                                    totalPriceMonth = totalPriceMonth + (((payrollPrice * payrollQTY) / 12) * 1.2);
                                    totalFinanceTrack = totalFinanceTrack + ((payrollPrice * payrollQTY) * 1.2);
                                    
                                    if (getIsBundleDelay('paycheck')) {
                                    
                                        subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (((payrollPrice * payrollQTY) / 12) * 1.2);
                                        subtractFinanceDelayPrice = subtractFinanceDelayPrice + ((payrollPrice * payrollQTY) * 1.2);
                                        
                                    }
                                    
                                }

                            } else {
                            
                                if ($('#paytimedef').val() == 'Monthly') {
                                
                                    totalPrice = totalPrice + ((payrollPrice * 11) * payrollQTY);
                                    
                                    if (getIsBundleDelay('paycheck')) {
                                    
                                        subtractDelayPrice = subtractDelayPrice + ((payrollPrice * 11) * payrollQTY);
                                        
                                    }
                                    
                                } else {
                                
                                    totalPrice = totalPrice + (payrollPrice * payrollQTY);
                                    
                                    if (getIsBundleDelay('paycheck')) {
                                        subtractDelayPrice = subtractDelayPrice + (payrollPrice * payrollQTY);
                                    }
                                    
                                }

                            }
                        
                        }
                        
                    }
                    
                    if ($('[data-id="acheck"]').prop('checked')) {
                    
                        if ($('[data-id="atime"]').val() == 'Monthly') {
                        
                            if ($('#atimedef').val() == 'Monthly') {
                            
                                totalPriceMonth = totalPriceMonth + (advisoryPrice * advisoryQTY);
                                totalFinanceTrack = totalFinanceTrack + (advisoryPrice * advisoryQTY);
                                
                                if (getIsBundleDelay('acheck')) {
                                
                                    subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (advisoryPrice * advisoryQTY);
                                    subtractFinanceDelayPrice = subtractFinanceDelayPrice + (advisoryPrice * advisoryQTY);
                                    
                                }
                                
                            } else {
                            
                                totalPriceMonth = totalPriceMonth + ((advisoryPrice / 12) * advisoryQTY);
                                totalFinanceTrack = totalFinanceTrack + ((advisoryPrice / 12) * advisoryQTY);
                                
                                if (getIsBundleDelay('acheck')) {
                                
                                    subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + ((advisoryPrice / 12) * advisoryQTY);
                                    subtractFinanceDelayPrice = subtractFinanceDelayPrice + ((advisoryPrice / 12) * advisoryQTY);
                                    
                                }
                                
                            }

                        } else {
                        
                            if (financeSel == 'mon' && {!taxAdvisoryNoSplit} == false) {
                            
                                if ($('#atimedef').val() == 'Monthly') {
                                
                                    totalPriceMonth = totalPriceMonth + (advisoryPrice * advisoryQTY);
                                    totalFinanceTrack = totalFinanceTrack + (advisoryPrice * advisoryQTY);
                                    
                                    if (getIsBundleDelay('acheck')) {
                                    
                                        subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (advisoryPrice * advisoryQTY);
                                        subtractFinanceDelayPrice = subtractFinanceDelayPrice + (advisoryPrice * advisoryQTY);
                                        
                                    }
                                    
                                } else {
                                
                                    totalPriceMonth = totalPriceMonth + (((advisoryPrice * advisoryQTY) / 12) * 1.2);
                                    totalFinanceTrack = totalFinanceTrack + ((advisoryPrice * advisoryQTY) * 1.2);
                                    
                                    if (getIsBundleDelay('acheck')) {
                                    
                                        subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (((advisoryPrice * advisoryQTY) / 12) * 1.2);
                                        subtractFinanceDelayPrice = subtractFinanceDelayPrice + ((advisoryPrice * advisoryQTY) * 1.2);
                                        
                                    }
                                    
                                }

                            } else {
                            
                                if ($('#atimedef').val() == 'Monthly') {
                                
                                    totalPrice = totalPrice + ((advisoryPrice * 11) * advisoryQTY);
                                    
                                    if (getIsBundleDelay('acheck')) {
                                    
                                        subtractDelayPrice = subtractDelayPrice + ((advisoryPrice * 11) * advisoryQTY);
                                        
                                    } else {
                                    
                                        if ({!taxAdvisoryNoSplit} == true) {
                                            addFinanceToday = addFinanceToday + ((advisoryPrice * 11) * advisoryQTY);
                                        } 
                                    
                                    }
                                    
                                } else {
                                
                                    totalPrice = totalPrice + (advisoryPrice * advisoryQTY);
                                    
                                    if (getIsBundleDelay('acheck')) {
                                        subtractDelayPrice = subtractDelayPrice + (advisoryPrice * advisoryQTY);
                                    } else {
                                    
                                        if ({!taxAdvisoryNoSplit} == true) {
                                            addFinanceToday = addFinanceToday + (advisoryPrice * advisoryQTY);
                                        } 
                                    
                                    }
                                    
                                }

                            }

                        }
                        
                    }
                    
                    if ($('[data-id="bkcheck"]').prop('checked')) {
                    
                        if ($('[data-id="bktime"]').val() == 'Monthly') {
                        
                            if ($('#bktimedef').val() == 'Monthly') {
                            
                                totalPriceMonth = totalPriceMonth + (bookkeepingPrice * bookkeepingQTY);
                                totalFinanceTrack = totalFinanceTrack + (bookkeepingPrice * bookkeepingQTY);
                                
                                if (getIsBundleDelay('bkcheck')) {
                                
                                    subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (bookkeepingPrice * bookkeepingQTY);
                                    subtractFinanceDelayPrice = subtractFinanceDelayPrice + (bookkeepingPrice * bookkeepingQTY);
                                    
                                }
                                
                            } else {
                            
                                totalPriceMonth = totalPriceMonth + ((bookkeepingPrice / 12) * bookkeepingQTY);
                                totalFinanceTrack = totalFinanceTrack + ((bookkeepingPrice / 12) * bookkeepingQTY);
                                
                                if (getIsBundleDelay('bkcheck')) {
                                
                                    subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + ((bookkeepingPrice / 12) * bookkeepingQTY);
                                    subtractFinanceDelayPrice = subtractFinanceDelayPrice + ((bookkeepingPrice / 12) * bookkeepingQTY);
                                    
                                }
                                
                            }

                        } else {
                        
                            if (financeSel == 'mon' && {!bookkeepingNoSplit} == false) {
                            
                                if ($('#bktimedef').val() == 'Monthly') {
                                
                                    totalPriceMonth = totalPriceMonth + (bookkeepingPrice * bookkeepingQTY);
                                    totalFinanceTrack = totalFinanceTrack + (bookkeepingPrice * bookkeepingQTY);
                                    
                                    if (getIsBundleDelay('bkcheck')) {
                                    
                                        subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (bookkeepingPrice * bookkeepingQTY);
                                        subtractFinanceDelayPrice = subtractFinanceDelayPrice + (bookkeepingPrice * bookkeepingQTY);
                                        
                                    }
                                    
                                } else {
                                
                                    totalPriceMonth = totalPriceMonth + (((bookkeepingPrice * bookkeepingQTY) / 12) * 1.2);
                                    totalFinanceTrack = totalFinanceTrack + ((bookkeepingPrice * bookkeepingQTY) * 1.2);
                                    
                                    if (getIsBundleDelay('bkcheck')) {
                                    
                                        subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (((bookkeepingPrice * bookkeepingQTY) / 12) * 1.2);
                                        subtractFinanceDelayPrice = subtractFinanceDelayPrice + ((bookkeepingPrice * bookkeepingQTY) * 1.2);
                                        
                                    }
                                    
                                }

                            } else {
                            
                                if ($('#bktimedef').val() == 'Monthly') {
                                
                                    totalPrice = totalPrice + ((bookkeepingPrice * 11) * bookkeepingQTY);
                                    
                                    if (getIsBundleDelay('bkcheck')) {
                                    
                                        subtractDelayPrice = subtractDelayPrice + ((bookkeepingPrice * 11) * bookkeepingQTY);
                                        
                                    } else {
                                    
                                        if ({!bookkeepingNoSplit} == true) {
                                            addFinanceToday = addFinanceToday + ((bookkeepingPrice * 11) * bookkeepingQTY);
                                        } 
                                    
                                    }
                                    
                                } else {
                                
                                    totalPrice = totalPrice + (bookkeepingPrice * bookkeepingQTY); 
                                    
                                    if (getIsBundleDelay('bkcheck')) {
                                        subtractDelayPrice = subtractDelayPrice + (bookkeepingPrice * bookkeepingQTY);
                                    } else {
                                    
                                        if ({!bookkeepingNoSplit} == true) {
                                            addFinanceToday = addFinanceToday + (bookkeepingPrice * bookkeepingQTY);
                                        } 
                                    
                                    }
                                    
                                }

                            }

                        }
                    
                    }
                    
                    if ($('[data-id="sfcheck"]').prop('checked')) {
                    
                        if ($('[data-id="sftime"]').val() == 'Monthly') {
                        
                            if ($('#sftimedef').val() == 'Monthly') {
                            
                                totalPriceMonth = totalPriceMonth + (stateFilingPrice * stateFilingQTY);
                                totalFinanceTrack = totalFinanceTrack + (stateFilingPrice * stateFilingQTY);
                                
                                if (getIsBundleDelay('sfcheck')) {
                                
                                    subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (stateFilingPrice * stateFilingQTY);
                                    subtractFinanceDelayPrice = subtractFinanceDelayPrice + (stateFilingPrice * stateFilingQTY);
                                    
                                }
                                
                            } else {
                            
                                totalPriceMonth = totalPriceMonth + ((stateFilingPrice / 12) * stateFilingQTY);
                                totalFinanceTrack = totalFinanceTrack + ((stateFilingPrice / 12) * stateFilingQTY);
                                
                                if (getIsBundleDelay('sfcheck')) {
                                
                                    subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + ((stateFilingPrice / 12) * stateFilingQTY);
                                    subtractFinanceDelayPrice = subtractFinanceDelayPrice + ((stateFilingPrice / 12) * stateFilingQTY);
                                    
                                }
                                
                            }

                        } else {
                        
                            if (financeSel == 'mon' && {!stateFilingNoSplit} == false) {
                            
                                if ($('#sftimedef').val() == 'Monthly') {
                                
                                    totalPriceMonth = totalPriceMonth + (stateFilingPrice * stateFilingQTY);
                                    totalFinanceTrack = totalFinanceTrack + (stateFilingPrice * stateFilingQTY);
                                    
                                    if (getIsBundleDelay('sfcheck')) {
                                    
                                        subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (stateFilingPrice * stateFilingQTY);
                                        subtractFinanceDelayPrice = subtractFinanceDelayPrice + (stateFilingPrice * stateFilingQTY);
                                        
                                    }
                                    
                                } else {
                                
                                    totalPriceMonth = totalPriceMonth + (((stateFilingPrice * stateFilingQTY) / 12) * 1.2);
                                    totalFinanceTrack = totalFinanceTrack + ((stateFilingPrice * stateFilingQTY) * 1.2);
                                    
                                    if (getIsBundleDelay('sfcheck')) {
                                    
                                        subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (((stateFilingPrice * stateFilingQTY) / 12) * 1.2);
                                        subtractFinanceDelayPrice = subtractFinanceDelayPrice + ((stateFilingPrice * stateFilingQTY) * 1.2);
                                        
                                    }
                                    
                                }

                            } else {
                            
                                if ($('#sftimedef').val() == 'Monthly') {
                                
                                    totalPrice = totalPrice + ((stateFilingPrice * 11) * stateFilingQTY);
                                    
                                    if (getIsBundleDelay('sfcheck')) {
                                        subtractDelayPrice = subtractDelayPrice + ((stateFilingPrice * 11) * stateFilingQTY);
                                    } else {
                                    
                                        if ({!stateFilingNoSplit} == true) {
                                            addFinanceToday = addFinanceToday + ((stateFilingPrice * 11) * stateFilingQTY);
                                        } 
                                    
                                    }
                                    
                                } else {
                                
                                    totalPrice = totalPrice + (stateFilingPrice * stateFilingQTY); 
                                    
                                    if (getIsBundleDelay('sfcheck')) {
                                        subtractDelayPrice = subtractDelayPrice + (stateFilingPrice * stateFilingQTY);
                                    } else {
                                    
                                        if ({!stateFilingNoSplit} == true) {
                                            addFinanceToday = addFinanceToday + (stateFilingPrice * stateFilingQTY);
                                        } 
                                    
                                    }
                                    
                                }

                            }

                        }
                    
                    }
                    
                    if ($('[data-id="sfccheck"]').prop('checked')) {
                    
                        if ($('[data-id="sfctime"]').val() == 'Monthly') {
                        
                            if ($('#sfctimedef').val() == 'Monthly') {
                            
                                totalPriceMonth = totalPriceMonth + (stateFilingCorpPrice * stateFilingCorpQTY);
                                totalFinanceTrack = totalFinanceTrack + (stateFilingCorpPrice * stateFilingCorpQTY);
                                
                                if (getIsBundleDelay('sfccheck')) {
                                
                                    subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (stateFilingCorpPrice * stateFilingCorpQTY);
                                    subtractFinanceDelayPrice = subtractFinanceDelayPrice + (stateFilingCorpPrice * stateFilingCorpQTY);
                                    
                                }
                                
                            } else {
                            
                                totalPriceMonth = totalPriceMonth + ((stateFilingCorpPrice / 12) * stateFilingCorpQTY);
                                totalFinanceTrack = totalFinanceTrack + ((stateFilingCorpPrice / 12) * stateFilingCorpQTY);
                                
                                if (getIsBundleDelay('sfccheck')) {
                                
                                    subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + ((stateFilingCorpPrice / 12) * stateFilingCorpQTY);
                                    subtractFinanceDelayPrice = subtractFinanceDelayPrice + ((stateFilingCorpPrice / 12) * stateFilingCorpQTY);
                                    
                                }
                                
                            }

                        } else {
                        
                            if (financeSel == 'mon' && {!stateFilingCorpNoSplit} == false) {
                            
                                if ($('#sfctimedef').val() == 'Monthly') {
                                
                                    totalPriceMonth = totalPriceMonth + (stateFilingCorpPrice * stateFilingCorpQTY);
                                    totalFinanceTrack = totalFinanceTrack + (stateFilingCorpPrice * stateFilingCorpQTY);
                                    
                                    if (getIsBundleDelay('sfccheck')) {
                                    
                                        subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (stateFilingCorpPrice * stateFilingCorpQTY);
                                        subtractFinanceDelayPrice = subtractFinanceDelayPrice + (stateFilingCorpPrice * stateFilingCorpQTY);
                                        
                                    }
                                    
                                } else {
                                
                                    totalPriceMonth = totalPriceMonth + (((stateFilingCorpPrice * stateFilingCorpQTY) / 12) * 1.2);
                                    totalFinanceTrack = totalFinanceTrack + ((stateFilingCorpPrice * stateFilingCorpQTY) * 1.2);
                                    
                                    if (getIsBundleDelay('sfccheck')) {
                                    
                                        subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (((stateFilingCorpPrice * stateFilingCorpQTY) / 12) * 1.2);
                                        subtractFinanceDelayPrice = subtractFinanceDelayPrice + ((stateFilingCorpPrice * stateFilingCorpQTY) * 1.2);
                                        
                                    }
                                    
                                }

                            } else {
                            
                                if ($('#sfctimedef').val() == 'Monthly') {
                                
                                    totalPrice = totalPrice + ((stateFilingCorpPrice * 11) * stateFilingCorpQTY);
                                    
                                    if (getIsBundleDelay('sfccheck')) {
                                        subtractDelayPrice = subtractDelayPrice + ((stateFilingCorpPrice * 11) * stateFilingCorpQTY);
                                    } else {
                                    
                                        if ({!stateFilingCorpNoSplit} == true) {
                                            addFinanceToday = addFinanceToday + ((stateFilingCorpPrice * 11) * stateFilingCorpQTY);
                                        } 
                                    
                                    }
                                    
                                } else {
                                
                                    totalPrice = totalPrice + (stateFilingCorpPrice * stateFilingCorpQTY); 
                                    
                                    if (getIsBundleDelay('sfccheck')) {
                                        subtractDelayPrice = subtractDelayPrice + (stateFilingCorpPrice * stateFilingCorpQTY);
                                    } else {
                                    
                                        if ({!stateFilingCorpNoSplit} == true) {
                                            addFinanceToday = addFinanceToday + (stateFilingCorpPrice * stateFilingCorpQTY);
                                        } 
                                    
                                    }
                                    
                                }

                            }

                        }
                    
                    }
                    
                    if ($('[data-id="bbkcheck"]').prop('checked')) {
                    
                        if ($('[data-id="bbktime"]').val() == 'Monthly') {
                        
                            if ($('#bbktimedef').val() == 'Monthly') {
                            
                                totalPriceMonth = totalPriceMonth + (backBookkeepingPrice * backBookkeepingQTY);
                                totalFinanceTrack = totalFinanceTrack + (backBookkeepingPrice * backBookkeepingQTY);
                                
                                if (getIsBundleDelay('bbkcheck')) {
                                
                                    subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (backBookkeepingPrice * backBookkeepingQTY);
                                    subtractFinanceDelayPrice = subtractFinanceDelayPrice + (backBookkeepingPrice * backBookkeepingQTY);
                                    
                                }
                                
                            } else {
                            
                                totalPriceMonth = totalPriceMonth + ((backBookkeepingPrice / 12) * backBookkeepingQTY);
                                totalFinanceTrack = totalFinanceTrack + ((backBookkeepingPrice / 12) * backBookkeepingQTY);
                                
                                if (getIsBundleDelay('bbkcheck')) {
                                
                                    subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + ((backBookkeepingPrice / 12) * backBookkeepingQTY);
                                    subtractFinanceDelayPrice = subtractFinanceDelayPrice + ((backBookkeepingPrice / 12) * backBookkeepingQTY);
                                    
                                }
                                
                            }

                        } else {
                        
                            if (financeSel == 'mon' && {!backBookkeepingNoSplit} == false) {
                            
                                if ($('#bbktimedef').val() == 'Monthly') {
                                
                                    totalPriceMonth = totalPriceMonth + (backBookkeepingPrice * backBookkeepingQTY);
                                    totalFinanceTrack = totalFinanceTrack + (backBookkeepingPrice * backBookkeepingQTY);
                                    
                                    if (getIsBundleDelay('bbkcheck')) {
                                    
                                        subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (backBookkeepingPrice * backBookkeepingQTY);
                                        subtractFinanceDelayPrice = subtractFinanceDelayPrice + (backBookkeepingPrice * backBookkeepingQTY);
                                        
                                    }
                                    
                                } else {
                                
                                    totalPriceMonth = totalPriceMonth + (((backBookkeepingPrice * backBookkeepingQTY) / 12) * 1.2);
                                    totalFinanceTrack = totalFinanceTrack + ((backBookkeepingPrice * backBookkeepingQTY) * 1.2);
                                    
                                    if (getIsBundleDelay('bbkcheck')) {
                                    
                                        subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (((backBookkeepingPrice * backBookkeepingQTY) / 12) * 1.2);
                                        subtractFinanceDelayPrice = subtractFinanceDelayPrice + ((backBookkeepingPrice * backBookkeepingQTY) * 1.2);
                                        
                                    }
                                    
                                }

                            } else {
                            
                                if ($('#bbktimedef').val() == 'Monthly') {
                                
                                    totalPrice = totalPrice + ((backBookkeepingPrice * 11) * backBookkeepingQTY);
                                    
                                    if (getIsBundleDelay('bbkcheck')) {
                                    
                                        subtractDelayPrice = subtractDelayPrice + ((backBookkeepingPrice * 11) * backBookkeepingQTY);
                                        
                                    } else {
                                    
                                        if ({!backBookkeepingNoSplit} == true) {
                                            addFinanceToday = addFinanceToday + ((backBookkeepingPrice * 11) * backBookkeepingQTY);
                                        } 
                                    
                                    }
                                    
                                } else {
                                
                                    totalPrice = totalPrice + (backBookkeepingPrice * backBookkeepingQTY); 
                                    
                                    if (getIsBundleDelay('bbkcheck')) {
                                        subtractDelayPrice = subtractDelayPrice + (backBookkeepingPrice * backBookkeepingQTY);
                                    } else {
                                        
                                        if ({!backBookkeepingNoSplit} == true) {
                                            addFinanceToday = addFinanceToday + (backBookkeepingPrice * backBookkeepingQTY);
                                        } 
                                    
                                    }
                                    
                                }

                            }

                        }
                    
                    }
                    
                    if ($('[data-id="fscheck"]').prop('checked')) {
                    
                        if ($('[data-id="fstime"]').val() == 'Monthly') {
                        
                            if ($('#fstimedef').val() == 'Monthly') {
                            
                                totalPriceMonth = totalPriceMonth + (foreignStatePrice * foreignStateQTY);
                                totalFinanceTrack = totalFinanceTrack + (foreignStatePrice * foreignStateQTY);
                                
                                if (getIsBundleDelay('fscheck')) {
                                
                                    subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (foreignStatePrice * foreignStateQTY);
                                    subtractFinanceDelayPrice = subtractFinanceDelayPrice + (foreignStatePrice * foreignStateQTY);
                                    
                                }
                                
                            } else {
                            
                                totalPriceMonth = totalPriceMonth + ((foreignStatePrice / 12) * foreignStateQTY);
                                totalFinanceTrack = totalFinanceTrack + ((foreignStatePrice / 12) * foreignStateQTY);
                                
                                if (getIsBundleDelay('fscheck')) {
                                
                                    subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + ((foreignStatePrice / 12) * foreignStateQTY);
                                    subtractFinanceDelayPrice = subtractFinanceDelayPrice + ((foreignStatePrice / 12) * foreignStateQTY);
                                    
                                }
                                
                            }

                        } else {
                        
                            if (financeSel == 'mon' && {!foreignStateNoSplit} == false) {
                            
                                if ($('#fstimedef').val() == 'Monthly') {
                                
                                    totalPriceMonth = totalPriceMonth + (foreignStatePrice * foreignStateQTY);
                                    totalFinanceTrack = totalFinanceTrack + (foreignStatePrice * foreignStateQTY);
                                    
                                    if (getIsBundleDelay('fscheck')) {
                                    
                                        subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (foreignStatePrice * foreignStateQTY);
                                        subtractFinanceDelayPrice = subtractFinanceDelayPrice + (foreignStatePrice * foreignStateQTY);
                                        
                                    }
                                    
                                } else {
                                
                                    totalPriceMonth = totalPriceMonth + (((foreignStatePrice * foreignStateQTY) / 12) * 1.2);
                                    totalFinanceTrack = totalFinanceTrack + ((foreignStatePrice * foreignStateQTY) * 1.2);
                                    
                                    if (getIsBundleDelay('fscheck')) {
                                    
                                        subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (((foreignStatePrice * foreignStateQTY) / 12) * 1.2);
                                        subtractFinanceDelayPrice = subtractFinanceDelayPrice + ((foreignStatePrice * foreignStateQTY) * 1.2);
                                        
                                    }
                                    
                                }

                            } else {
                            
                                if ($('#fstimedef').val() == 'Monthly') {
                                
                                    totalPrice = totalPrice + ((foreignStatePrice * 11) * foreignStateQTY);
                                    
                                    if (getIsBundleDelay('fscheck')) {
                                    
                                        subtractDelayPrice = subtractDelayPrice + ((foreignStatePrice * 11) * foreignStateQTY);
                                        
                                    } else {
                                    
                                        if ({!foreignStateNoSplit} == true) {
                                            addFinanceToday = addFinanceToday + ((foreignStatePrice * 11) * foreignStateQTY);
                                        } 
                                    
                                    }
                                    
                                } else {
                                
                                    totalPrice = totalPrice + (foreignStatePrice * foreignStateQTY); 
                                    
                                    if (getIsBundleDelay('fscheck')) {
                                        subtractDelayPrice = subtractDelayPrice + (foreignStatePrice * foreignStateQTY);
                                    } else {
                                    
                                        if ({!foreignStateNoSplit} == true) {
                                            addFinanceToday = addFinanceToday + (foreignStatePrice * foreignStateQTY);
                                        } 
                                    
                                    }
                                    
                                }

                            }

                        }
                    
                    }
                    
                    if ($('[data-id="bpycheck"]').prop('checked')) {
                    
                        if ($('[data-id="bpytime"]').val() == 'Monthly') {
                        
                            if ($('#bpytimedef').val() == 'Monthly') {
                            
                                totalPriceMonth = totalPriceMonth + (backPayrollPrice * backPayrollQTY);
                                totalFinanceTrack = totalFinanceTrack + (backPayrollPrice * backPayrollQTY);
                                
                                if (getIsBundleDelay('bpycheck')) {
                                
                                    subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (backPayrollPrice * backPayrollQTY);
                                    subtractFinanceDelayPrice = subtractFinanceDelayPrice + (backPayrollPrice * backPayrollQTY);
                                    
                                }
                                
                            } else {
                            
                                totalPriceMonth = totalPriceMonth + ((backPayrollPrice / 12) * backPayrollQTY);
                                totalFinanceTrack = totalFinanceTrack + ((backPayrollPrice / 12) * backPayrollQTY);
                                
                                if (getIsBundleDelay('bpycheck')) {
                                
                                    subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + ((backPayrollPrice / 12) * backPayrollQTY);
                                    subtractFinanceDelayPrice = subtractFinanceDelayPrice + ((backPayrollPrice / 12) * backPayrollQTY);
                                    
                                }
                                
                            }

                        } else {
                        
                            if (financeSel == 'mon' && {!backPayrollNoSplit} == false) {
                            
                                if ($('#bpytimedef').val() == 'Monthly') {
                                
                                    totalPriceMonth = totalPriceMonth + (backPayrollPrice * backPayrollQTY);
                                    totalFinanceTrack = totalFinanceTrack + (backPayrollPrice * backPayrollQTY);
                                    
                                    if (getIsBundleDelay('bpycheck')) {
                                    
                                        subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (backPayrollPrice * backPayrollQTY);
                                        subtractFinanceDelayPrice = subtractFinanceDelayPrice + (backPayrollPrice * backPayrollQTY);
                                        
                                    }
                                    
                                } else {
                                
                                    totalPriceMonth = totalPriceMonth + (((backPayrollPrice * backPayrollQTY) / 12) * 1.2);
                                    totalFinanceTrack = totalFinanceTrack + ((backPayrollPrice * backPayrollQTY) * 1.2);
                                    
                                    if (getIsBundleDelay('bpycheck')) {
                                    
                                        subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (((backPayrollPrice * backPayrollQTY) / 12) * 1.2);
                                        subtractFinanceDelayPrice = subtractFinanceDelayPrice + ((backPayrollPrice * backPayrollQTY) * 1.2);
                                        
                                    }
                                    
                                }

                            } else {
                            
                                if ($('#bpytimedef').val() == 'Monthly') {
                                
                                    totalPrice = totalPrice + ((backPayrollPrice * 11) * backPayrollQTY);
                                    
                                    if (getIsBundleDelay('bpycheck')) {
                                    
                                        subtractDelayPrice = subtractDelayPrice + ((backPayrollPrice * 11) * backPayrollQTY);
                                        
                                    } else {
                                    
                                        if ({!backPayrollNoSplit} == true) {
                                            addFinanceToday = addFinanceToday + ((backPayrollPrice * 11) * backPayrollQTY);
                                        } 
                                    
                                    }
                                    
                                } else {
                                
                                    totalPrice = totalPrice + (backPayrollPrice * backPayrollQTY); 
                                    
                                    if (getIsBundleDelay('bpycheck')) {
                                        subtractDelayPrice = subtractDelayPrice + (backPayrollPrice * backPayrollQTY);
                                    } else {
                                    
                                        if ({!backPayrollNoSplit} == true) {
                                            addFinanceToday = addFinanceToday + (backPayrollPrice * backPayrollQTY);
                                        } 
                                    
                                    }
                                    
                                }

                            }

                        }
                    
                    }
                    
                    if ($('[data-id="bbcheck"]').prop('checked')) {
                    
                        if ($('[data-id="bbtime"]').val() == 'Monthly') {
                        
                            if ($('#bbtimedef').val() == 'Monthly') {
                            
                                totalPriceMonth = totalPriceMonth + (backBusinessPrice * backBusinessQTY);
                                totalFinanceTrack = totalFinanceTrack + (backBusinessPrice * backBusinessQTY);
                                
                                if (getIsBundleDelay('bbcheck')) {
                                
                                    subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (backBusinessPrice * backBusinessQTY);
                                    subtractFinanceDelayPrice = subtractFinanceDelayPrice + (backBusinessPrice * backBusinessQTY);
                                    
                                }
                                
                            } else {
                            
                                totalPriceMonth = totalPriceMonth + ((backBusinessPrice / 12) * backBusinessQTY);
                                totalFinanceTrack = totalFinanceTrack + ((backBusinessPrice / 12) * backBusinessQTY);
                                
                                if (getIsBundleDelay('bbcheck')) {
                                
                                    subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + ((backBusinessPrice / 12) * backBusinessQTY);
                                    subtractFinanceDelayPrice = subtractFinanceDelayPrice + ((backBusinessPrice / 12) * backBusinessQTY);
                                    
                                }
                                
                            }

                        } else {
                        
                            if (financeSel == 'mon' && {!backBusinessNoSplit} == false) {
                            
                                if ($('#bbtimedef').val() == 'Monthly') {
                                
                                    totalPriceMonth = totalPriceMonth + (backBusinessPrice * backBusinessQTY);
                                    totalFinanceTrack = totalFinanceTrack + (backBusinessPrice * backBusinessQTY);
                                    
                                    if (getIsBundleDelay('bbcheck')) {
                                    
                                        subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (backBusinessPrice * backBusinessQTY);
                                        subtractFinanceDelayPrice = subtractFinanceDelayPrice + (backBusinessPrice * backBusinessQTY);
                                        
                                    }
                                    
                                } else {
                                
                                    totalPriceMonth = totalPriceMonth + (((backBusinessPrice * backBusinessQTY) / 12) * 1.2);
                                    totalFinanceTrack = totalFinanceTrack + ((backBusinessPrice * backBusinessQTY) * 1.2);
                                    
                                    if (getIsBundleDelay('bbcheck')) {
                                    
                                        subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (((backBusinessPrice * backBusinessQTY) / 12) * 1.2);
                                        subtractFinanceDelayPrice = subtractFinanceDelayPrice + ((backBusinessPrice * backBusinessQTY) * 1.2);
                                        
                                    }
                                    
                                }

                            } else {
                            
                                if ($('#bbtimedef').val() == 'Monthly') {
                                
                                    totalPrice = totalPrice + ((backBusinessPrice * 11) * backBusinessQTY);
                                    
                                    if (getIsBundleDelay('bbcheck')) {
                                    
                                        subtractDelayPrice = subtractDelayPrice + ((backBusinessPrice * 11) * backBusinessQTY);
                                        
                                    } else {
                                    
                                        if ({!backBusinessNoSplit} == true) {
                                            addFinanceToday = addFinanceToday + ((backBusinessPrice * 11) * backBusinessQTY);
                                        } 
                                    
                                    }
                                    
                                } else {
                                
                                    totalPrice = totalPrice + (backBusinessPrice * backBusinessQTY); 
                                    
                                    if (getIsBundleDelay('bbcheck')) {
                                        subtractDelayPrice = subtractDelayPrice + (backBusinessPrice * backBusinessQTY);
                                    } else {
                                    
                                        if ({!backBusinessNoSplit} == true) {
                                            addFinanceToday = addFinanceToday + (backBusinessPrice * backBusinessQTY);
                                        } 
                                    
                                    }
                                    
                                }

                            }

                        }
                    
                    }
                    
                    if ($('[data-id="bpcheck"]').prop('checked')) {
                    
                        if ($('[data-id="bptime"]').val() == 'Monthly') {
                        
                            if ($('#bptimedef').val() == 'Monthly') {
                            
                                totalPriceMonth = totalPriceMonth + (backPersonalPrice * backPersonalQTY);
                                totalFinanceTrack = totalFinanceTrack + (backPersonalPrice * backPersonalQTY);
                                
                                if (getIsBundleDelay('bpcheck')) {
                                
                                    subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (backPersonalPrice * backPersonalQTY);
                                    subtractFinanceDelayPrice = subtractFinanceDelayPrice + (backPersonalPrice * backPersonalQTY);
                                    
                                }
                                
                            } else {
                            
                                totalPriceMonth = totalPriceMonth + ((backPersonalPrice / 12) * backPersonalQTY);
                                totalFinanceTrack = totalFinanceTrack + ((backPersonalPrice / 12) * backPersonalQTY);
                                
                                if (getIsBundleDelay('bpcheck')) {
                                
                                    subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + ((backPersonalPrice / 12) * backPersonalQTY);
                                    subtractFinanceDelayPrice = subtractFinanceDelayPrice + ((backPersonalPrice / 12) * backPersonalQTY);
                                    
                                }
                                
                            }

                        } else {
                        
                            if (financeSel == 'mon' && {!backPersonalNoSplit} == false) {
                            
                                if ($('#bptimedef').val() == 'Monthly') {
                                
                                    totalPriceMonth = totalPriceMonth + (backPersonalPrice * backPersonalQTY);
                                    totalFinanceTrack = totalFinanceTrack + (backPersonalPrice * backPersonalQTY);
                                    
                                    if (getIsBundleDelay('bpcheck')) {
                                    
                                        subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (backPersonalPrice * backPersonalQTY);
                                        subtractFinanceDelayPrice = subtractFinanceDelayPrice + (backPersonalPrice * backPersonalQTY);
                                        
                                    }
                                    
                                } else {
                                
                                    totalPriceMonth = totalPriceMonth + (((backPersonalPrice * backPersonalQTY) / 12) * 1.2);
                                    totalFinanceTrack = totalFinanceTrack + ((backPersonalPrice * backPersonalQTY) * 1.2);
                                    
                                    if (getIsBundleDelay('bpcheck')) {
                                    
                                        subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (((backPersonalPrice * backPersonalQTY) / 12) * 1.2);
                                        subtractFinanceDelayPrice = subtractFinanceDelayPrice + ((backPersonalPrice * backPersonalQTY) * 1.2);
                                        
                                    }
                                    
                                }

                            } else {
                            
                                if ($('#bptimedef').val() == 'Monthly') {
                                
                                    totalPrice = totalPrice + ((backPersonalPrice * 11) * backPersonalQTY);
                                    
                                    if (getIsBundleDelay('bpcheck')) {
                                    
                                        subtractDelayPrice = subtractDelayPrice + ((backPersonalPrice * 11) * backPersonalQTY);
                                        
                                    } else {
                                    
                                        if ({!backPersonalNoSplit} == true) {
                                            addFinanceToday = addFinanceToday + ((backPersonalPrice * 11) * backPersonalQTY);
                                        } 
                                    
                                    }
                                    
                                } else {
                                
                                    totalPrice = totalPrice + (backPersonalPrice * backPersonalQTY); 
                                    
                                    if (getIsBundleDelay('bpcheck')) {
                                        subtractDelayPrice = subtractDelayPrice + (backPersonalPrice * backPersonalQTY);
                                    } else {
                                    
                                        if ({!backPersonalNoSplit} == true) {
                                            addFinanceToday = addFinanceToday + (backPersonalPrice * backPersonalQTY);
                                        } 
                                    
                                    }
                                    
                                }

                            }

                        }
                    
                    }
                    
                    if ($('[data-id="npbcheck"]').prop('checked')) {
                    
                        if ($('[data-id="npbtime"]').val() == 'Monthly') {
                        
                            if ($('#npbtimedef').val() == 'Monthly') {
                            
                                totalPriceMonth = totalPriceMonth + (nonProfitBookkeepingPrice * nonProfitBookkeepingQTY);
                                totalFinanceTrack = totalFinanceTrack + (nonProfitBookkeepingPrice * nonProfitBookkeepingQTY);
                                
                                if (getIsBundleDelay('npbcheck')) {
                                
                                    subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (nonProfitBookkeepingPrice * nonProfitBookkeepingQTY);
                                    subtractFinanceDelayPrice = subtractFinanceDelayPrice + (nonProfitBookkeepingPrice * nonProfitBookkeepingQTY);
                                    
                                }
                                
                            } else {
                            
                                totalPriceMonth = totalPriceMonth + ((nonProfitBookkeepingPrice / 12) * nonProfitBookkeepingQTY);
                                totalFinanceTrack = totalFinanceTrack + ((nonProfitBookkeepingPrice / 12) * nonProfitBookkeepingQTY);
                                
                                if (getIsBundleDelay('npbcheck')) {
                                
                                    subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + ((nonProfitBookkeepingPrice / 12) * nonProfitBookkeepingQTY);
                                    subtractFinanceDelayPrice = subtractFinanceDelayPrice + ((nonProfitBookkeepingPrice / 12) * nonProfitBookkeepingQTY);
                                    
                                }
                                
                            }

                        } else {
                        
                            if (financeSel == 'mon' && {!nonProfitBookkeepingNoSplit} == false) {
                            
                                if ($('#npbtimedef').val() == 'Monthly') {
                                
                                    totalPriceMonth = totalPriceMonth + (nonProfitBookkeepingPrice * nonProfitBookkeepingQTY);
                                    totalFinanceTrack = totalFinanceTrack + (nonProfitBookkeepingPrice * nonProfitBookkeepingQTY);
                                    
                                    if (getIsBundleDelay('npbcheck')) {
                                    
                                        subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (nonProfitBookkeepingPrice * nonProfitBookkeepingQTY);
                                        subtractFinanceDelayPrice = subtractFinanceDelayPrice + (nonProfitBookkeepingPrice * nonProfitBookkeepingQTY);
                                        
                                    }
                                    
                                } else {
                                
                                    totalPriceMonth = totalPriceMonth + (((nonProfitBookkeepingPrice * nonProfitBookkeepingQTY) / 12) * 1.2);
                                    totalFinanceTrack = totalFinanceTrack + ((nonProfitBookkeepingPrice * nonProfitBookkeepingQTY) * 1.2);
                                    
                                    if (getIsBundleDelay('npbcheck')) {
                                    
                                        subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (((nonProfitBookkeepingPrice * nonProfitBookkeepingQTY) / 12) * 1.2);
                                        subtractFinanceDelayPrice = subtractFinanceDelayPrice + ((nonProfitBookkeepingPrice * nonProfitBookkeepingQTY) * 1.2);
                                        
                                    }
                                    
                                }

                            } else {
                            
                                if ($('#npbtimedef').val() == 'Monthly') {
                                
                                    totalPrice = totalPrice + ((nonProfitBookkeepingPrice * 11) * nonProfitBookkeepingQTY);
                                    
                                    if (getIsBundleDelay('npbcheck')) {
                                    
                                        subtractDelayPrice = subtractDelayPrice + ((nonProfitBookkeepingPrice * 11) * nonProfitBookkeepingQTY);
                                        
                                    } else {
                                    
                                        if ({!nonProfitBookkeepingNoSplit} == true) {
                                            addFinanceToday = addFinanceToday + ((nonProfitBookkeepingPrice * 11) * nonProfitBookkeepingQTY);
                                        } 
                                    
                                    }
                                    
                                } else {
                                
                                    totalPrice = totalPrice + (nonProfitBookkeepingPrice * nonProfitBookkeepingQTY); 
                                    
                                    if (getIsBundleDelay('npbcheck')) {
                                        subtractDelayPrice = subtractDelayPrice + (nonProfitBookkeepingPrice * nonProfitBookkeepingQTY);
                                    } else {
                                    
                                        if ({!nonProfitBookkeepingNoSplit} == true) {
                                            addFinanceToday = addFinanceToday + (nonProfitBookkeepingPrice * nonProfitBookkeepingQTY);
                                        } 
                                    
                                    }
                                    
                                }

                            }

                        }
                    
                    }
                    
                    
                    var tmpBundlePrice = false;
                    
                    // now add a la carte items
                    <apex:repeat var="acOne" value="{!acList}" >
                        
                        if ('{!acOne.id}' == '01tj0000000LLamAAG') {
                        
                            if ($('[data-id="pcheck"]').prop('checked') && $('[data-id="acheck"]').prop('checked')) {
                                tmpACPrice = 0;
                            } else {
                                tmpACPrice = {!acOne.price};
                            }

                        } else if ('{!acOne.id}' == '01tf1000003JjrwAAC') {
                            
                            if ($('[data-id="bcheck"]').prop('checked') && $('[data-id="pcheck"]').prop('checked') && $('[data-id="acheck"]').prop('checked')) {
                                tmpACPrice = 29.99;
                            } else if ($('[data-id="pcheck"]').prop('checked') && $('[data-id="acheck"]').prop('checked') && $('[data-id="01tf1000003JjrgAACcheck"]').prop('checked') && $('[data-id="01tf1000003JjrfAACcheck"]').prop('checked') && $('[data-id="01tj0000000LLamAAGcheck"]').prop('checked') && $('[data-id="01tf1000003JjrhAACcheck"]').prop('checked')) {
                                tmpACPrice = 29.99;
                            } else if ($('[data-id="pcheck"]').prop('checked') && $('[data-id="acheck"]').prop('checked') && $('[data-id="01tf1000003JjruAACcheck"]').prop('checked')) {
                                tmpACPrice = 29.99;
                            } else {
                                tmpACPrice = {!acOne.price};
                            }
                            
                        } else if ('{!acOne.id}' == '01tf1000004s3nYAAQ') {
                        
                            // 1099 product, we need to do a one off discount, $20 per additional quantity
                            if ($('[data-id="{!acOne.id}acqty"]').val() == '1' || {!acOne.price} == 0) {
                            
                                tmpACPrice = {!acOne.price};
                            
                            } else {
                            
                                tmpDiscountQty = $('[data-id="{!acOne.id}acqty"]').val();
                                
                                tmpACPrice = ({!acOne.price} + ((tmpDiscountQty - 1) * 20)) / tmpDiscountQty;
                            
                            }
                        
                        } else {
                            tmpACPrice = {!acOne.price};
                        }
                        
                        tmpBundlePrice = getBundlePrice('{!acOne.id}check');
                        
                        if (tmpBundlePrice !== false) {
                            
                            tmpACPrice = tmpBundlePrice;

                        }
                        
                        if (getIsBundle('{!acOne.id}check') !== false) {
                        
                            // unselect bundle of a necessary product is not selected
                            if ($('[data-id="{!acOne.id}check"]').prop('checked')) {
                            
                            } else {
                                
                                $('[data-id="bundlecheck"]').val('None');
                                updateBundle();
                                
                            }
                        
                        }
                    
                        if ($('[data-id="{!acOne.id}check"]').prop('checked')) {
                        
                            if ('{!acOne.setupFee}' == 'One-Time') {
                                addFinanceToday = addFinanceToday + (tmpACPrice * $('[data-id="{!acOne.id}acqty"]').val());
                            }
                        
                            if ($('[data-id="{!acOne.id}time"]').val() == 'Monthly') {
                            
                                if ($('#{!acOne.id}timedef').val() == 'Monthly') {
                                
                                    totalPriceMonth = totalPriceMonth + (tmpACPrice * $('[data-id="{!acOne.id}acqty"]').val());
                                    totalFinanceTrack = totalFinanceTrack + (tmpACPrice * $('[data-id="{!acOne.id}acqty"]').val());
                                    
                                    if (getIsBundleDelay('{!acOne.id}check')) {
                                    
                                        subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (tmpACPrice * $('[data-id="{!acOne.id}acqty"]').val());
                                        subtractFinanceDelayPrice = subtractFinanceDelayPrice + (tmpACPrice * $('[data-id="{!acOne.id}acqty"]').val());
                                        
                                    }
                                    
                                } else {
                                
                                    totalPriceMonth = totalPriceMonth + ((tmpACPrice / 12) * $('[data-id="{!acOne.id}acqty"]').val());
                                    totalFinanceTrack = totalFinanceTrack + ((tmpACPrice / 12) * $('[data-id="{!acOne.id}acqty"]').val());
                                    
                                    if (getIsBundleDelay('{!acOne.id}check')) {
                                    
                                        subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + ((tmpACPrice / 12) * $('[data-id="{!acOne.id}acqty"]').val());
                                        subtractFinanceDelayPrice = subtractFinanceDelayPrice + ((tmpACPrice / 12) * $('[data-id="{!acOne.id}acqty"]').val());
                                        
                                    }
                                    
                                }

                            } else {
                            
                                if (financeSel == 'mon' && {!acOne.noSplit} == false) {
                                
                                    if ($('#{!acOne.id}timedef').val() == 'Monthly') {
                                    
                                        totalPriceMonth = totalPriceMonth + (tmpACPrice * $('[data-id="{!acOne.id}acqty"]').val());
                                        totalFinanceTrack = totalFinanceTrack + (tmpACPrice * $('[data-id="{!acOne.id}acqty"]').val());
                                        
                                        if (getIsBundleDelay('{!acOne.id}check')) {
                                        
                                            subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (tmpACPrice * $('[data-id="{!acOne.id}acqty"]').val());
                                            subtractFinanceDelayPrice = subtractFinanceDelayPrice + (tmpACPrice * $('[data-id="{!acOne.id}acqty"]').val());
                                            
                                        }
                                        
                                    } else {
                                    
                                        totalPriceMonth = totalPriceMonth + (((tmpACPrice * $('[data-id="{!acOne.id}acqty"]').val()) / 12) * 1.2);
                                        totalFinanceTrack = totalFinanceTrack + ((tmpACPrice * $('[data-id="{!acOne.id}acqty"]').val()) * 1.2);
                                        
                                        if (getIsBundleDelay('{!acOne.id}check')) {
                                            
                                            subtractMonthlyDelayPrice = subtractMonthlyDelayPrice + (((tmpACPrice * $('[data-id="{!acOne.id}acqty"]').val()) / 12) * 1.2);
                                            subtractFinanceDelayPrice = subtractFinanceDelayPrice + ((tmpACPrice * $('[data-id="{!acOne.id}acqty"]').val()) * 1.2);
                                            
                                        }
                                        
                                    }

                                } else {
                                
                                    if ($('#{!acOne.id}timedef').val() == 'Monthly') {
                                    
                                        totalPrice = totalPrice + ((tmpACPrice * 11) * $('[data-id="{!acOne.id}acqty"]').val());
                                        
                                        if (getIsBundleDelay('{!acOne.id}check')) {
                                            subtractDelayPrice = subtractDelayPrice + ((tmpACPrice * 11) * $('[data-id="{!acOne.id}acqty"]').val());
                                        } else {
 
                                            if ({!acOne.noSplit} == true && '{!acOne.setupFee}' != 'One-Time' && financeSel != 'mon') {
                                                addFinanceToday = addFinanceToday + ((tmpACPrice * 11) * $('[data-id="{!acOne.id}acqty"]').val());
                                            }
                                            
                                        }
                                        
                                    } else {
                                    
                                        totalPrice = totalPrice + (tmpACPrice * $('[data-id="{!acOne.id}acqty"]').val());
                                        
                                        if (getIsBundleDelay('{!acOne.id}check')) {
                                            subtractDelayPrice = subtractDelayPrice + (tmpACPrice * $('[data-id="{!acOne.id}acqty"]').val());
                                        } else {
                                        
                                            if ({!acOne.noSplit} == true && '{!acOne.setupFee}' != 'One-Time' && financeSel != 'mon') {
                                                addFinanceToday = addFinanceToday + (tmpACPrice * $('[data-id="{!acOne.id}acqty"]').val());
                                            }
                                            
                                        }
                                        
                                    }
                                    
                                }
                            
                            }
                        
                        }
                        
                        if ($('[data-id="{!acOne.id}time"]').val() != 'Monthly') {
                        
                            if (financeSel == 'mon' && {!acOne.noSplit} == false) {
                                
                                tmpPriceMon = (((tmpACPrice * $('[data-id="{!acOne.id}acqty"]').val()) / 12) * 1.2);
                                
                                if ($('#{!acOne.id}timedef').val() == 'Monthly') {
                                    document.getElementById('{!acOne.id}month').value = '$'+parseFloat(tmpACPrice).toFixed(2);
                                } else {
                                    document.getElementById('{!acOne.id}month').value = '$'+parseFloat(tmpPriceMon).toFixed(2);
                                }

                                document.getElementById('{!acOne.id}year').value = '-';
                                    
                            } else {
                                
                                if ($('#{!acOne.id}timedef').val() == 'Monthly') {
                                    document.getElementById('{!acOne.id}year').value = '$'+parseFloat(tmpACPrice * 11).toFixed(2);
                                } else {
                                    document.getElementById('{!acOne.id}year').value = '$'+parseFloat(tmpACPrice).toFixed(2);
                                }
                                    
                                document.getElementById('{!acOne.id}month').value = '-';

                            }
                        
                        } else {
                        
                            if ($('#{!acOne.id}timedef').val() == 'Monthly') {
                                document.getElementById('{!acOne.id}month').value = '$'+parseFloat(tmpACPrice).toFixed(2);
                            } else {
                                document.getElementById('{!acOne.id}month').value = '$'+parseFloat(tmpACPrice / 12).toFixed(2);
                            }
                        
                            document.getElementById('{!acOne.id}year').value = '-';
                        }
                                
                    </apex:repeat>
                    //alert(subtractDelayPrice);
                    holdTotalTotal = totalPrice + totalPriceMonth;
                    
                    switch (financeSel) {
                        case '2pay':
                            holdTotalToday = (totalPrice / 2) + totalPriceMonth - (subtractDelayPrice / 2) - subtractMonthlyDelayPrice;
                            if (addFinanceToday > 0) {
                                holdTotalToday = holdTotalToday + (addFinanceToday / 2);
                            }
                            break;
                        case '3pay':
                            holdTotalToday = (totalPrice / 3) + totalPriceMonth - (subtractDelayPrice / 3) - subtractMonthlyDelayPrice;
                            if (addFinanceToday > 0) {
                                holdTotalToday = holdTotalToday + ((addFinanceToday / 3) * 2);
                            }
                            break;
                        case '4pay':
                            holdTotalToday = (totalPrice / 4) + totalPriceMonth - (subtractDelayPrice / 4) - subtractMonthlyDelayPrice;
                            if (addFinanceToday > 0) {
                                holdTotalToday = holdTotalToday + ((addFinanceToday / 4) * 3);
                            }
                            break;
                        case '6pay':
                            holdTotalToday = (totalPrice / 6) + totalPriceMonth - (subtractDelayPrice / 6) - subtractMonthlyDelayPrice;
                            if (addFinanceToday > 0) {
                                holdTotalToday = holdTotalToday + ((addFinanceToday / 6) * 5);
                            }
                            break;
                        case 'mon':
                        
                            holdTotalToday = holdTotalTotal - subtractDelayPrice - subtractMonthlyDelayPrice;
                            holdTotalTotal = totalFinanceTrack;
                            
                            if (addFinanceToday > 0) {
                             //   holdTotalToday = holdTotalToday + (addFinanceToday - ((addFinanceToday / 12) * 1.2));
                            }
                            
                            break;
                        default:
                            holdTotalToday = holdTotalTotal - subtractDelayPrice - subtractMonthlyDelayPrice;
                            break;
                    }
                    
                    
                    
                    if ($('[data-id="paycheck"]').prop('checked')) {
                    
                        totalPrice = totalPrice + payrollFee;
                        holdTotalTotal = holdTotalTotal + payrollFee;
                        holdTotalToday = holdTotalToday + payrollFee;
                        
                    }
                    
                    document.getElementById('holdTotalTotal').value = '$'+parseFloat(holdTotalTotal).toFixed(2);
                    document.getElementById('holdTotalToday').value = '$'+parseFloat(holdTotalToday).toFixed(2);
                    document.getElementById('holdTotalToday2').value = '$'+parseFloat(holdTotalToday).toFixed(2);
                    
                    document.getElementById('holdTotal').value = '$'+parseFloat(totalPrice).toFixed(2);
                    document.getElementById('holdTotalMonth').value = '$'+parseFloat(totalPriceMonth).toFixed(2);
                    
                    // disable certain options
                    if (holdTotalTotal < 500) {
                        $('[data-id="financecheck"] option[value="2pay"]').prop('disabled', true);
                        $('[data-id="financecheck"] option[value="3pay"]').prop('disabled', true);
                        $('[data-id="financecheck"] option[value="4pay"]').prop('disabled', true);
                        $('[data-id="financecheck"] option[value="6pay"]').prop('disabled', true);
                        $('[data-id="financecheck"] option[value="mon"]').prop('disabled', true);
                        if (financeSel != 'yrl') {
                            $('[data-id="financecheck"]').val('yrl');
                            updateFinance();
                            return;
                        }
                    } else if (holdTotalTotal < 1000) {
                        $('[data-id="financecheck"] option[value="2pay"]').prop('disabled', false);
                        $('[data-id="financecheck"] option[value="3pay"]').prop('disabled', false);
                        $('[data-id="financecheck"] option[value="4pay"]').prop('disabled', true);
                        $('[data-id="financecheck"] option[value="6pay"]').prop('disabled', true);
                        $('[data-id="financecheck"] option[value="mon"]').prop('disabled', true);
                        if (financeSel != 'yrl' && financeSel != '2pay' && financeSel != '3pay') {
                            $('[data-id="financecheck"]').val('yrl');
                            updateFinance();
                            return;
                        }
                    } else if (holdTotalTotal < 1450) {
                        $('[data-id="financecheck"] option[value="2pay"]').prop('disabled', false);
                        $('[data-id="financecheck"] option[value="3pay"]').prop('disabled', false);
                        $('[data-id="financecheck"] option[value="4pay"]').prop('disabled', false);
                        $('[data-id="financecheck"] option[value="6pay"]').prop('disabled', true);
                        $('[data-id="financecheck"] option[value="mon"]').prop('disabled', true);
                        if (financeSel != 'yrl' && financeSel != '2pay' && financeSel != '3pay' && financeSel != '4pay') {
                            $('[data-id="financecheck"]').val('yrl');
                            updateFinance();
                            return;
                        }
                    } else if (holdTotalTotal < 1790) {
                        $('[data-id="financecheck"] option[value="2pay"]').prop('disabled', false);
                        $('[data-id="financecheck"] option[value="3pay"]').prop('disabled', false);
                        $('[data-id="financecheck"] option[value="4pay"]').prop('disabled', false);
                        $('[data-id="financecheck"] option[value="6pay"]').prop('disabled', false);
                        $('[data-id="financecheck"] option[value="mon"]').prop('disabled', true);
                        if (financeSel != 'yrl' && financeSel != '2pay' && financeSel != '3pay' && financeSel != '4pay' && financeSel != '6pay') {
                            $('[data-id="financecheck"]').val('yrl');
                            updateFinance();
                            return;
                        }
                    } else {
                        $('[data-id="financecheck"] option[value="2pay"]').prop('disabled', false);
                        $('[data-id="financecheck"] option[value="3pay"]').prop('disabled', false);
                        $('[data-id="financecheck"] option[value="4pay"]').prop('disabled', false);
                        $('[data-id="financecheck"] option[value="6pay"]').prop('disabled', false);
                        $('[data-id="financecheck"] option[value="mon"]').prop('disabled', false);
                    }
                    
                    if (subtractDelayPrice > 0 || subtractMonthlyDelayPrice > 0) {
                        $('[data-id="financecheck"] option[value="2pay"]').prop('disabled', true);
                        $('[data-id="financecheck"] option[value="3pay"]').prop('disabled', true);
                        $('[data-id="financecheck"] option[value="4pay"]').prop('disabled', true);
                        $('[data-id="financecheck"] option[value="6pay"]').prop('disabled', true);
                        $('[data-id="financecheck"] option[value="mon"]').prop('disabled', true);
                        if (financeSel != 'yrl') {
                            $('[data-id="financecheck"]').val('yrl');
                            updateFinance();
                            return;
                        }
                    }
                    
                }
                
                function dynamicRules() {
                    
                    var tmpVal = '';
                    var doThis = false;
                    var calcId = '';
                    
                    var disabledCalcIds = [];
                    
                    <apex:repeat var="drList" value="{!dynamicRules}" >
                    
                        doThis = false;
                    
                        // check to see if fieldName / fieldValue matches using fieldOperator
                        tmpVal = $('[data-id="{!drList.fieldName}"]').val();
                        
                        if ('{!drList.fieldOperator}' == 'Equal String') {

                            if (tmpVal == '{!drList.fieldValue}') {
                            
                                doThis = true;
                                
                            }
                            
                        }
                        
                        if ('{!drList.fieldOperator}' == 'Not Equal String') {
                        
                            if (tmpVal != '{!drList.fieldValue}') {
                            
                                doThis = true;
                                
                            }
                        
                        }
                        
                        // if disable, then unmark checkbox and disable checkbox using productId
                        // get element id based upon product id
                        calcId = '{!drList.productId}check';
                        
                        if ('{!drList.productId}' == '{!bizTaxPrepID}') {
                            calcId = 'bcheck';
                        }
                        if ('{!drList.productId}' == '{!personalTaxPrepID}') {
                            calcId = 'pcheck';
                        }
                        if ('{!drList.productId}' == '{!payrollID}') {
                            calcId = 'paycheck';
                        }
                        if ('{!drList.productId}' == '{!taxAdvisoryID}') {
                            calcId = 'acheck';
                        }
                        if ('{!drList.productId}' == '{!bookkeepingID}') {
                            calcId = 'bkcheck';
                        }
                        if ('{!drList.productId}' == '{!stateFilingID}') {
                            calcId = 'sfcheck';
                        }
                        if ('{!drList.productId}' == '{!stateFilingCorpID}') {
                            calcId = 'sfccheck';
                        }
                        if ('{!drList.productId}' == '{!backBookkeepingID}') {
                            calcId = 'bbkcheck';
                        }
                        if ('{!drList.productId}' == '{!foreignStateID}') {
                            calcId = 'fscheck';
                        }
                        if ('{!drList.productId}' == '{!backPayrollID}') {
                            calcId = 'bpycheck';
                        }
                        if ('{!drList.productId}' == '{!backBusinessID}') {
                            calcId = 'bbcheck';
                        }
                        if ('{!drList.productId}' == '{!backPersonalID}') {
                            calcId = 'bpcheck';
                        }
                        if ('{!drList.productId}' == '{!nonProfitBookkeepingID}') {
                            calcId = 'npbcheck';
                        }
                        
                        //alert(calcId);
                        //alert('{!drList.productId}');
                        //alert('{!backBookkeepingID}');
                        
                        // enable checkbox
                        if (disabledCalcIds.includes(calcId)) {
                        
                        } else {
                            $('[data-id="'+calcId+'"]').prop('disabled', false);
                        }
                        
                        if (doThis == true) {

                            if ('{!drList.action}' == 'Dynamic Disable Product') {
                            
                                disabledCalcIds.push(calcId);
                            
                                // unmark checkbox
                                $('[data-id="'+calcId+'"]').prop('checked', false);
                                
                                // disable checkbox
                                $('[data-id="'+calcId+'"]').prop('disabled', true);
                                
                                updateProductTotal();
                            } 
                            
                            if ('{!drList.action}' == 'Dynamic Remove Product') {
                            
                                disabledCalcIds.push(calcId);
                            
                                // unmark checkbox
                                $('[data-id="'+calcId+'"]').prop('checked', false);
                                
                                // hide product row
                                $('[data-id="'+calcId+'"]').prop('disabled', true);
                                
                                updateProductTotal();
                                
                            }
                            
                        }
                        
                            
                    </apex:repeat>
                
                }
                
                function reCalcSavings() {
                    
                    // populate variables to pass
                    var formEntityType = $('[data-id="EntityType"]').val();
                    var formForeignOwners = $('[data-id="ForeignOwners"]').val();
                    var formIndustryType = $('[data-id="IndustryType"]').val();
                    var formLivingAbroad = $('[data-id="LivingAbroad"]').val();
                    var formNumberOfContractors = $('[data-id="NumberOfContractors"]').val();
                    var formNumberOfEmployees = $('[data-id="NumberOfEmployees"]').val();
                    var formNumberOfK1s = $('[data-id="NumberOfK1s"]').val();
                    var formNumberOfOwners = $('[data-id="NumberOfOwners"]').val();
                    var formNumberOfTransactions = $('[data-id="NumberOfTransactions"]').val();
                    var formNumberOfRentalProperties = $('[data-id="NumberOfRentalProperties"]').val();
                    var formPersonalIncome = $('[data-id="PersonalIncome"]').val();
                    var formProjectedFirstYearProfit = $('[data-id="ProjectedFirstYearProfit"]').val();
                    var formProjectedFirstYearRevenue = $('[data-id="ProjectedFirstYearRevenue"]').val();
                    var formStateOfIncorporation = $('[data-id="StateOfIncorporation"]').val();
                    var formTotalInvestorFunding = $('[data-id="TotalInvestorFunding"]').val();
                    var formTotalStartupCost = $('[data-id="TotalStartupCost"]').val();
                    var formWebsiteSellingGoods = $('[data-id="WebsiteSellingGoods"]').val();
                    var formWorkedWithAccountantInPast = $('[data-id="WorkedWithAccountantInPast"]').val();
                    var formRunPayrollBefore = $('[data-id="RunPayrollBefore"]').val();
                    var formFilingStatus = $('[data-id="FilingStatus"]').val();
                    var formOfficeSqFT = $('[data-id="OfficeSqFt"]').val();
                    var formBusMiles = $('[data-id="BusinessMiles"]').val();
                    var formForeignState = $('[data-id="ForeignState"]').val();
                    
                    var totalSave = 0;
                    
                    // do RemoteAction call
                    Visualforce.remoting.Manager.invokeAction('PricingCalcController.getDiscountData',formEntityType, formForeignOwners, formIndustryType, formLivingAbroad, formNumberOfContractors, formNumberOfEmployees, formNumberOfK1s, formNumberOfOwners, formNumberOfTransactions, formNumberOfRentalProperties, formPersonalIncome, formProjectedFirstYearProfit, formProjectedFirstYearRevenue, formStateOfIncorporation, formTotalInvestorFunding, formTotalStartupCost, formWebsiteSellingGoods, formWorkedWithAccountantInPast, formRunPayrollBefore, formFilingStatus, formOfficeSqFT, formBusMiles,function(r,e){

                        if (e.status) {
                        
                            // populate html with results from RemoteAction call 
                            r = r.replace(/(&quot\;)/g,"\"");
                            
                            console.log(r);
                            
                            var discountList = JSON.parse(r);
                            for (var j = 0; j < discountList.length; j++){
                            
                                totalSave = totalSave + discountList[j].Amount;
                            
                                switch (discountList[j].DiscountType) {
                                    case 'sCorpSavings':
                                        if (discountList[j].DisplayDiscount) {
                                            $('[data-id="sCorpSavings"]').val('$'+discountList[j].Amount.toFixed(2));
                                            $('#sCorpSavingsContain').show();
                                        } else {
                                            $('[data-id="sCorpSavings"]').val('$0.00');
                                            $('#sCorpSavingsContain').hide();
                                        }
                                    break;
                                    case 'homeOfficeSavings':
                                        if (discountList[j].DisplayDiscount) {
                                            $('[data-id="homeOfficeSavings"]').val('$'+discountList[j].Amount.toFixed(2));
                                            $('#homeOfficeSavingsContain').show();
                                        } else {
                                            $('[data-id="homeOfficeSavings"]').val('$0.00');
                                            $('#homeOfficeSavingsContain').hide();
                                        }
                                    break;
                                    case 'busMileSavings':
                                        if (discountList[j].DisplayDiscount) {
                                            $('[data-id="busMileSavings"]').val('$'+discountList[j].Amount.toFixed(2));
                                            $('#busMileSavingsContain').show();
                                        } else {
                                            $('[data-id="busMileSavings"]').val('$0.00');
                                            $('#busMileSavingsContain').hide();
                                        }
                                    break;
                                    case 'qbiSavings':
                                        if (discountList[j].DisplayDiscount) {
                                            $('[data-id="qbiSavings"]').val('$'+discountList[j].Amount.toFixed(2));
                                            $('#qbiSavingsContain').show();
                                        } else {
                                            $('[data-id="qbiSavings"]').val('$0.00');
                                            $('#qbiSavingsContain').hide();
                                        }
                                    break;
                                    case 'startupExpSavings':
                                        if (discountList[j].DisplayDiscount) {
                                            $('[data-id="startupExpSavings"]').val('$'+discountList[j].Amount.toFixed(2));
                                            $('#startupExpSavingsContain').show();
                                        } else {
                                            $('[data-id="startupExpSavings"]').val('$0.00');
                                            $('#startupExpSavingsContain').hide();
                                        }
                                    break;
                                }
                            
                              //console.log(myArray[j].x);
                            }
                            
                            $('[data-id="potentialSavings"]').val('$'+totalSave.toFixed(2));
                            
                            if (totalSave > 0) {
                                $('#SavingsHolder').show();
                            } else {
                                $('#SavingsHolder').hide();
                            }
                            
                        } else if (e.type === 'exception') {
                        
                            alert(e.message);
                            
                        } else {
                        
                            alert(e.message);
                            
                        }
                        
                    });
  
                    
                }
                
                function updateStateRes(){
                    if ($('[data-id="billingStateSel"]').val() == '') { 
                        $('[data-id="billingStateSel"]').val($('[data-id="StateOfResidenceSel"]').val());
                        $('#label_j_id0:theForm:billingStateSel').text('test');
                    }
                }
                
                $(document).ready(function(){
                    updateProductTotal();
                    $('form').customForm();
                });
                
            </script>
            
        </head>

        <body>
        
            <style>
    #spinner{
        display: none;
        width:200px;
        height: 50px;
        position: fixed;
        top: 50%;
        left: 50%;
        text-align:center;
        padding:10px;
        font:normal 16px Tahoma, Geneva, sans-serif;
        margin-left: -100px;
        margin-top: -100px;
        z-index:2;
        overflow: auto;
        border:1px solid #CCC;
        background-color:white;
        z-index:100;
        padding:5px;
        line-height:20px;
     }
     #opaque {
         position: fixed;
         top: 0px;
         left: 0px;
         width: 100%;
         height: 100%;
         z-index: 1;
         display: none;
         background-color: gray;
         filter: alpha(opacity=30);
         opacity: 0.3;
         -moz-opacity:0.3;
         -khtml-opacity:0.3
     }
     * html #opaque {
         position: absolute;
     }
  </style>

            <apex:form id="theForm" >
            
                <apex:actionFunction name="doSubmit" action="{!doSubmit}"/>
    
                <div class="container">
        
                    <div class="row">
        
                        <div class="col-12" style="text-align:center;"><h1>Pricing Calculator</h1></div>
                        
                        <div class="col-12" id="approvalwarning" style="display:none;color:red;text-align:center;"><h4>Because this order does NOT include the standard product bundle, this sale will be added to an exceptions list.</h4></div>
        
                    </div>
    
    
                    <div id="CalcStep1" class="row">
        
                        <div class="col-12"><h2>Business</h2><hr /></div>
            
                        <div class="col-12">
                        
                            <div class="row">

                                <div class="col-lg-6 col-md-12 col-sm-12">
                                    
                                    <div class="form-group" style="text-align:right;">
                                        <label style="color:red;">Please Verify Company Name: &nbsp;&nbsp;</label>
                                        <apex:inputText styleClass="form-control jq_req1" style="width:205px;display:inline;" value="{!accountNameInput}"/>
                                        <br />
                                    </div>
        
                                    <div class="form-group">
                                        <label style="{!IF((stateOfIncorporationClass!=''),'color:red;','')}">Domestic (First) State of Incorporation: &nbsp;&nbsp;</label>
                                        <apex:selectList html-data-id="StateOfIncorporation" id="StateOfIncorporation" size="1" styleClass="cform{!stateOfIncorporationClass}" onchange="updateProductTotal()" value="{!stateOfIncorporationInput}">
                                            <apex:selectOptions value="{!stateOfIncorporation}"/>
                                        </apex:selectList><br />
                                    </div>
                                    
                                    <div class="form-group">
                                        <label style="{!IF((foreignStateClass!=''),'color:red;','')}">Foreign (Additional) State of Incorporation: &nbsp;&nbsp;</label>
                                        <apex:selectList html-data-id="ForeignState" id="ForeignState" size="1" styleClass="cform{!foreignStateClass}" onchange="updateProductTotal()" value="{!foreignStateInput}">
                                            <apex:selectOptions value="{!foreignState}"/>
                                        </apex:selectList><br />
                                    </div>
                                    
                                    <div class="form-group" >
                                        <label>State of Residence: &nbsp;&nbsp;</label>
                                        <apex:selectList html-data-id="StateOfResidenceSel" id="StateOfResidenceSel" size="1" styleClass="cform" tabindex="3" onchange="updateStateRes()" value="{!stateOfResidenceInput}">
                                            <apex:selectOptions value="{!stateOfResidenceItems}"/>
                                        </apex:selectList><br />
                                    </div>
                                    
                                    <div class="form-group">
                                        <label style="{!IF((entityTypeClass!=''),'color:red;','')}">Entity Type: &nbsp;&nbsp;</label>
                                        <apex:selectList html-data-id="EntityType" id="EntityType" size="1" styleClass="cform{!entityTypeClass}" onchange="updateFromET()" value="{!entityTypeInput}">
                                            <apex:selectOptions value="{!entityType}"/>
                                        </apex:selectList><br />
                                    </div>
                                    
                                    <div class="form-group">
                                        <label style="{!IF((industryTypeClass!=''),'color:red;','')}">Industry Type: &nbsp;&nbsp;</label>
                                        <apex:selectList html-data-id="IndustryType" id="IndustryType" size="1" styleClass="cform{!industryTypeClass}" onchange="updateProductTotal()" value="{!industryTypeInput}">
                                            <apex:selectOptions value="{!industryType}"/>
                                        </apex:selectList><br />
                                    </div>
                                    
                                      <div class="form-group">
                                        <label style="{!IF((totalStartupCostClass!=''),'color:red;','')}">Total Startup Cost: &nbsp;&nbsp;</label>
                                        <apex:selectList html-data-id="TotalStartupCost" id="TotalStartupCost" size="1" styleClass="cform{!totalStartupCostClass}" onchange="updateProductTotal()" value="{!totalStartupCostInput}">
                                            <apex:selectOptions value="{!totalStartupCost}"/>
                                        </apex:selectList><br />
                                    </div>
                                    
                                    <div class="form-group" style="text-align:right;">
                                        <label style="{!IF((projectedFirstYearRevenueClass!=''),'color:red;','')}">Projected First Year Revenue: &nbsp;&nbsp;</label>
                                        <apex:selectList html-data-id="ProjectedFirstYearRevenue" id="ProjectedFirstYearRevenue" size="1" styleClass="cform{!projectedFirstYearRevenueClass}" onchange="updateProductTotal()" value="{!projectedFirstYearRevenueInput}">
                                            <apex:selectOptions value="{!projectedFirstYearRevenue}"/>
                                        </apex:selectList><br />
                                    </div>
        
                                    <div class="form-group">
                                        <label style="{!IF((projectedFirstYearProfitClass!=''),'color:red;','')}">Projected First Year Profit: &nbsp;&nbsp;</label>
                                        <apex:selectList html-data-id="ProjectedFirstYearProfit" id="ProjectedFirstYearProfit" size="1" styleClass="cform{!projectedFirstYearProfitClass}" onchange="updateProductTotal()" value="{!projectedFirstYearProfitInput}">
                                            <apex:selectOptions value="{!projectedFirstYearProfit}"/>
                                        </apex:selectList><br />
                                    </div>
        
                      
                
                                  
                                    
                                    <div class="form-group">
                                        <label style="{!IF((numberOfTransactionsClass!=''),'color:red;','')}">Number of Monthly Bookkeeping Transactions: &nbsp;&nbsp;</label>
                                        <apex:selectList html-data-id="NumberOfTransactions" id="NumberOfTransactions" size="1" styleClass="cform{!numberOfTransactionsClass}" onchange="updateProductTotal()" value="{!numberOfTransactionsInput}">
                                            <apex:selectOptions value="{!numberOfTransactions}"/>
                                        </apex:selectList><br />
                                    </div>
                            
                                 </div>
                                 <div class="col-lg-6 col-md-12 col-sm-12">
                                 
                                     
        
                                    <div class="form-group">
                                        <label style="{!IF((totalInvestorFundingClass!=''),'color:red;','')}">Total Investor Funding: &nbsp;&nbsp;</label>
                                        <apex:selectList html-data-id="TotalInvestorFunding" id="TotalInvestorFunding" size="1" styleClass="cform{!totalInvestorFundingClass}" onchange="updateProductTotal()" value="{!totalInvestorFundingInput}">
                                            <apex:selectOptions value="{!totalInvestorFunding}"/>
                                        </apex:selectList><br />
                                    </div>
                
                                    <div class="form-group">
                                        <label style="{!IF((websiteSellingGoodsClass!=''),'color:red;','')}">Website Selling Goods? : &nbsp;&nbsp;</label>
                                        <apex:selectList html-data-id="WebsiteSellingGoods" id="WebsiteSellingGoods" size="1" styleClass="cform{!websiteSellingGoodsClass}" onchange="updateFromWSG()" value="{!websiteSellingGoodsInput}">
                                            <apex:selectOptions value="{!websiteSellingGoods}"/>
                                        </apex:selectList><br />
                                    </div>
                
                                    <div class="form-group">
                                        <label style="{!IF((workedWithAccountantInPastClass!=''),'color:red;','')}">Worked With Accountant in Past? : &nbsp;&nbsp;</label>
                                        <apex:selectList html-data-id="WorkedWithAccountantInPast" id="WorkedWithAccountantInPast" size="1" styleClass="cform{!workedWithAccountantInPastClass}" onchange="updateProductTotal()" value="{!workedWithAccountantInPastInput}">
                                            <apex:selectOptions value="{!workedWithAccountantInPast}"/>
                                        </apex:selectList><br />
                                    </div>
                                    
                                     <div class="form-group">
                                        <label style="{!IF((runPayrollBeforeClass!=''),'color:red;','')}">Has Run Payroll Before?: &nbsp;&nbsp;</label>
                                        <apex:selectList html-data-id="RunPayrollBefore" id="RunPayrollBefore" size="1" styleClass="cform{!runPayrollBeforeClass}" onchange="updateProductTotal()" value="{!runPayrollBeforeInput}">
                                            <apex:selectOptions value="{!runPayrollBefore}"/>
                                        </apex:selectList><br />
                                    </div>
        
                                    <div class="form-group">
                                        <label style="{!IF((numberOfEmployeesClass!=''),'color:red;','')}">Number of Employees: &nbsp;&nbsp;</label>
                                        <apex:selectList html-data-id="NumberOfEmployees" id="NumberOfEmployees" size="1" styleClass="cform{!numberOfEmployeesClass}" onchange="updateProductTotal()" value="{!numberOfEmployeesInput}">
                                            <apex:selectOptions value="{!numberOfEmployees}"/>
                                        </apex:selectList><br />
                                    </div>
                    
                                    <div class="form-group">
                                        <label style="{!IF((numberOfContractorsClass!=''),'color:red;','')}">Number of Contractors: &nbsp;&nbsp;</label>
                                        <apex:selectList html-data-id="NumberOfContractors" id="NumberOfContractors" size="1" styleClass="cform{!numberOfContractorsClass}" onchange="updateProductTotal()" value="{!numberOfContractorsInput}">
                                            <apex:selectOptions value="{!numberOfContractors}"/>
                                        </apex:selectList><br />
                                    </div>
                                    
                                    <div class="form-group">
                                        <label style="{!IF((numberOfOwnersClass!=''),'color:red;','')}">Number of Owners (All): &nbsp;&nbsp;</label>
                                        <apex:selectList html-data-id="NumberOfOwners" id="NumberOfOwners" size="1" styleClass="cform{!numberOfOwnersClass}" onchange="updateProductTotal()" value="{!numberOfOwnersInput}">
                                            <apex:selectOptions value="{!numberOfOwners}"/>
                                        </apex:selectList><br />
                                    </div>
                
                                    <div class="form-group">
                                        <label style="{!IF((foreignOwnersClass!=''),'color:red;','')}">Number of Foreign Owners: &nbsp;&nbsp;</label>
                                        <apex:selectList html-data-id="ForeignOwners" id="ForeignOwners" size="1" styleClass="cform{!foreignOwnersClass}" onchange="updateProductTotal()" value="{!foreignOwnersInput}">
                                            <apex:selectOptions value="{!foreignOwners}"/>
                                        </apex:selectList><br />
                                    </div>
                                    
                                    <div class="form-group">
                                        <label style="{!IF((yearsInBusinessClass!=''),'color:red;','')}">Years in Business: &nbsp;&nbsp;</label>
                                        <apex:selectList html-data-id="YearsInBusiness" id="YearsInBusiness" size="1" styleClass="cform{!yearsInBusinessClass}" onchange="updateProductTotal()" value="{!yearsInBusinessInput}">
                                            <apex:selectOptions value="{!yearsInBusiness}"/>
                                        </apex:selectList><br />
                                    </div>
                                   
                            
                                </div>
                           </div>
        
                        </div>
        
                        <div class="col-12"><h2>Personal</h2><hr /></div>
        
                        <div class="col-12">
        
                            <div class="row">
                            
                                <div class="col-lg-6 col-md-12 col-sm-12">
        
                                    <div class="form-group">
                                        <label style="{!IF((personalIncomeClass!=''),'color:red;','')}">Personal Income: &nbsp;&nbsp;</label>
                                        <apex:selectList html-data-id="PersonalIncome" id="PersonalIncome" size="1" styleClass="cform{!personalIncomeClass}" onchange="updateProductTotal()" value="{!personalIncomeInput}">
                                            <apex:selectOptions value="{!personalIncome}"/>
                                        </apex:selectList><br />
                                    </div>
                
                                    <div class="form-group">
                                        <label style="{!IF((numberOfRentalPropertiesClass!=''),'color:red;','')}">Number of Rental Properties: &nbsp;&nbsp;</label>
                                        <apex:selectList html-data-id="NumberOfRentalProperties" id="NumberOfRentalProperties" size="1" styleClass="cform{!numberOfRentalPropertiesClass}" onchange="updateProductTotal()" value="{!numberOfRentalPropertiesInput}">
                                            <apex:selectOptions value="{!numberOfRentalProperties}"/>
                                        </apex:selectList><br />
                                    </div>
                                    
                                    <div class="form-group">
                                        <label style="{!IF((filingStatusClass!=''),'color:red;','')}">Filing Status: &nbsp;&nbsp;</label>
                                        <apex:selectList html-data-id="FilingStatus" id="FilingStatus" size="1" styleClass="cform{!filingStatusClass}" onchange="updateProductTotal()" value="{!filingStatusInput}">
                                            <apex:selectOptions value="{!filingStatus}"/>
                                        </apex:selectList><br />
                                    </div>
                                    
                                    <div class="form-group">
                                        <label style="">Campaign ID: &nbsp;&nbsp;</label>
                                        <apex:inputText styleClass="form-control" style="width:205px;display:inline;" value="{!emailCampaignIDInput}"/>
                                        
                                    </div>
                                    
                                </div>
                                <div class="col-lg-6 col-md-12 col-sm-12">
            
                                    <div class="form-group">
                                        <label style="{!IF((livingAbroadClass!=''),'color:red;','')}">Foreign Sourced Income? : &nbsp;&nbsp;</label>
                                        <apex:selectList html-data-id="LivingAbroad" id="LivingAbroad" size="1" styleClass="cform{!livingAbroadClass}" onchange="updateProductTotal()" value="{!livingAbroadInput}">
                                            <apex:selectOptions value="{!livingAbroad}"/>
                                        </apex:selectList><br />
                                    </div>
                
                                    <div class="form-group">
                                        <label style="{!IF((numberOfK1sClass!=''),'color:red;','')}"># of K-1s From Other Investments: &nbsp;&nbsp;</label>
                                        <apex:selectList html-data-id="NumberOfK1s" id="NumberOfK1s" size="1" styleClass="cform{!numberOfK1sClass}" onchange="updateProductTotal()" value="{!numberOfK1sInput}">
                                            <apex:selectOptions value="{!numberOfK1s}"/>
                                        </apex:selectList><br />
                                    </div>
                                    
                                    <div class="form-group">
                                        <label style="{!IF((officeSqFtClass!=''),'color:red;','')}">Home Office Square Feet: &nbsp;&nbsp;</label>
                                        <apex:selectList html-data-id="OfficeSqFt" id="OfficeSqFt" size="1" styleClass="cform{!officeSqFtClass}" onchange="updateProductTotal()" value="{!officeSqFtInput}">
                                            <apex:selectOptions value="{!officeSqFt}"/>
                                        </apex:selectList><br />
                                    </div>
                                    
                                    <div class="form-group">
                                        <label style="{!IF((businessMilesClass!=''),'color:red;','')}">Estimated Business Mileage: &nbsp;&nbsp;</label>
                                        <apex:selectList html-data-id="BusinessMiles" id="BusinessMiles" size="1" styleClass="cform{!businessMilesClass}" onchange="updateProductTotal()" value="{!businessMilesInput}">
                                            <apex:selectOptions value="{!businessMiles}"/>
                                        </apex:selectList><br />
                                    </div>
                                    
                                    
                                
                                </div>
        
                            </div>
        
                        </div>
        
                    </div>
                    
                    <div id="SubmitStep1" class="row">
                        <div class='col-12' style='text-align: right;'>
                        <br />
                            <input type="button" onclick="if (validateReglementFieldsStep1()) {$('#CalcStep1').hide();$('#SubmitStep1').hide();$('#BundlePayStep2').hide();$('#ProductStep2').show();$('#SubmitStep2').show();}reCalcSavings();dynamicRules();return false" class="ui-button ui-widget ui-corner-all" style="font-size:20px;padding-left:40px;padding-right:40px;" value="Calculate" />
                        </div>
                    </div>
                    
                    <div id="BundlePayStep2" style="display:none;" class="row">

                        
                        
                        <div class="col-3" style='font-size:12px;margin-bottom:10px;'></div>
                        
                        <div class="col-3" style='font-size:12px;margin-bottom:10px;'>
                        
                            <h2>Payment Terms</h2>
                            
                            <apex:selectList id="financecheck" html-data-id="financecheck" onchange="updateFinance()" value="{!billingTime}">
                                <apex:selectOptions value="{!billingItems}"/>
                            </apex:selectList>
                            
                        </div>
                        
                        <div class="col-3" style='font-size:12px;margin-bottom:10px;'>
                            
                            <h2>Total Due</h2>
                            <input type='text' id='holdTotalTotal' style='border: 0px;font-weight:bold;width:140px;' value='0' /> 
                            
                            
                            
                        </div>
                        <div class="col-3" style='font-size:12px;margin-bottom:10px;'>
                        
                            <h2>Total Due Today</h2>
                            <input type='text' id='holdTotalToday' style='border: 0px;font-weight:bold;' value='0' /><br /><br />
                        
                        </div>
                        
                        <div class="col-12">
                        
                            <div class="row">
                            
                                <div class="col-lg-6 col-md-12 col-sm-12">
                        
                                    <div class="form-group" style="text-align:right;">
                                        <label>Billing Street: &nbsp;&nbsp;</label>
                                        <apex:inputText styleClass="form-control" style="width:205px;display:inline;" tabindex="1" value="{!billingStreetInput}"/>
                                        <br />
                                    </div>
                                    
                                </div>
                            
                                <div class="col-lg-6 col-md-12 col-sm-12">
                                
                                </div>
                            
                                <div class="col-lg-6 col-md-12 col-sm-12">
                            
                                    <div class="form-group" style="text-align:right;">
                                        <label>Billing City: &nbsp;&nbsp;</label>
                                        <apex:inputText styleClass="form-control" style="width:205px;display:inline;" tabindex="2" value="{!billingCityInput}"/>
                                        <br />
                                    </div>
                        
                                
                            
                                    <div class="form-group" style="text-align:right;">
                                        <label>Billing Zip: &nbsp;&nbsp;</label>
                                        <apex:inputText styleClass="form-control" style="width:205px;display:inline;" tabindex="4" value="{!billingZipInput}"/>
                                        <br />
                                    </div>
                            
                                </div>
                                
                                <div class="col-lg-6 col-md-12 col-sm-12">
                                
                                    <div class="form-group" style="text-align:right;">
                                        <label>Billing State: &nbsp;&nbsp;</label>
                                        <apex:selectList size="1" id="billingStateSel" html-data-id="billingStateSel" styleClass="" style="width:205px;height:35px;" tabindex="3" value="{!billingStateInput}">
                                            <apex:selectOptions value="{!billingStateItems}"/>
                                        </apex:selectList><br />
                                    </div>
                                
                                    <div class="form-group" style="text-align:right;">
                                        <label>Billing Country: &nbsp;&nbsp;</label>
                                        <apex:selectList size="1" styleClass="" tabindex="5" style="width:205px;height:35px;" value="{!billingCountryInput}">
                                            <apex:selectOptions value="{!billingCountryItems}"/>
                                        </apex:selectList><br />
                                    </div>
                                    
                               </div>
                               
                           </div>
                        
                        </div>
                    
                    </div>

                    <div id="ProductStep2" style="display:none;" class="row">
        
                        <div class="col-3" style="margin-bottom:10px;">
                            <h2>Products</h2>
                        </div>
                        
                        <div class="col-5" style="font-size:12px;margin-bottom:10px;display: {!IF((showBundles=true),'block','none')};">
                            <div class="row">
                            <div class="col-6" style='font-size:12px;'>
                        
                                <h2>Offers</h2>
                            
                                <apex:selectList id="bundlecheck" html-data-id="bundlecheck" styleClass="radioOpt" onchange="updateBundle()" value="{!bundle}">
                                    <apex:selectOptions value="{!bundleItems}"/>
                                </apex:selectList>
                            
                            </div>
                            <div class="col-6" style='font-size:12px;'>
                                <h2>Total for Offer</h2>
                                <input type='text' id='holdOfferTotal' style='border: 0px;font-weight:bold;' value='0' />
                            </div>
                            </div>
                        </div>
                        
                        <div class="col-2" style='font-size:12px;margin-bottom:10px;'>
                        
                            <h2>Total Due Today</h2>
                            <input type='text' id='holdTotalToday2' style='border: 0px;font-weight:bold;' value='0' /><br /><br />
                        
                        </div>
                        
                        
                        
                        <div id="ProdCust" class="col-12" style="margin-bottom:20px;">
                            <input type="button" onclick="$('#ProdCust').hide();$('.prodgroup').show();updateProductTotal();return false" class="ui-button ui-widget ui-corner-all" style="font-size:18px;padding-left:40px;padding-right:40px;" value="Customize Products" />
                        </div>
                        
                        <div class="col-lg-11 col-md-12 col-sm-12 col-xs-12">
                            <label style='margin-right:5px;width:240px;font-size: 20px;color: #5d5d5d;'>Name</label>
                            <label style='margin-right:5px;width:240px;font-size: 20px;color: #5d5d5d;'>Time</label>
                            <label style='margin-right:5px;width:100px;font-size: 20px;color: #5d5d5d;'>Annual</label>
                            <label style='margin-right:5px;width:70px;font-size: 20px;color: #5d5d5d;'>Monthly</label>
                            <label style='float:right;font-size: 20px;color: #5d5d5d;'>QTY&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>
                        </div>
                        <div class="col-lg-11 col-md-12 col-sm-12 col-xs-12">
                        
                            
                            
                            <div class="form-group" style="text-align:left;">
                                <label style='margin-right:5px;width:360px;font-size:14px;font-weight:bold;'>Total: </label> 
                                <input type='text' id='holdTotal' style='border: 0px;font-weight:bold;width:110px;margin-left:125px;' value='{!totalAdjustment}' />
                                <input type='text' id='holdTotalMonth' style='border: 0px;font-weight:bold;' value='0' /><br /><br />
                            </div>
                           
                            
                            <div style="display:none;">
                            <apex:inputText id="bdloverride" html-data-id="bdloverride" style="display:none;" value="{!BundleOverride}" />
                            </div>
                            
                            <div class="form-group {!IF((excludeBusinessReturn=true),'','prodgroup')}" style="display:{!IF((doBusinessReturn=true),'block','none')};text-align:left;">
                                <label style='margin-right:5px;width:240px;'>Business Tax Return: </label>
                                <input type='text' id="btimedef" html-data-id="btimedef" style='border:0px;display:none;' value="{!businessTimeDef}" />
                                <apex:selectList id="btime" html-data-id="btime" size="1" styleClass="cform" style="margin-right: 35px;" value="{!businessTime}" onchange="updateProductTotal()" disabled="{!IF((optionBusinessReturn=false),'true','false')}">
                                    <apex:selectOptions value="{!timeItems}"/>
                                </apex:selectList> 
                                <input type='text' id='bTotal' style='border:0px;width:117px;' value='{!businessAdjustment}' /> 
                                <input type='text' id='bTotalMonth' style='border:0px;width:107px;' value='0' />
                                <div style="display:{!IF((disableBusinessReturn=false),'inline','none')};float:right;"> 
                                    <label style="margin-right:5px;width:25px;{!IF((disableQTYBusinessReturn=false),'','display:none;')}">qty: </label> 
                                    <apex:inputText id="bqty" html-data-id="bqty" size="3" styleClass="form-control" style="margin-right:5px;display:{!IF((disableQTYBusinessReturn=false),'inline','none')};width: 40px;padding: 0px 6px;text-align:center;" onchange="updateProductTotal()" value="{!businessQuantity}" />
                                    <apex:inputCheckbox id="bcheck" html-data-id="bcheck" styleClass="" onchange="updateProductTotal()" value="{!doBusinessReturn}"/>
                                </div>
                                <div style="display:{!IF((disableBusinessReturn=true),'inline','none')};float:right;">
                                    <a href="#" data-toggle="tooltip" class="tooltipst" title="{!disableBusinessReturnMessage}" style="margin-right:18px;"><i class="fa fa-info"></i></a>
                                </div>
                            </div>
                            <div class="form-group {!IF((excludePersonalReturn=true),'','prodgroup')}" style="display:{!IF((doPersonalReturn=true),'block','none')};text-align:left;">
                                <label style='margin-right:5px;width:240px;'>Personal Tax Return: </label> 
                                <input type='text' id="ptimedef" html-data-id="ptimedef" style='border:0px;display:none;' value="{!personalTimeDef}" />
                                <apex:selectList id="ptime" html-data-id="ptime" size="1" styleClass="cform" style="margin-right: 35px;" value="{!personalTime}" onchange="updateProductTotal()" disabled="{!IF((optionPersonalReturn =false),'true','false')}">
                                    <apex:selectOptions value="{!timeItems}"/>
                                </apex:selectList> 
                                <input type='text' id='pTotal' style='border:0px;width:117px;' value='{!personalAdjustment}' /> 
                                <input type='text' id='pTotalMonth' style='border:0px;width:107px;' value='0' /> 
                                <div style="display:{!IF((disablePersonalReturn=false),'inline','none')};float:right;">  
                                    <label style="margin-right:5px;width:25px;{!IF((disableQTYPersonalReturn=false),'','display:none;')}">qty: </label> 
                                    <apex:inputText id="pqty" html-data-id="pqty" size="3" styleClass="form-control" style="margin-right:5px;display: {!IF((disableQTYPersonalReturn=false),'inline','none')};width: 40px;padding: 0px 6px;text-align:center;" onchange="updateProductTotal()" value="{!personalQuantity}" />
                                    <apex:inputCheckbox id="pcheck" html-data-id="pcheck" styleClass="" onchange="updateProductTotal()" value="{!doPersonalReturn}"/>
                                </div>
                                <div style="display:{!IF((disablePersonalReturn=true),'inline','none')};float:right;">
                                    <a href="#" data-toggle="tooltip" class="tooltipst" title="{!disablePersonalReturnMessage}" style="margin-right:18px;"><i class="fa fa-info"></i></a>
                                </div>
                            </div>
                            <div class="form-group {!IF((excludeAdvisory=true),'','prodgroup')}" style="display:{!IF((doAdvisory=true),'block','none')};text-align:left;">
                                <label style='margin-right:5px;width:240px;'>Tax Advisory: </label> 
                                <input type='text' id="atimedef" html-data-id="atimedef" style='border:0px;display:none;' value="{!taxAdvisoryTimeDef}" />
                                <apex:selectList id="atime" html-data-id="atime" size="1" styleClass="cform" style="margin-right: 35px;" value="{!taxAdvisoryTime}" onchange="updateProductTotal()" disabled="{!IF((optionAdvisory=false),'true','false')}">
                                    <apex:selectOptions value="{!timeItems}"/>
                                </apex:selectList> 
                                <input type='text' id='taTotal' style='border:0px;width:117px;' value='{!taxAdvisoryPrice}' /> 
                                <input type='text' id='taTotalMonth' style='border:0px;width:107px;' value='0' /> 
                                <div style="display:{!IF((disableAdvisory=false),'inline','none')};float:right;">  
                                    <label style="margin-right:5px;width:25px;{!IF((disableQTYAdvisory=false),'','display:none;')}">qty: </label> 
                                    <apex:inputText id="aqty" html-data-id="aqty" size="3" styleClass="form-control" style="margin-right:5px;display: {!IF((disableQTYAdvisory=false),'inline','none')};width: 40px;padding: 0px 6px;text-align:center;" onchange="updateProductTotal()" value="{!taxAdvisoryQuantity}" />
                                    <apex:inputCheckbox id="acheck" html-data-id="acheck" styleClass="" onchange="updateProductTotal()" value="{!doAdvisory}"/>
                                </div>
                                <div style="display:{!IF((disableAdvisory=true),'inline','none')};float:right;">
                                    <a href="#" data-toggle="tooltip" class="tooltipst" title="{!disableAdvisoryMessage}" style="margin-right:18px;"><i class="fa fa-info"></i></a>
                                </div>
                            </div>
                            <div class="form-group {!IF((excludePayroll=true),'','prodgroup')}" style="display:{!IF((doPayroll=true),'block','none')};text-align:left;">
                                <label style='margin-right:5px;width:240px;'>Payroll: </label> 
                                <input type='text' id="paytimedef" html-data-id="paytimedef" style='border:0px;display:none;' value="{!payrollTimeDef}" />
                                <apex:selectList id="paytime" html-data-id="paytime" size="1" styleClass="cform" style="margin-right: 35px;" value="{!payrollTime}" onchange="updateProductTotal()" disabled="{!IF((optionPayroll=false),'true','false')}">
                                    <apex:selectOptions value="{!timeItems}"/>
                                </apex:selectList> 
                                <input type='text' id='payTotal' style='border:0px;width:117px;' value='0' /> 
                                <input type='text' id='payTotalMonth' style='border:0px;width:107px;' value='{!payrollAdjustment}' /> 
                                <div style="display:{!IF((disablePayroll=false),'inline','none')};float:right;"> 
                                    <label style="margin-right:5px;width:25px;{!IF((disableQTYPayroll=false),'','display:none;')}">qty: </label> 
                                    <apex:inputText id="payqty" html-data-id="payqty" size="3" styleClass="form-control" style="margin-right:5px;display: {!IF((disableQTYPayroll=false),'inline','none')};width: 40px;padding: 0px 6px;text-align:center;" onchange="updateProductTotal()" value="{!payrollQuantity}" />
                                    <apex:inputCheckbox id="paycheck" html-data-id="paycheck" styleClass="" onchange="updateProductTotal()" value="{!doPayroll}"/>
                                </div>
                                <div style="display:{!IF((disablePayroll=true),'inline','none')};float:right;">
                                    <a href="#" data-toggle="tooltip" class="tooltipst" title="{!disablePayrollMessage}" style="margin-right:18px;"><i class="fa fa-info"></i></a>
                                </div>
                            </div>
                            <div class="form-group {!IF((excludeBookkeeping=true),'','prodgroup')}" style="display:{!IF((doBookkeeping=true),'block','none')};text-align:left;">
                                <label style='margin-right:5px;width:240px;'>Bookkeeping: </label> 
                                <input type='text' id="bktimedef" html-data-id="bktimedef" style='border:0px;display:none;' value="{!bookkeepingTimeDef}" />
                                <apex:selectList id="bktime" html-data-id="bktime" size="1" styleClass="cform" style="margin-right: 35px;" value="{!bookkeepingTime}" onchange="updateProductTotal()" disabled="{!IF((optionBookkeeping=false),'true','false')}">
                                    <apex:selectOptions value="{!timeItems}"/>
                                </apex:selectList> 
                                <input type='text' id='bkTotal' style='border:0px;width:117px;' value='{!bookkeepingAdjustment}' /> 
                                <input type='text' id='bkTotalMonth' style='border:0px;width:107px;' value='0' /> 
                                <div style="display:{!IF((disableBookkeeping=false),'inline','none')};float:right;"> 
                                    <label style="margin-right:5px;width:25px;{!IF((disableQTYBookkeeping=false),'','display:none;')}">qty: </label> 
                                    <apex:inputText id="bkqty" html-data-id="bkqty" size="3" styleClass="form-control" style="margin-right:5px;display: {!IF((disableQTYBookkeeping=false),'inline','none')};width: 40px;padding: 0px 6px;text-align:center;" onchange="updateProductTotal()" value="{!bookkeepingQuantity}" />
                                    <apex:inputCheckbox id="bkcheck" html-data-id="bkcheck" styleClass="" onchange="updateProductTotal()" value="{!doBookkeeping}"/>
                                </div>
                                <div style="display:{!IF((disableBookkeeping=true),'inline','none')};float:right;">
                                    <a href="#" data-toggle="tooltip" class="tooltipst" title="{!disableBookkeepingMessage}" style="margin-right:18px;"><i class="fa fa-info"></i></a>
                                </div>
                            </div>
                            <div class="form-group {!IF((excludeStateFiling=true),'','prodgroup')}" style="display:{!IF((doStateFiling=true),'block','none')};text-align:left;">
                                <label style='margin-right:5px;width:240px;'>LLC State Filing: </label> 
                                <input type='text' id="sftimedef" html-data-id="sftimedef" style='border:0px;display:none;' value="{!stateFilingTimeDef}" />
                                <apex:selectList id="sftime" html-data-id="sftime" size="1" styleClass="cform" style="margin-right: 35px;" value="{!stateFilingTime}" onchange="updateProductTotal()" disabled="{!IF((optionStateFiling=false),'true','false')}">
                                    <apex:selectOptions value="{!timeItems}"/>
                                </apex:selectList> 
                                <input type='text' id='sfTotal' style='border:0px;width:117px;' value='{!stateFilingAdjustment}' /> 
                                <input type='text' id='sfTotalMonth' style='border:0px;width:107px;' value='0' /> 
                                <div style="display:{!IF((disableStateFiling=false),'inline','none')};float:right;"> 
                                    <label style="margin-right:5px;width:25px;{!IF((disableQTYStateFiling=false),'','display:none;')}">qty: </label> 
                                    <apex:inputText id="sfqty" html-data-id="sfqty" size="3" styleClass="form-control" style="margin-right:5px;display: {!IF((disableQTYStateFiling=false),'inline','none')};width: 40px;padding: 0px 6px;text-align:center;" onchange="updateProductTotal()" value="{!stateFilingQuantity}" />
                                    <apex:inputCheckbox id="sfcheck" html-data-id="sfcheck" styleClass="groupcheck" onchange="if ($('[data-id=\'sfcheck\']').prop('checked') && $('[data-id=\'sfccheck\']').prop('checked')) {$('[data-id=\'sfccheck\']').prop('checked', false);}updateProductTotal()" value="{!doStateFiling}"/>
                                </div>
                                <div style="display:{!IF((disableStateFiling=true),'inline','none')};float:right;">
                                    <a href="#" data-toggle="tooltip" class="tooltipst" title="{!disableStateFilingMessage}" style="margin-right:18px;"><i class="fa fa-info"></i></a>
                                </div>
                            </div>
                            <div class="form-group {!IF((excludeStateFilingCorp=true),'','prodgroup')}" style="display:{!IF((doStateFilingCorp=true),'block','none')};text-align:left;">
                                <label style='margin-right:5px;width:240px;'>Corp State Filing: </label> 
                                <input type='text' id="sfctimedef" html-data-id="sfctimedef" style='border:0px;display:none;' value="{!stateFilingCorpTimeDef}" />
                                <apex:selectList id="sfctime" html-data-id="sfctime" size="1" styleClass="cform" style="margin-right: 35px;" value="{!stateFilingCorpTime}" onchange="updateProductTotal()" disabled="{!IF((optionStateFilingCorp=false),'true','false')}">
                                    <apex:selectOptions value="{!timeItems}"/>
                                </apex:selectList> 
                                <input type='text' id='sfcTotal' style='border:0px;width:117px;' value='{!stateFilingCorpAdjustment}' /> 
                                <input type='text' id='sfcTotalMonth' style='border:0px;width:107px;' value='0' /> 
                                <div style="display:{!IF((disableStateFilingCorp=false),'inline','none')};float:right;"> 
                                    <label style="margin-right:5px;width:25px;{!IF((disableQTYStateFilingCorp=false),'','display:none;')}">qty: </label> 
                                    <apex:inputText id="sfcqty" html-data-id="sfcqty" size="3" styleClass="form-control" style="margin-right:5px;display: {!IF((disableQTYStateFilingCorp=false),'inline','none')};width: 40px;padding: 0px 6px;text-align:center;" onchange="updateProductTotal()" value="{!stateFilingCorpQuantity}" />
                                    <apex:inputCheckbox id="sfccheck" html-data-id="sfccheck" styleClass="groupcheck2" onchange="if ($('[data-id=\'sfcheck\']').prop('checked') && $('[data-id=\'sfccheck\']').prop('checked')) {$('[data-id=\'sfcheck\']').prop('checked', false);}updateProductTotal()" value="{!doStateFilingCorp}"/>
                                </div>
                                <div style="display:{!IF((disableStateFilingCorp=true),'inline','none')};float:right;">
                                    <a href="#" data-toggle="tooltip" class="tooltipst" title="{!disableStateFilingCorpMessage}" style="margin-right:18px;"><i class="fa fa-info"></i></a>
                                </div>
                            </div>
                            
                            <div class="form-group {!IF((excludeBackBookkeeping=true),'','prodgroup')}" style="display:{!IF((doBackBookkeeping=true),'block','none')};text-align:left;">
                                <label style='margin-right:5px;width:240px;'>Back Bookkeeping: </label> 
                                <input type='text' id="bbktimedef" html-data-id="bbktimedef" style='border:0px;display:none;' value="{!backBookkeepingTimeDef}" />
                                <apex:selectList id="bbktime" html-data-id="bbktime" size="1" styleClass="cform" style="margin-right: 35px;" value="{!backBookkeepingTime}" onchange="updateProductTotal()" disabled="{!IF((optionBackBookkeeping=false),'true','false')}">
                                    <apex:selectOptions value="{!timeItems}"/>
                                </apex:selectList> 
                                <input type='text' id='bbkTotal' style='border:0px;width:117px;' value='{!backBookkeepingAdjustment}' /> 
                                <input type='text' id='bbkTotalMonth' style='border:0px;width:107px;' value='0' /> 
                                <div style="display:{!IF((disableBackBookkeeping=false),'inline','none')};float:right;"> 
                                    <label style="margin-right:5px;width:25px;{!IF((disableQTYBackBookkeeping=false),'','display:none;')}">qty: </label> 
                                    <apex:inputText id="bbkqty" html-data-id="bbkqty" size="3" styleClass="form-control" style="margin-right:5px;display: {!IF((disableQTYBackBookkeeping=false),'inline','none')};width: 40px;padding: 0px 6px;text-align:center;" onchange="updateProductTotal()" value="{!backBookkeepingQuantity}" />
                                    <apex:inputCheckbox id="bbkcheck" html-data-id="bbkcheck" styleClass="" onchange="updateProductTotal()" value="{!doBackBookkeeping}"/>
                                </div>
                                <div style="display:{!IF((disableBackBookkeeping=true),'inline','none')};float:right;">
                                    <a href="#" data-toggle="tooltip" class="tooltipst" title="{!disableBackBookkeepingMessage}" style="margin-right:18px;"><i class="fa fa-info"></i></a>
                                </div>
                            </div>
                            <div class="form-group {!IF((excludeForeignState=true),'','prodgroup')}" style="display:{!IF((doForeignState=true),'block','none')};text-align:left;">
                                <label style='margin-right:5px;width:240px;'>Foreign State: </label> 
                                <input type='text' id="fstimedef" html-data-id="fstimedef" style='border:0px;display:none;' value="{!foreignStateTimeDef}" />
                                <apex:selectList id="fstime" html-data-id="fstime" size="1" styleClass="cform" style="margin-right: 35px;" value="{!foreignStateTime}" onchange="updateProductTotal()" disabled="{!IF((optionForeignState=false),'true','false')}">
                                    <apex:selectOptions value="{!timeItems}"/>
                                </apex:selectList> 
                                <input type='text' id='fsTotal' style='border:0px;width:117px;' value='{!foreignStateAdjustment}' /> 
                                <input type='text' id='fsTotalMonth' style='border:0px;width:107px;' value='0' /> 
                                <div style="display:{!IF((disableForeignState=false),'inline','none')};float:right;"> 
                                    <label style="margin-right:5px;width:25px;{!IF((disableQTYForeignState=false),'','display:none;')}">qty: </label> 
                                    <apex:inputText id="fsqty" html-data-id="fsqty" size="3" styleClass="form-control" style="margin-right:5px;display: {!IF((disableQTYForeignState=false),'inline','none')};width: 40px;padding: 0px 6px;text-align:center;" onchange="updateProductTotal()" value="{!foreignStateQuantity}" />
                                    <apex:inputCheckbox id="fscheck" html-data-id="fscheck" styleClass="" onchange="updateProductTotal()" value="{!doForeignState}"/>
                                </div>
                                <div style="display:{!IF((disableForeignState=true),'inline','none')};float:right;">
                                    <a href="#" data-toggle="tooltip" class="tooltipst" title="{!disableForeignStateMessage}" style="margin-right:18px;"><i class="fa fa-info"></i></a>
                                </div>
                            </div>
                            <div class="form-group {!IF((excludeBackPayroll=true),'','prodgroup')}" style="display:{!IF((doBackPayroll=true),'block','none')};text-align:left;">
                                <label style='margin-right:5px;width:240px;'>Back Quarterly Payroll: </label> 
                                <input type='text' id="bpytimedef" html-data-id="bpytimedef" style='border:0px;display:none;' value="{!backPayrollTimeDef}" />
                                <apex:selectList id="bpytime" html-data-id="bpytime" size="1" styleClass="cform" style="margin-right: 35px;" value="{!backPayrollTime}" onchange="updateProductTotal()" disabled="{!IF((optionBackPayroll=false),'true','false')}">
                                    <apex:selectOptions value="{!timeItems}"/>
                                </apex:selectList> 
                                <input type='text' id='bpyTotal' style='border:0px;width:117px;' value='{!backPayrollAdjustment}' /> 
                                <input type='text' id='bpyTotalMonth' style='border:0px;width:107px;' value='0' /> 
                                <div style="display:{!IF((disableBackPayroll=false),'inline','none')};float:right;"> 
                                    <label style="margin-right:5px;width:25px;{!IF((disableQTYBackPayroll=false),'','display:none;')}">qty: </label> 
                                    <apex:inputText id="bpyqty" html-data-id="bpyqty" size="3" styleClass="form-control" style="margin-right:5px;display: {!IF((disableQTYBackPayroll=false),'inline','none')};width: 40px;padding: 0px 6px;text-align:center;" onchange="updateProductTotal()" value="{!backPayrollQuantity}" />
                                    <apex:inputCheckbox id="bpycheck" html-data-id="bpycheck" styleClass="" onchange="updateProductTotal()" value="{!doBackPayroll}"/>
                                </div>
                                <div style="display:{!IF((disableBackPayroll=true),'inline','none')};float:right;">
                                    <a href="#" data-toggle="tooltip" class="tooltipst" title="{!disableBackPayrollMessage}" style="margin-right:18px;"><i class="fa fa-info"></i></a>
                                </div>
                            </div>
                            <div class="form-group {!IF((excludeBackBusiness=true),'','prodgroup')}" style="display:{!IF((doBackBusiness=true),'block','none')};text-align:left;">
                                <label style='margin-right:5px;width:240px;'>Back Business Return: </label> 
                                <input type='text' id="bbtimedef" html-data-id="bbtimedef" style='border:0px;display:none;' value="{!backBusinessTimeDef}" />
                                <apex:selectList id="bbtime" html-data-id="bbtime" size="1" styleClass="cform" style="margin-right: 35px;" value="{!backBusinessTime}" onchange="updateProductTotal()" disabled="{!IF((optionBackBusiness=false),'true','false')}">
                                    <apex:selectOptions value="{!timeItems}"/>
                                </apex:selectList> 
                                <input type='text' id='bbTotal' style='border:0px;width:117px;' value='{!backBusinessAdjustment}' /> 
                                <input type='text' id='bbTotalMonth' style='border:0px;width:107px;' value='0' /> 
                                <div style="display:{!IF((disableBackBusiness=false),'inline','none')};float:right;"> 
                                    <label style="margin-right:5px;width:25px;{!IF((disableQTYBackBusiness=false),'','display:none;')}">qty: </label> 
                                    <apex:inputText id="bbqty" html-data-id="bbqty" size="3" styleClass="form-control" style="margin-right:5px;display: {!IF((disableQTYBackBusiness=false),'inline','none')};width: 40px;padding: 0px 6px;text-align:center;" onchange="updateProductTotal()" value="{!backBusinessQuantity}" />
                                    <apex:inputCheckbox id="bbcheck" html-data-id="bbcheck" styleClass="" onchange="updateProductTotal()" value="{!doBackBusiness}"/>
                                </div>
                                <div style="display:{!IF((disableBackBusiness=true),'inline','none')};float:right;">
                                    <a href="#" data-toggle="tooltip" class="tooltipst" title="{!disableBackBusinessMessage}" style="margin-right:18px;"><i class="fa fa-info"></i></a>
                                </div>
                            </div>
                            <div class="form-group {!IF((excludeBackPersonal=true),'','prodgroup')}" style="display:{!IF((doBackPersonal=true),'block','none')};text-align:left;">
                                <label style='margin-right:5px;width:240px;'>Back Personal Return: </label> 
                                <input type='text' id="bptimedef" html-data-id="bptimedef" style='border:0px;display:none;' value="{!backPersonalTimeDef}" />
                                <apex:selectList id="bptime" html-data-id="bptime" size="1" styleClass="cform" style="margin-right: 35px;" value="{!backPersonalTime}" onchange="updateProductTotal()" disabled="{!IF((optionBackPersonal=false),'true','false')}">
                                    <apex:selectOptions value="{!timeItems}"/>
                                </apex:selectList> 
                                <input type='text' id='bpTotal' style='border:0px;width:117px;' value='{!backPersonalAdjustment}' /> 
                                <input type='text' id='bpTotalMonth' style='border:0px;width:107px;' value='0' /> 
                                <div style="display:{!IF((disableBackPersonal=false),'inline','none')};float:right;"> 
                                    <label style="margin-right:5px;width:25px;{!IF((disableQTYBackPersonal=false),'','display:none;')}">qty: </label> 
                                    <apex:inputText id="bpqty" html-data-id="bpqty" size="3" styleClass="form-control" style="margin-right:5px;display: {!IF((disableQTYBackPersonal=false),'inline','none')};width: 40px;padding: 0px 6px;text-align:center;" onchange="updateProductTotal()" value="{!backPersonalQuantity}" />
                                    <apex:inputCheckbox id="bpcheck" html-data-id="bpcheck" styleClass="" onchange="updateProductTotal()" value="{!doBackPersonal}"/>
                                </div>
                                <div style="display:{!IF((disableBackPersonal=true),'inline','none')};float:right;">
                                    <a href="#" data-toggle="tooltip" class="tooltipst" title="{!disableBackPersonalMessage}" style="margin-right:18px;"><i class="fa fa-info"></i></a>
                                </div>
                            </div>
                            <div class="form-group {!IF((excludeNonProfitBookkeeping=true),'','prodgroup')}" style="display:{!IF((doNonProfitBookkeeping=true),'block','none')};text-align:left;">
                                <label style='margin-right:5px;width:240px;'>Non-Profit Bookkeeping: </label> 
                                <input type='text' id="npbtimedef" html-data-id="npbtimedef" style='border:0px;display:none;' value="{!nonProfitBookkeepingTimeDef}" />
                                <apex:selectList id="npbtime" html-data-id="npbtime" size="1" styleClass="cform" style="margin-right: 35px;" value="{!nonProfitBookkeepingTime}" onchange="updateProductTotal()" disabled="{!IF((optionNonProfitBookkeeping=false),'true','false')}">
                                    <apex:selectOptions value="{!timeItems}"/>
                                </apex:selectList> 
                                <input type='text' id='npbTotal' style='border:0px;width:117px;' value='{!nonProfitBookkeepingAdjustment}' /> 
                                <input type='text' id='npbTotalMonth' style='border:0px;width:107px;' value='0' /> 
                                <div style="display:{!IF((disableNonProfitBookkeeping=false),'inline','none')};float:right;"> 
                                    <label style="margin-right:5px;width:25px;{!IF((disableQTYNonProfitBookkeeping=false),'','display:none;')}">qty: </label> 
                                    <apex:inputText id="npbqty" html-data-id="npbqty" size="3" styleClass="form-control" style="margin-right:5px;display: {!IF((disableQTYNonProfitBookkeeping=false),'inline','none')};width: 40px;padding: 0px 6px;text-align:center;" onchange="updateProductTotal()" value="{!nonProfitBookkeepingQuantity}" />
                                    <apex:inputCheckbox id="npbcheck" html-data-id="npbcheck" styleClass="" onchange="updateProductTotal()" value="{!doNonProfitBookkeeping}"/>
                                </div>
                                <div style="display:{!IF((disableNonProfitBookkeeping=true),'inline','none')};float:right;">
                                    <a href="#" data-toggle="tooltip" class="tooltipst" title="{!disableNonProfitBookkeepingMessage}" style="margin-right:18px;"><i class="fa fa-info"></i></a>
                                </div>
                            </div>
                            
                            <apex:repeat var="acOne" value="{!acList}" >
                                
                                
                                
                                
                                <div data-id="{!acOne.id}containacone" class="form-group {!If((acOne.masterOffer==true),'','prodgroup')}" style="display:{!IF((acOne.doIt=true) && (acOne.masterOffer!=true),'block','none')};text-align:left;">
                                    <label style='margin-right:5px;width:240px;'>{!acOne.name}<input type='text' id="{!acOne.id}time" html-data-id="{!acOne.id}time" style='border:0px;display:none;' value="{!acOne.billingTime}" />: </label> 
                                    <input type='text' id="{!acOne.id}timedef" html-data-id="{!acOne.id}timedef" style='border:0px;display:none;' value="{!acOne.billingTimeDef}" />
                                    <apex:selectList html-data-id="{!acOne.id}time" size="1" styleClass="cform" style="margin-right: 35px;" value="{!acOne.billingTime}" onchange="updateProductTotal()" disabled="{!IF((acOne.annualMonthlyOption=false),'true','false')}">
                                        <apex:selectOptions value="{!timeItems}"/>
                                    </apex:selectList> 
                                    <input id="{!acOne.id}year" html-data-id="{!acOne.id}year" type='text' style='border:0px;width:117px;' value="{!IF((acOne.billingTime='Monthly'),0,acOne.price)}" /> 
                                    <input type='text' id="{!acOne.id}month" html-data-id="{!acOne.id}month" style='border:0px;width:107px;' value="{!IF((acOne.billingTime='Monthly'),acOne.price,0)}" /> 
                                    <div style="display:{!IF((acOne.disableProduct=false),'inline','none')};float:right;"> 
                                        <label style="margin-right:5px;width:25px;{!IF((acOne.disableQTY=false),'','display:none;')}">qty: </label> 
                                        <apex:inputText html-data-id="{!acOne.id}acqty" size="3" styleClass="form-control" style="margin-right:5px;display: {!IF((acOne.disableQTY=false),'inline','none')};width: 40px;padding: 0px 6px;text-align:center;" onchange="updateProductTotal()" value="{!acOne.quantity}" />
                                        <apex:inputCheckbox html-data-id="{!acOne.id}check" styleClass="{!IF((acOne.id='01tf1000004hsUWAAY'),'groupcheck groupcheck2','')}" onchange="updateProductTotal()" value="{!acOne.doIt}" />
                                    </div>
                                    <div style="display:{!IF((acOne.disableProduct=true),'inline','none')};float:right;">
                                        <a href="#" data-toggle="tooltip" class="tooltipst" title="{!acOne.disableMessage}" style="margin-right:18px;"><i class="fa fa-info"></i></a>
                                    </div>
                                </div>
                                
                                
                            </apex:repeat>
                            
                            
            
                        </div>
                        
                        <div id='SavingsHolder' class="col-lg-1 col-md-12 col-sm-12 col-xs-12" style='font-size:12px;margin-bottom:10px;display:none;border-left:1px solid black;'>
                        
                            <h2 style='font-size:16px;'>Potential Savings</h2>
                        
                            <span id="sCorpSavingsContain" html-data-id="sCorpSavingsContain">S Corp: <apex:inputText id="sCorpSavings" html-data-id="sCorpSavings" style="border: 0px;font-weight:bold;" value="{!sCorpSavings}"/><br /><br /></span>
                            <span id="homeOfficeSavingsContain" html-data-id="homeOfficeSavingsContain">Home Office: <apex:inputText id="homeOfficeSavings" html-data-id="homeOfficeSavings" style="border: 0px;font-weight:bold;" value="{!homeOfficeSavings}"/><br /><br /></span>
                            <span id="busMileSavingsContain" html-data-id="busMileSavingsContain">Business Mileage: <apex:inputText id="busMileSavings" html-data-id="busMileSavings" style="border: 0px;font-weight:bold;" value="{!busMileSavings}"/><br /><br /></span>
                            <span id="qbiSavingsContain" html-data-id="qbiSavingsContain">QBI: <apex:inputText id="qbiSavings" html-data-id="qbiSavings" style="border: 0px;font-weight:bold;" value="{!qbiSavings}"/><br /><br /></span>
                            <span id="startupExpSavingsContain" html-data-id="startupExpSavingsContain">Startup Exp: <apex:inputText id="startupExpSavings" html-data-id="startupExpSavings" style="border: 0px;font-weight:bold;" value="{!startupExpSavings}"/><br /><br /></span>
                        
                            
                            Total Savings: <apex:inputText id="potentialSavings" html-data-id="potentialSavings" style="border: 0px;font-weight:bold;" value="{!potentialSavings}"/><br /><br />
                            
                            
                        
                        </div>
        
                        <div class="col-1"></div>
        
                        <div class="col-2">
        
                            
        
                        </div>
        
                    </div>
                    
                    <div id="SubmitStep2" style="display:none;" class="row">
                        <div class='col-7'>
                            <input type="button" onclick="$('#BundlePayStep2').hide();$('#ProductStep2').hide();$('#SubmitStep2').hide();$('#CalcStep1').show();$('#SubmitStep1').show();return false;" class="ui-button ui-widget ui-corner-all" style="font-size:18px;padding-left:40px;padding-right:40px;" value="Back" />
                        </div>
                        <div class='col-3' style='text-align: right;'>
                            <input type="button" onclick="if (validateStep2()) {$('#CalcStep1').hide();$('#SubmitStep1').hide();$('#BundlePayStep2').show();$('#ProductStep2').hide();$('#SubmitStep2').hide();$('#SubmitStep3').show();}return false" class="ui-button ui-widget ui-corner-all" style="font-size:18px;padding-left:40px;padding-right:40px;" value="Choose Payment Terms" />
                        </div>
                    </div>
                    
                    <div id="SubmitStep3" style="display:none;" class="row">
                        <div class='col-7'>
                            <input type="button" onclick="$('#BundlePayStep2').hide();$('#CalcStep1').hide();$('#SubmitStep1').hide();$('#SubmitStep3').hide();$('#ProductStep2').show();$('#SubmitStep2').show();return false;" class="ui-button ui-widget ui-corner-all" style="font-size:18px;padding-left:40px;padding-right:40px;" value="Back" />
                        </div>
                        <div class='col-5' style='text-align: right;'>
                            <apex:commandButton styleClass="ui-button ui-widget ui-corner-all" style="font-size:18px;padding-left:40px;padding-right:40px;" action="{!doSubmit}" onclick="return validateReglementFields();" value="Submit"/>
                        </div>
                    </div>
                    
                    <!-- customize -->
                    
                    
                    
                    <!-- choose payment terms -->
                    
                    
                    <!-- submit -->

        
                </div>
                
                <div id="opaque"/>
               <div id="spinner">
                    <p align="center" style='{font-family:"Arial", Helvetica, sans-serif; font-size:20px;}'><apex:image value="/img/loading.gif"/>&nbsp;Please wait</p>
               </div>
   
               <script>
                function showSpinner()
                {
                   document.getElementById('opaque').style.display='block';
                   var popUp = document.getElementById('spinner');
                  
                   popUp.style.display = 'block';
                } 
               </script>
                
                <script>
                
                {!IF((showBundles=true && bundle != 'None'),"updateBundle();",'')}
                
                //ADDING AND REMOVING ERRORS ON PAGE
                function jq_addError(me,msg){
                    if(!($(me).hasClass('error'))){
                        $(me).addClass("error");
                        $(me).parent().append("<div class='errorMsg'>" + msg + "</div>");
                    }
                    else{
                        $(me).siblings('.errorMsg').remove();
                        $(me).parent().append("<div class='errorMsg'>" + msg + "</div>");
                    }
                }
                
                function jq_removeError(me){
                    if($(me).hasClass('error')){
                        $(me).removeClass("error");
                        $(me).siblings('.errorMsg').remove();
                    }           
                }
                
                //3.VALIDATE FOR REQUIRED BLANK FIELDS
                function validateReglementFields(){
                    var b = true;
                    $('.jq_req').each(function(){
                        if($(this).val().length == 0){
                            jq_addError($(this),"<b style='color:red;'>Error:</b>This field is required");
                            b = false;
                        }
                        else{
                            jq_removeError($(this));
                        }               
                    });
                    
                    if (b == true) {
                        showSpinner();
                    }
                    
                    return b;
                }
                
                function validateStep2() {
                
                    // check to see if all selected checkboxes have at least a quantity of 1
                    if ($('[data-id="bcheck"]').prop('checked')) {

                        if ($('[data-id="bqty"]').val()== '0') {
                            alert('Quantity on selected product must be at least 1');
                            return false;
                        }
                    
                    }
                    
                    if ($('[data-id="pcheck"]').prop('checked')) {
                    
                        if ($('[data-id="pqty"]').val()== '0') {
                            alert('Quantity on selected product must be at least 1');
                            return false;
                        }
                    
                    }
                    
                    if ($('[data-id="paycheck"]').prop('checked')) {
                    
                        if ($('[data-id="payqty"]').val()== '0') {
                            alert('Quantity on selected product must be at least 1');
                            return false;
                        }
                    
                    }
                    
                    if ($('[data-id="acheck"]').prop('checked')) {
                    
                        if ($('[data-id="aqty"]').val()== '0') {
                            alert('Quantity on selected product must be at least 1');
                            return false;
                        }
                    
                    }
                    
                    if ($('[data-id="bkcheck"]').prop('checked')) {
                    
                        if ($('[data-id="bkqty"]').val()== '0') {
                            alert('Quantity on selected product must be at least 1');
                            return false;
                        }
                    
                    }
                    
                    if ($('[data-id="sfcheck"]').prop('checked')) {
                    
                        if ($('[data-id="sfqty"]').val()== '0') {
                            alert('Quantity on selected product must be at least 1');
                            return false;
                        }
                    
                    }
                    
                    if ($('[data-id="sfccheck"]').prop('checked')) {
                    
                        if ($('[data-id="sfcqty"]').val()== '0') {
                            alert('Quantity on selected product must be at least 1');
                            return false;
                        }
                    
                    }
                    
                    if ($('[data-id="bbkcheck"]').prop('checked')) {
                    
                        if ($('[data-id="bbkqty"]').val()== '0') {
                            alert('Quantity on selected product must be at least 1');
                            return false;
                        }
                    
                    }
                    
                    if ($('[data-id="fscheck"]').prop('checked')) {
                    
                        if ($('[data-id="fsqty"]').val()== '0') {
                            alert('Quantity on selected product must be at least 1');
                            return false;
                        }
                    
                    }
                    
                    if ($('[data-id="bpycheck"]').prop('checked')) {
                    
                        if ($('[data-id="bpyqty"]').val()== '0') {
                            alert('Quantity on selected product must be at least 1');
                            return false;
                        }
                    
                    }
                    if ($('[data-id="bbcheck"]').prop('checked')) {
                    
                        if ($('[data-id="bbqty"]').val()== '0') {
                            alert('Quantity on selected product must be at least 1');
                            return false;
                        }
                    
                    }
                    if ($('[data-id="bpcheck"]').prop('checked')) {
                    
                        if ($('[data-id="bpqty"]').val()== '0') {
                            alert('Quantity on selected product must be at least 1');
                            return false;
                        }
                    
                    }
                    if ($('[data-id="npbcheck"]').prop('checked')) {
                    
                        if ($('[data-id="npbqty"]').val()== '0') {
                            alert('Quantity on selected product must be at least 1');
                            return false;
                        }
                    
                    }
                    
                    <apex:repeat var="acOne" value="{!acList}" >
                    
                        if ($('[data-id="{!acOne.id}check"]').prop('checked')) {
                    
                            if ($('[data-id="{!acOne.id}acqty"]').val() == '0') {
                                alert('Quantity on selected product must be at least 1');
                                return false;
                            }
                    
                        }
                    
                    </apex:repeat>
                    
                    return true;               
                }
                
                function validateReglementFieldsStep1(){
                    var b = true;
                    $('.jq_req1').each(function(){
                        if($(this).val().length == 0){
                            jq_addError($(this),"<b style='color:red;'>Error:</b>This field is required");
                            b = false;
                        }
                        else{
                            if($(this).val() == '13+' || $(this).val() == '10+' || $(this).val() == '21+' || $(this).val() == '41+'){
                            
                                jq_addError($(this),"<b style='color:red;'>Error:</b>This client requires a custom quote.");
                                b = false;

                            } else {
                                jq_removeError($(this));
                            }
                            
                        }              
                    });
                                       
                    return b;
                }
                
                
     
                </script> 

            </apex:form>

        </body>
        
    </html>
  
</apex:page>