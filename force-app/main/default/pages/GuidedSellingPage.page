<apex:page standardStylesheets="false" action="{!updateEventSubject}" showHeader="false" sidebar="false" applyHtmlTag="false" applyBodyTag="false" docType="html-5.0" standardController="Opportunity" extensions="GuidedSellingControllerExtension,PreTSAControllerExtension">
    <html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" lang="en">    
<apex:form id="mainForm">
        <head>
        <meta charset="utf-8"/>
        <meta http-equiv="x-ua-compatible" content="ie=edge"/>
        <title>Guided Selling</title>
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&amp;display=swap" rel="stylesheet"/>
        <apex:stylesheet value="{!URLFOR( $Resource.bootstrap, 'bootstrap-5.0.1-dist/css/bootstrap.min.css' )}" />
        <link REL="SHORTCUT ICON" HREF="{!URLFOR($Resource.accountantLogoFavicon)}"/>
        <!-- <link href="/GuidedSellingSales/slds/css/kaIoKnAZHZUvXbAOmzqoQg/min/scoped/one:oneNamespace,force:sldsTokens,force:base,force:formFactorLarge/slds.css" type="text/css" class="user" rel="stylesheet"/> -->
        <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons"/>
        <apex:slds />
        <style>
            body { 
            font-family: 'Poppins';
            font-feature-settings: 'ss01' on, 'ss02' on, 'ss04' on;
            margin: 0 auto; 
            float: center;
            overflow: hidden;
            }

            .slds-scope button {
            font-family: 'Poppins';
            font-feature-settings: 'ss01' on, 'ss02' on, 'ss04' on;
            color: none;
            }
            
            .slds-scope td {
            font-family: 'Poppins';
            font-feature-settings: 'ss01' on, 'ss02' on, 'ss04' on;
            }
            
            .slds-scope button, button {
            font-size: 17px;
            font-weight: 600;
            }
            
            .slds-scope hr {
            color: rgba(18, 23, 36, 0.2);
            margin: 0.7rem;
            width: 150%;
            margin-left: -125px;
            border-top: 0px;
            }
            
            hr {
            opacity: 1;
            }
            
            .slds-scope {
            font-family: 'Poppins';
            font-weight: 400;
            }
            
            .slds-scope .slds-box {
            border: none;
            border-radius: 0px;
            }
            
            .slds-scope .slds-wrap {
            flex-wrap: nowrap;
            }
            
            #formBody, #blastBody, #menuBody, #businessDisc, #businessDiscParts, #properEstityStrugleLLC,#properEstityStrugleSCorp, #flowThroughEntitySCorp, 
            #flowThroughEntityLLC, #entityClassificationElec, #properEntityStrugReviewLLC, #boiIntroLLC, #boiIntroSCorp,
            #selfEmploymentTaxSCorp, #reasonableSalarySCorp, #selfEmploymentTaxLLC, #properEntityStrugReviewSCorp, #deductionsIntro {
            margin: 0 auto;
            padding-left: 100px;
            padding-right: 100px;
            padding-bottom: 20px;
            overflow-y: auto;
            overflow-x: hidden;
            }
            
            #startUpCosts, #medicalDeduction, #vehicleDeduction, #homeOfficeDeduction, #codeDeduction, #reviewDeduction, #paperloss, #preparedPackages, #verifyInformation, 
            #scheduleDiscMeeting, #boiSummary,
            #paymentDetails, #postPurchase, #paymentDetails, #postPurchase, #features, #expertAccountant, #portalTour, #filingBusinessTaxes, #filingECE, #presWrapUp {
            margin: 0 auto;
            padding-left: 100px;
            padding-right: 100px;
            padding-bottom: 20px;
            overflow-y: auto;
            overflow-x: hidden;
            width: 100%;
            }
            
            #blastBody, #formBody, #menuBody, #formClientDet, #formClientView, .slds-grid_vertical, #businessDisc, #businessDiscParts, #properEstityStrugleLLC, 
            #properEstityStrugleSCorp, #properEntityStrugReviewLLC, #boiIntroLLC, #boiIntroSCorp,
            #flowThroughEntitySCorp, #flowThroughEntityLLC, #entityClassificationElec, #selfEmploymentTaxSCorp, #reasonableSalarySCorp, #selfEmploymentTaxLLC, 
            #properEntityStrugReviewSCorp, #deductionsIntro {
            width: 100%;
            }

            #selfEmploymentTaxSCorp, #reasonableSalarySCorp, #selfEmploymentTaxLLC, #paperloss, #features, #portalTour {
            scroll-behavior: smooth;
            }
            
            #formClientDet {
            margin: 0 auto;
            overflow-y: auto;
            padding-left: 82px;
            padding-top: 37px;
            border: 1px solid #c0c0c0;
            }
            
            #formClientView {
            margin: 0 auto;
            background: #3F5261;
            overflow: hidden;
            position: relative;
            }

            #modalClientScreen {
            background: #3F5261;
            overflow: hidden;
            border-radius: 16px;
            width: 90%;
            height: 87%;
            margin-top: 1%;
            margin-left: 3%;
            }

            .clientContent {
                height: 87%;
                width: 94%;
                margin-top: -13%;
                margin-left: 3%;
                background: rgba(255, 255, 255, 1);
                top: 50%;
                -ms-transform: translateY(35%);
                transform: translateY(35%);
            }

            .openClientView {
                background: #FFFFFF;
                border-radius: 48px;
                width: 45px;
                height: 45px;
                right: 9px;
                top: 5px;
                border: none;
                color: rgba(18, 23, 36, 0.65);
                position: absolute;
            }
            
            #inlineFrameExample {
            position: absolute;
            top: 0;
            left: 4px;
            bottom: 0;
            right: 0;
            border: none;
            overflow-y: scroll;
            overflow-x: hidden;
            margin-top: 50px;
            }

            #inlineFrameExampleClient {
            position: absolute;
            top: 0;
            left: 0;
            bottom: 0;
            right: 0;
            border: none;
            overflow-y: scroll;
            overflow-x: hidden;
            }
            
            .noteClientView {
            font-weight: 600;
            font-size: 15px;
            line-height: 24px;
            letter-spacing: 0.02em;
            color: #FFFFFF;
            }
            
            .slds-scope p.noteClientView {
            bottom: 0px;
            position: absolute;
            text-align: center;
            margin-left: 30%;
            }
            
            .title {
            padding-top: 20px;
            }
            
            .titleTxt {
            font-weight: 500;
            font-size: 28px;
            line-height: 40px;
            color: #000000;
            }
            
            .formTxt {
            margin-top: 32px;
            max-width: 720px;
            }
            
            p.formTxtbottom {
            margin-bottom: 32px;
            }
            
            .subTitleTxt {
            font-weight: 500;
            font-size: 28px;
            line-height: 40px;
            letter-spacing: 0.01em;
            color: #000000;
            }
            
            .normalTxt {
            font-size: 20px;
            line-height: 32px;
            letter-spacing: 0.01em;
            color: rgba(18, 23, 36, 0.91);
            }
            
            .slds-scope p.discoTitle {
            font-weight: 500;
            font-size: 18px;
            line-height: 28px;
            margin-bottom: 25px;
            margin-top: 90px;
            }
            
            .slds-scope p.discoTitle2 {
            font-weight: 500;
            font-size: 18px;
            line-height: 28px;
            margin-bottom: 25px;
            }
            
            .accInfo {
            margin-top: 24px;
            }
            
            .AccName {
            font-size: 24px;
            line-height: 36px;
            letter-spacing: 0.0075em;
            color: rgba(18, 23, 36, 0.91);
            }
            
            .leadSource, .blast {
            font-size: 18px;
            line-height: 28px;
            letter-spacing: 0.01em;
            color: rgba(18, 23, 36, 0.65);
            }
            
            .blast {
            font-weight: 500;
            color: rgba(18, 23, 36, 0.91);
            }
            
            #buttons, .divider, .blast, .btnmodal {
            display: inline-block;
            }
            
            #btnEndNote {
            color: rgba(18, 23, 36, 0.65);
            font-size: 15px;
            line-height: 16px;
            }
            
            #buttons {
            margin-top: 12px;
            }
            
            #buttonsDisc {
            margin-top: 12px;
            margin-bottom: 25px;
            width: 50%;
            display: inline-block;
            }
            
            .divider {
            width: 12px;
            }
            
            .slds-scope button.yesBtn, .slds-scope button.noBtn  {
            font-size: 15px;
            border-radius: 30px;
            padding: 10px 16px;
            float: center;
            display: inline-block;
            font-weight: 600;
            letter-spacing: 0.02em;
            line-height: 24px;
            border: 1px solid #c0c0c0;
            background-color: white;
            color: black;
            background: white;
            }
            
            .slds-scope button.yesBtn:hover, .slds-scope button.noBtn:hover {
            background-color: #E6E6E6;
            border: 1px solid #c0c0c0;
            background: #E6E6E6;
            color: black;
            }
            
            .slds-scope button.hidequestion, .slds-scope button#showficaexample {
            font-size: 16px;
            border-radius: 30px;
            padding: 10px 16px;
            float: center;
            display: inline-block;
            font-weight: 600;
            letter-spacing: 0.02em;
            line-height: 24px;
            border: 1px solid #c0c0c0;
            background-color: white;
            color: #1776B6;
            background: white;
            }
            
            .slds-scope button.hidequestion:hover, .slds-scope button#showficaexample:hover {
            background-color: #1776B6;
            border: 1px solid #1776B6;
            background: #1776B6;
            color: white;
            }
            
            #txtRequired {
            font-weight: 600;
            font-size: 14px;
            line-height: 20px;
            letter-spacing: 0.01em;
            color: rgba(18, 23, 36, 0.65);
            }
            
            #txtRequiredOrange {
            font-weight: 600;
            font-size: 14px;
            line-height: 20px;
            letter-spacing: 0.01em;
            color: #F15F22;
            }
            
            .slds-scope button.start, .start {
            font-size: 15px;
            border-radius: 36px;
            padding: 10px 16px;
            float: center;
            display: inline-block;
            font-weight: 500;
            line-height: 16px;
            letter-spacing: 0.75px;
            border: 1px solid #F15F22;
            background-color: #F15F22;
            color: white;
            background: #F15F22;
            opacity: 0.25;
            }
            
            #stopPres, #discardEditing {
            background-color: #C71331;
            background: #C71331;
            opacity: 0.5;
            padding: 13.7px 18px 13.7px 18px;
            }
                        
            #secondStart, #thirdStart #skiptoSale, #keepEditing, #btnDissolution, #saveEditClient, #saveEditPackage, #portalNextBtn, #skipficaexample, .start {
            opacity: 1;
            }
            
            #stopPres:hover, #discardEditing:hover {
            background-color: #cc2a45;
            color: #cc2a45;
            }
            
            #skiptoSale:hover, #btnDissolution:hover, #keepEditing:hover {
            background-color: rgb(23, 118, 182);
            color: white;
            }
            
            #btnAdd {
            align-items: right;
            text-align: right;
            }
            
            .slds-scope a.addPartnerstwo {
            color: #0780A6;
            font-size: 15px;
            line-height: 16px;
            letter-spacing: 0.75px;
            margin-left: 4px;
            margin-top: 50px;
            }
            
            .slds-scope a.addPartnerstwo:hover {
            text-decoration: none;
            color: #04475d;
            }
            
            .dims  {
            margin-top: 14px;
            margin-bottom: 1px;
            align-items: center;
            width: 99%;  
            height: 85%; 
            padding: 0.42em;
            }

            .changeover {
            align-items: center;
            width: 200px;  
            height: 400px; 
            }
            
            .accContacts {
            margin-top: 20px;
            }
            
            #contTable {
            border-collapse: collapse;
            width: 91.2%;  
            }
            
            #contTable td {
            padding-top: 16px;
            padding-bottom: 16px;
            }
            
            #contTable tr {
            border: solid rgba(18, 23, 36, 0.2);
            border-width: 1px 0;
            }
            
            #contTable tr:first-child {
            border-top: none;
            }
            
            #contTable tr td:first-child, #contTable tr td:last-child {
            width: 1%;
            white-space: nowrap;
            }
            
            #contTable tr:last-child {
            border-bottom: none;
            }
            
            .contIni {
            background: #3B7A80;
            font-weight: 600;
            font-size: 17px;
            line-height: 25.5px;
            color: #FFFFFF;
            margin-right: 16px;
            padding-left: 17px;
            padding-right: 17px;
            padding-top: 10px;
            padding-bottom: 10px;
            border-radius: 150px;
            }
            
            .contInfo {
            text-align: left;
            }
            
            .contContaInfo {
            text-align: right;
            }
            
            .contName {
            color: rgba(18, 23, 36, 0.91);
            font-weight: 600;
            }
            
            .contRole, .contPhone, .contEmail {
            color: rgba(18, 23, 36, 0.65);
            }
            
            .contName, .contRole, .contPhone, .contEmail {
            font-size: 14px;
            line-height: 20px;
            letter-spacing: 0.01em;
            }
            
            .contMore {
            font-size: 24px;
            margin-left: 16px;
            position: relative;
            display: inline-block;
            }
            
            form, .form-floating {
            width: 100%;
            margin: 0;
            }
            
            .form-floating>.form-control, .form-floating>.form-select {
            height: 44px;
            }
            
            .form-floating input#businessName, .form-floating input#ownersOutside {
            height: 52px;
            width: 40%;
            margin-top: 2%;
            }
            
            .form-floating>.form-select {
            padding-top: 3%;
            }
            
            .form-select {
            background-image: url({!$Resource.arrow});
            height: 5px;
            background-size: auto;
            }

            .date-select {
                height: auto;
                padding-top: 5%;
                padding-bottom: 5%;
                padding-left: 5%;
                padding-right: 2%;
                flex-direction: row;
                width: 100%;
            }
            
            .form-floating select {
            font-weight: 400;
            border: 1px solid rgba(18, 23, 36, 0.2);
            border-radius: 4px;
            display: flex;
            flex-direction: column;
            font-weight: normal;
            font-size: 15px;
            line-height: 20px;
            color: rgba(18, 23, 36, 0.91);
            }
            
            .form-btn {
            align-items: right;
            float: right;
            }
            
            .slds-scope button.btnSkip, .slds-scope button.btnStop {
            background-color: #FFFFFF;
            background: #FFFFFF;
            border: 1px solid rgba(18, 23, 36, 0.2);
            border-radius: 30px;
            font-weight: 500;
            font-size: 15px;
            line-height: 16px;
            letter-spacing: 0.75px;
            margin: 0px 8px;
            padding: 13.7px 18px 13.7px 18px;
            }
            
            .slds-scope button.btnSkip {
            color: #1776B6;
            }
            
            .slds-scope button.btnStop {
            color: #C71331;
            }
            
            .btnSkip:hover {
            color: #0B3C5E;
            }
            
            .btnStop:hover {
            color: #0B3C5E;
            }
            
            .partTable {
            margin-top: 16px;
            margin-bottom: 16px;
            }
            
            #addPartTable1, #addPartTable2 {
            border-collapse: collapse; 
            }
            
            #addPartTable1 td, #addPartTable2 td {
            padding-top: 24px;
            padding-bottom: 24px;
            }
            
            #addPartTable1 tr:first-child, #addPartTable2 tr:first-child {
            border-top: 2px solid rgba(18, 23, 36, 0.2);
            }
            
            #addPartTable1 tr:last-child, #addPartTable2 tr:last-child {
            border-bottom: 2px solid rgba(18, 23, 36, 0.2);
            }
            
            #addPartTable2 tr td:first-child, #addPartTable2 tr td:last-child {
            width: 1%;
            white-space: nowrap;
            }
            
            .modal {
            display: none;
            background: rgba(18, 23, 36, 0.2);
            position: fixed;
            margin:0 auto;
            width:100%;
            height:100%;
            }
            
            .content{
            width: 640px;
            background: rgba(255, 255, 255, 1);
            margin:0 auto;
            padding-top: 1%;
            padding-bottom: 2%;
            border-radius: 7px;
            top: 50%;
            -ms-transform: translateY(35%);
            transform: translateY(35%);
            }
            
            #modalHeaderTable td {
            padding-bottom: 2%;
            padding-left: 3.5%;
            padding-right: 3.5%;
            }
                        
            .modalHeaderTitle {
            font-weight: 500;
            font-size: 20px;
            line-height: 28px;
            letter-spacing: 0.15px;
            color: rgba(18, 23, 36, 0.91);
            }
            
            .slds-scope button.modalHeaderClose {
            float: right;
            color: rgba(18, 23, 36, 0.65);
            background-color: #FFFFFF;
            background: #FFFFFF;
            border: 1px solid #FFFFFF;
            font-weight: 500;
            font-size: 15px;
            line-height: 16px;
            letter-spacing: 0.75px;
            margin-top: 2.5%;
            }
            
            .slds-scope button.modalHeaderClose:hover {
            color: #000000;
            }
            
            #modalBody {
            padding-top: 32px;
            padding-bottom: 32px;
            padding-right: 3.5%;
            padding-left: 3.5%;
            }
            
            .form-floating input {
            font-weight: 400;
            border: 1px solid rgba(18, 23, 36, 0.2);
            border-radius: 4px;
            display: flex;
            flex-direction: row;
            font-weight: normal;
            font-size: 15px;
            line-height: 20px;
            color: rgba(18, 23, 36, 0.65);
            }
            
            #modalBody>.form-floating>input {
            height: 54px;
            width: 480px;
            }
            
            #modalBody>.form-floating {
            padding-bottom: 24px;
            }
            
            #modalFooter {
            padding-right: 2%;
            padding-left: 2%;
            }
            
            .slds-scope button.btnAddRow, .slds-scope button.btnSaveEditClient, .slds-scope button.btnSaveEditPackage, .slds-scope button#skipficaexample {
            color: #FFFFFF;
            background-color: #F15F22;
            background: #F15F22;
            border: 1px solid #F15F22;
            opacity: 0.25;
            font-weight: 600;
            font-size: 15px;
            line-height: 24px;
            letter-spacing: 0.02em;
            border-radius: 30px;
            line-height: 16px;
            margin: 0px 8px;
            padding: 13.7px 18px 13.7px 18px;
            }
            
            .slds-scope button.btnCloseModal {
            color: rgba(18, 23, 36, 0.91);
            background-color: #FFFFFF;
            background: #FFFFFF;
            border: 1px solid rgba(18, 23, 36, 0.2);
            font-weight: 600;
            font-size: 15px;
            line-height: 24px;
            letter-spacing: 0.02em;
            border-radius: 30px;
            line-height: 16px;
            margin: 0px 8px;
            padding: 13.7px 18px 13.7px 18px;
            }
            
            .slds-scope button.btnCloseModal:hover {
            background-color: #E6E6E6;
            background: #E6E6E6;
            }
            
            .slds-scope button.backBtn {
            color: #1776B6;
            background-color: #FFFFFF;
            background: #FFFFFF;
            border: none;
            padding: 0;
            font-size: 15px;
            line-height: 24px;
            }
            
            .slds-scope button.backBtn:hover {
            color: #04475d;
            }
            
            .backDesc {
            letter-spacing: 0.01em;
            color: rgba(18, 23, 36, 0.65);
            }
            
            .modalTitle {
            font-size: 20px;
            line-height: 32px;
            letter-spacing: 0.01em;
            color: rgba(18, 23, 36, 0.91);
            }
            
            .modalDesc {
            font-size: 14px;
            line-height: 20px;
            letter-spacing: 0.01em;
            color: rgba(18, 23, 36, 0.65);
            }

            #notLLC, #incomplete, #notInterested {
                margin-top: 1%;
            }
            
            .slds-scope p.modalOption {
                font-weight: 400;
                font-size: 16px;
                line-height: 24px;
                letter-spacing: 0.01em;
                color: rgba(18, 23, 36, 0.65);
                margin-bottom: 3%;
            }
            
            #btnSubMenu {
            cursor: pointer;
            }
            
            .dropdown-content {
            display: none;
            position: absolute;
            box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
            z-index: 1;
            width: 166px;
            background: #FFFFFF;
            border-radius: 8px;
            top: 100%;
            left: -595%;
            }
            
            .slds-scope .dropdown-content a {
            padding: 12px;
            display: block;
            font-size: 15px;
            line-height: 24px;
            letter-spacing: 0.5px;
            float: left;
            }
            
            .slds-scope .contMore a:hover {
            text-decoration: none;
            color: #1776B6;
            }
            
            .show {
            display: block; 
            }
            
            #icon {
            color: rgba(0, 0, 0, 0.54);
            vertical-align: middle;
            }
            
            #edit {
            border-top: 1px solid rgba(18, 23, 36, 0.2);
            }
            
            .context-menu {
            position: absolute;
            text-align: center;
            box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
            background: #FFFFFF;
            border-radius: 8px;
            }
            
            .context-menu ul {
            min-width: 130px;
            }
            
            .context-menu ul li {
            padding-bottom: 7px;
            padding-top: 7px;
            }
            
            .context-menu ul li:hover {
            text-decoration: none;
            color: #1776B6;
            }
            
            .highlight {
            background-color: #8BD5C6;
            }
            
            .unhighlight {
            background-color: none;
            }
            
            #engageTxt {
            font-size: 24px;
            line-height: 36px;
            letter-spacing: 0.0075em;
            color: rgba(18, 23, 36, 0.65);
            vertical-align: middle;
            }
            
            #engage, #engagee, #emailSent {
            vertical-align: middle;
            border-bottom-style: solid;
            border-Top-style: solid;
            border-bottom-width: 1px;
            border-top-width: 1px;
            border-bottom-color: rgba(18, 23, 36, 0.2);
            border-Top-color: rgba(18, 23, 36, 0.2);
            margin-bottom: 20px;
            padding-Top: 10px;
            padding-bottom: 10px;            
            }

            #emailSent {
                display: none;
            }

            #engagee {
            margin-top: 24px;
            }
            
            .slds-scope button#currSlide2, .slds-scope button#currSlide1, .slds-scope button#currSlide3, 
            .slds-scope button#currentSlide1, .slds-scope button#currentSlide2, .slds-scope button#currentSlide3, 
            .slds-scope button#currtSlide3, .slds-scope button#currtSlide2, .slds-scope button#currtSlide1,
            .slds-scope button#currtSlide1features, .slds-scope button#currtSlide2features, .slds-scope button#currtSlide3features,
            .slds-scope button#currtSlide1portalTour, .slds-scope button#currtSlide2portalTour, .slds-scope button#currtSlide3portalTour, .slds-scope button#currtSlide4portalTour, 
            .slds-scope button#currtSlide5portalTour, .slds-scope button#currtSlide6portalTour, .slds-scope button#currtSlide7portalTour, .slds-scope button#currtSlide8portalTour , 
            .slds-scope button#currtSlide9portalTour {
            font-weight: 600;
            font-size: 15px;
            line-height: 24px;
            letter-spacing: 0.02em;
            color: rgba(18, 23, 36, 0.91);
            border-radius: 36px;
            padding: 5px 16px;
            float: center;
            display: inline-block;
            border: 1px solid #E7EAF0;
            background-color: #E7EAF0;
            background: #E7EAF0;
            }
            
            .placeHold {
            font-size: 15px;
            line-height: 20px;
            letter-spacing: 0.15px;
            color: rgba(18, 23, 36, 0.65);
            }
            
            .form-floating select#state option:first-child { 
            color: rgba(18, 23, 36, 0.65);
            }
            
            #verticaltLine1,  #verticaltLine2,  #verticaltLine3, 
            #verticalSectLine1, #verticalSectLine2, #verticalSectLine3,
            #vertSectLine1, #vertSectLine2, #vertSectLine3, 
            #vertLine1features, #vertLine2features, #vertLine3features, 
            #vertLine1portalTour, #vertLine2portalTour, #vertLine3portalTour, #vertLine4portalTour, #vertLine5portalTour, #vertLine6portalTour, #vertLine7portalTour, #vertLine8portalTour, #vertLine9portalTour {
            border-radius: 4px;
            border-left: 5px solid #F15F22;
            padding-left: 16px;
            margin-left: -20px;
            }
            
            .quote {
            display: none;
            padding: 10px 10px 10px 20px;
            width: 91.2%;
            height: 60px;
            left: 0px;
            background: #F7F5F2;
            border: 1px solid rgba(18, 23, 36, 0.2);
            border-radius: 64px;
            }
            
            .slds-scope p.quoteTitle {
            font-weight: 500;
            font-size: 18px;
            line-height: 28px;
            letter-spacing: 0.01em;
            color: rgba(18, 23, 36, 0.91);
            }
            
            .slds-scope p.quoteText {
            font-weight: 600;
            font-size: 18px;
            line-height: 28px;
            text-align: right;
            letter-spacing: 0.01em;
            color: rgba(18, 23, 36, 0.91);
            }
            
            .slds-scope button#quoteEdit {
            padding: 8px 16px;
            width: 62px;
            height: 40px;
            font-weight: 600;
            line-height: 24px;
            letter-spacing: 0.02em;
            opacity: 1;
            float: right;
            }
                        
            .form-floating>.form-select#mainCategory {
            padding-top: 16px;
            padding-bottom: 16px;
            height: 2%;
            }
            
            #quetionsTable tr {
            border-bottom: 1px solid rgba(18, 23, 36, 0.2);
            }
            
            #quetionsTable tr td.actionRow {
            display: flex;
            margin-top: 25%;
            }
            
            #quetionsTable tr td.questionRow {
            width: 85%;
            }
            
            #showtxt {
            font-weight: 500;
            font-size: 14px;
            line-height: 20px;
            letter-spacing: 0.01em;
            margin-right: 7%;
            }
            
            .switch {
            position: relative;
            display: inline-block;
            width: 36px;
            height: 22px;
            margin-top: 1.6%;
            margin-right: 4%
            }
            
            .switch input { 
            opacity: 0;
            width: 0;
            height: 0;
            }
            
            .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #75777A;
            -webkit-transition: .4s;
            transition: .4s;
            }
            
            .slider:before {
            position: absolute;
            content: "";
            height: 16px;
            width: 16px;
            left: 4px;
            bottom: 3px;
            background-color: white;
            -webkit-transition: .4s;
            transition: .4s;
            
            }
            
            input:checked + .slider {
            background-color: #F15F22;
            /* opacity: 0.25; */
            
            
            }
            
            input:checked + .slider:before {
            -webkit-transform: translateX(80%);
            -ms-transform: translateX(80%);
            transform: translateX(80%);
            
            
            }
            
            .slider.round {
            border-radius: 34px;
            }
            
            .slider.round:before {
            border-radius: 50%;
            }
            
            #optTitle {
            font-weight: 600;
            font-size: 16px;
            line-height: 24px;
            }
            
            p.optText {
            background: #F6F4F2;     
            padding: 20px;
            border-left: 4px solid rgba(18, 23, 36, 0.2);
            border-radius: 5px;
            }
            
            #shadowText {
            text-shadow: 1px 1px grey;
            }

            #employees, #hasEmpContractors, #hasRentals, #workingHome, #drive {
                border: none !important;
            }
            
            #editPackage, #reschedule {
            display: flex;
            margin-bottom: 3%;
            vertical-align: middle;
            }
            
            #ending {
            opacity: 1;
            margin-bottom: 3%;
            vertical-align: middle;
            }
            
            #btnSendQuote {
            border: 1px solid rgb(231, 234, 240);
            color: rgb(23, 118, 182);
            background: white;
            font-weight: 600;
            font-size: 15px;
            line-height: 24px;
            letter-spacing: 0.02em;
            border-radius: 36px;
            padding: 5px 16px;
            float: center;
            display: inline;
            margin-bottom: 3%;
            margin-top: 3%;
            vertical-align: middle;
            }
            
            #skiptoSale, #btnDissolution, #keepEditing {
            border: 1px solid rgb(231, 234, 240);
            color: rgb(23, 118, 182);
            background: white;
            font-weight: 500;
            font-size: 15px;
            line-height: 16px;
            letter-spacing: 0.75px;
            border-radius: 36px;
            padding: 13.7px 18px 13.7px 18px;
            display: inline;
            vertical-align: middle;
            }

            #keepEditing {
            padding: 9.7px 18px 9.7px 18px;
            }

            .slds-scope button.accordion {
            width: 100%;
            border: none;
            background-color: white; 
            border-bottom: solid 1px rgba(18, 23, 36, 0.2);
            text-align: left;
            outline: none;
            font-weight: 500;
            font-size: 24px;
            line-height: 36px;
            letter-spacing: 0.0075em;
            color: rgba(18, 23, 36, 0.91);
            transition: 0.4s;
            margin-bottom: 3%;
            }

            .active, .accordion:hover {
            background-color: white; 
            }

            .panel {
            display: none;
            overflow: hidden;
            padding-left: 1%;
            padding-right: 1%;
            }
            
            .slds-scope p#commonObjections {
            font-weight: 500;
            font-size: 28px;
            line-height: 40px;
            color: rgba(18, 23, 36, 0.91);
            margin-bottom: 5%;
            margin-top: 5%;
            }
            
            .arrows {
            text-align: right;
            padding: 4px;
            float: right;
            background: #E7EAF0;
            border-radius: 32px;
            }
            
            #lessArrow1, #lessArrow2, #lessArrow3, #lessArrow4, #lessArrow5, #lessArrow6 {
            display: none;
            }
            
            #modalBodyPackage {
            padding-top: 1.5%;
            padding-right: 1.5%;
            padding-left: 1.5%;
            }
            
            .tabs {
            display: flex;
            margin: 0;
            overflow: hidden; 
            }
            
            .tabs [class^="tab"] label, .tabs [class*=" tab"] label {
            color: rgba(18, 23, 36, 0.91);
            cursor: pointer;
            display: block;
            font-weight: 500;
            font-size: 14px;
            line-height: 24px;
            letter-spacing: 0.75px;
            padding: 7px 15px;
            text-align: center;
            background: #FFFFFF;
            border: 1px solid rgba(18, 23, 36, 0.2);
            border-radius: 40px;
            margin-right: 6px;
            }
  
            .tabs [class^="tab"] [type="radio"], .tabs [class*=" tab"] [type="radio"] {
            cursor: pointer;
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
            display: block;
            width: 100%;
            -webkit-transition: all 0.3s ease-in-out;
            -moz-transition: all 0.3s ease-in-out;
            -o-transition: all 0.3s ease-in-out;
            transition: all 0.3s ease-in-out; 
            }

            .tabs [class^="tab"] label:hover, .tabs [class^="tab"] label:focus, 
            .tabs [class*=" tab"] label:hover, .tabs [class*=" tab"] label:focus {
            background: #e3e4e4;
            }
                
            .tabs [class^="tab"] [type="radio"]:checked + div, .tabs [class*=" tab"] [type="radio"]:checked + div {
            opacity: 1; 
            }
    
            .tabs [class^="tab"] [type="radio"] + div, .tabs [class*=" tab"] [type="radio"] + div {
            display: block;
            opacity: 0;
            padding: 10px 0;
            width: 90%;
            -webkit-transition: all 0.3s ease-in-out;
            -moz-transition: all 0.3s ease-in-out;
            -o-transition: all 0.3s ease-in-out;
            transition: all 0.3s ease-in-out; 
            }
              
            .tabs .tab-2 [type="radio"]:checked + div {
            margin-left: 0; 
            }
            
            input[type=checkbox].radiobtn, output[type=checkbox].radiobtn {
            position: absolute;
            visibility: hidden;
            display: none;
            }
        
            .radioLabel {
            color: #1776B6;
            display: table-cell;
            cursor: pointer;
            font-weight: bold;
            padding: 11px 9px;
            }
        
            input[type=checkbox]:checked + label, output[type=checkbox]:checked + label {
            color: rgba(18, 23, 36, 0.91);
            background: rgba(23, 118, 182, 0.16);
            }
        
            label + input[type=checkbox] + label, label + output[type=checkbox] + label {
            border-left: 1px solid rgba(18, 23, 36, 0.2);
            }
            
            .radio-group {
            border: 1px solid rgba(18, 23, 36, 0.2);
            display: inline-block;
            margin-left: 11px;
            margin-right: 11px;
            border-radius: 10px;
            overflow: hidden;
            }
            
            .slds-scope p.planPackageTableTitle {
            font-weight: 500;
            font-size: 14px;
            line-height: 20px;
            text-align: center;
            letter-spacing: 0.01em;
            color: rgba(18, 23, 36, 0.65);
            }
            
            .slds-scope p.planPackageTableProd {
            font-weight: 400;
            font-size: 16px;
            line-height: 24px;
            letter-spacing: 0.01em;
            color: rgba(18, 23, 36, 0.91);
            margin-left: 18px;
            }
            
            .slds-scope p.planPackageTableCost {
            font-weight: 400;
            font-size: 16px;
            line-height: 24px;
            text-align: right;
            letter-spacing: 0.01em;
            color: rgba(18, 23, 36, 0.91);
            }
            
            .slds-scope p.planPackageTableSubtotal {
            font-weight: 600;
            font-size: 16px;
            line-height: 24px;
            text-align: right;
            letter-spacing: 0.01em;
            color: rgba(18, 23, 36, 0.91);
            }
            
            .form-floating>#planPackageTableQuantity:not(:placeholder-shown), .form-floating>#planPackageTableQuantityOutput:not(:placeholder-shown) {
            padding-top: 0.6rem;
            width: 105px;
            float: right;
            }
            
            input[type=checkbox]#actionPlanTable:checked, input[type=checkbox]#authorizes:checked, input[type=checkbox]#receiveMessages:checked {
            background: #3B7A80;
            background-color: #3B7A80;
            }
            
            input[type=checkbox]#actionPlanTable, input[type=checkbox]#authorizes, input[type=checkbox]#receiveMessages {
            background: #FFFFFF;
            Width: 25px;
            Height: 15px;
            }
            
            .modalNote {
            font-weight: 400;
            font-size: 14px;
            line-height: 20px;
            text-align: right;
            letter-spacing: 0.01em;
            color: #000000;
            }
            
            .modalAmount {
            font-weight: 800;
            font-size: 18px;
            line-height: 28px;
            text-align: right;
            letter-spacing: 0.01em;
            color: #000000;
            }
            
            #currentPlan, #AllPlan, #frequentPlan, #businessPlan, #personalPlan, #payrollPlan, #bookkeepingPlan, #entityFormationPlan {
            overflow-y: auto;         
            height: 271px;
            position: relative;
            }
            
            .slds-scope table.planPackageTable {
            width: 99%;
            }
            
            #mainCategoryDiv {
            position: sticky;
            top: -8px;
            background-color: white;
            z-index: 20;
            width: 100%;
            margin-bottom: 8%;
            }
            
            #errorMessage, #errorMess, #errorMesse {
            background: rgba(222, 38, 68, 0.12);
            border-radius: 4px;
            margin-top: 15px;
            }
            
            #errorMessageText {
            font-weight: 400;
            font-size: 14px;
            line-height: 20px;
            letter-spacing: 0.01em;
            color: rgba(18, 23, 36, 0.91);
            vertical-align: middle;
            margin-top: 12px;
            margin-bottom: 12px;
            margin-left: 25px;
            }
            
            #errorMessageIcon {
            color: red;
            vertical-align: middle;
            }
            
            .slds-scope button#errorMessageBtn {
                background-color: transparent;
                background: transparent;
                border: 1px solid rgba(18, 23, 36, 0.2);
                padding: 5px;
                font-size: 14px;
                line-height: 20px;
                border-radius: 4px;
                margin-right: 2%;
                display: inline;
                margin-top: 1%;
                margin-bottom: 1%
            }
            
            .slds-scope button#errorMessageBtn:hover {
            background-color: rgba(222, 38, 68, 0.12);
            background: rgba(222, 38, 68, 0.12);
            }
            
            .form-floating>.form-control:focus~label#searchProd, .form-floating>.form-control:not(:placeholder-shown)~label#searchProd, .form-floating>.form-select~label#searchProd{
            transform: scale(0.95) translateY(-0.4rem) translateX(0.15rem);
            top: 0;
            }
            
            .form-floating>label#searchProd {
            top: -8px;
            }
            
            #switchText {
            font-weight: 500;
            font-size: 14px;
            line-height: 20px;
            letter-spacing: 0.01em;
            color: #000000;
            float: left;
            margin-top: 1.6%;
            margin-right: 1%
            }
            
            .planPackageTable {
            border-collapse: collapse; 
            }
            
            .planPackageTable td {
            padding-top: 10px;
            padding-bottom: 9px;
            }
            
            .planPackageTable tr {
            border: solid rgba(18, 23, 36, 0.2);
            border-width: 1px 0;
            }
            
            .planPackageTable tr:first-child {
            border-top: none;
            }
                        
            .planPackageTable tr:last-child {
            border-bottom: none;
            }
            
            #proceedTxt {
            font-style: italic;
            font-weight: 400;
            font-size: 24px;
            line-height: 36px;
            letter-spacing: 0.0075em;
            color: rgba(18, 23, 36, 0.65);
            }
            
            #proceed {
            vertical-align: middle;
            border-bottom-style: solid;
            border-Top-style: solid;
            border-bottom-width: 1px;
            border-top-width: 1px;
            border-bottom-color: rgba(18, 23, 36, 0.2);
            border-Top-color: rgba(18, 23, 36, 0.2);
            margin-bottom: 30px;
            margin-top: 45px;
            padding-Top: 10px;
            padding-bottom: 10px;     
            }
            
            .no-js #loader, #financingScript { 
            display: none;  
            }
            
            .js #loader { 
            display: block; 
            position: absolute; 
            left: 100px;
            top: 0; 
            }
            
            .se-pre-con {
            position: fixed;
            left: 0px;
            top: 0px;
            width: 100%;
            height: 100%;
            z-index: 9999;
            /* background: url(https://smallenvelop.com/wp-content/uploads/2014/08/Preloader_11.gif) center no-repeat #fff; */
            }

            #payTermsLabel {
            font-weight: 400;
            font-size: 16px;
            line-height: 24px;
            letter-spacing: 0.01em;
            color: rgba(18, 23, 36, 0.91);
            }

            #payTable {
            width: 70%;
            margin-top: 4%;
            }

            .payTableTitle {
            font-weight: 400;
            font-size: 16px;
            line-height: 24px;
            letter-spacing: 0.01em;
            color: rgba(18, 23, 36, 0.91);
            }

            .payTableAmount {
            font-weight: 800;
            font-size: 16px;
            line-height: 24px;
            text-align: right;
            letter-spacing: 0.02em;
            color: rgba(18, 23, 36, 0.91);
            }
            
            .scheduleCalendar {
            border: 1px solid rgba(18, 23, 36, 0.2);
            border-radius: 5px;
            padding: 3%;
            }

            #scheduleCalendarTitle {
            font-weight: 500;
            font-size: 24px;
            line-height: 36px;
            letter-spacing: 0.0075em;
            color: #000000;
            }

            #scheduleCalendarDate {
            width: 60%;
            height: 45px;
            border: 1px solid rgba(18, 23, 36, 0.2);
            border-radius: 5px;
            margin: 3% 0%;
            color: #000000;
            }

            #scheduleCalendarNote {
            font-weight: 500;
            font-size: 14px;
            line-height: 20px;
            text-align: center;
            letter-spacing: 0.01em;
            color: rgba(18, 23, 36, 0.65);
            margin-top: 5%;
            }

            .slds-scope button.hourBtn {
            box-sizing: border-box;
            display: flex;
            flex-direction: row;
            justify-content: center;
            align-items: center;
            padding: 9px 16px;
            width: 98.67px;
            height: 42px;
            border: 1px solid rgba(18, 23, 36, 0.2);
            border-radius: 4px;
            background-color: transparent;
            background: transparent;
            font-size: 14px;
            line-height: 20px;
            color: #000000;
            margin: 5px;
            display: inline-flex;  
            }
            
            .slds-scope button.hourBtn:hover {
            background-color: #e9fcf6;
            background: #e9fcf6;
            }

            .slds-scope button.saveChanges:hover {
            background-color: #FFA07A;
            background: #FFA07A;
            }

            #scheduleCalendarHours {
            margin-left: -5px;
            }

            .scheduleCalendarDatePayroll {
            font-weight: 600;
            font-size: 18px;
            line-height: 28px;
            letter-spacing: 0.01em;
            color: rgba(18, 23, 36, 0.91);
            }

            .scheduleCalendarDateSelect {
            font-weight: 400;
            font-size: 16px;
            line-height: 24px;
            letter-spacing: 0.01em;
            color: rgba(18, 23, 36, 0.91);
            }

            .scheduleCalendarTable {
            margin: 3% 0%;
            }

            .cal {
            width: 56px;
            height: 56px;
            background: #AAF2DC;
            border-radius: 800px;
            color: #3B7A80;
            padding-top: 16px;
            padding-left: 16px;
            }

            .slds-scope button#confAppoi {
            font-size: 15px;
            border-radius: 36px;
            padding: 10px 16px;
            float: center;
            display: inline-block;
            font-weight: 500;
            line-height: 16px;
            letter-spacing: 0.75px;
            background: #F15F22;
            border: 1px solid #F15F22;
            background-color: #F15F22;
            color: white;
            }

            .slds-scope button#confAppoi:hover { 
            background-color: #f7a987;
            background: #f7a987;
            border: 1px solid #f7a987;
            }

            .slds-scope p.scheduleCalendarInfoNote {
            font-weight: 400;
            font-size: 14px;
            line-height: 20px;
            letter-spacing: 0.01em;
            color: rgba(18, 23, 36, 0.91);
            padding: 10px 0px;
            }

            #scheduleCalendarTable {
            background: rgba(23, 118, 182, 0.12);
            border-radius: 4px;
            }
            
            #cardInformation {
            margin-top: 32px;
            }

            #Changeover{
            width: 100%;
            height: 600px;
            }

            #ficaBtns, .slds-scope button#showficaexample, .slds-scope button#skipficaexample {
            display: block;
            }

            .slds-scope button#showficaexample {
                margin-bottom: 28px;
                padding: 8px;
            }

            .slds-scope button#skipficaexample {
                margin: 0;
                padding: 8px;
            }

            .slds-scope input.master {
            margin-left: 11px;
            }

            #waitingScreen {
            position: absolute;
            display: none;
            background: transparent;
            margin:0 auto;
            width:100%;
            height:100%;
            }

            #whiteWaiting {
                z-index: 200;
                width: 100%;
                height: 100%;
                background-color: white;
                background: white;
                opacity: 0.65;
            }

            .slds-scope button#optionBack {
            margin-left: 2%;
            margin-left: 3%;
            color: rgba(18, 23, 36, 0.91);
            }
            
            #backArrow {
            padding-right: 17px;
            }
            
            .backTitle {
            font-weight: 600;
            letter-spacing: 0.02em;
            }

            #addNoteBtn {
                background: #3F5261;
                color: #FFFFFF;
                font-weight: 600;
                font-size: 16px;
                line-height: 24px;
                letter-spacing: 0.02em;
                position: absolute;
                bottom: 12px;
                right: 32px;
                padding: 12px;
                border: 1px solid #3F5261;
                border-radius: 12px;
            }  

            #modalNotes {
                display: none;
                position: absolute;
                bottom: 12px;
                right: 32px;
                border-radius: 12px;
                box-shadow: 12px 12px 15px 17px rgb(0 0 0 / 20%);
                background: #ffffff;
                width: 380px;
                height: 430px;
            }

            #modalNotesHeader {
                background: #3F5261;
                color: #FFFFFF;
                font-weight: 600;
                font-size: 16px;
                line-height: 24px;
                letter-spacing: 0.02em;
                display: inline-flex;
                padding: 12px 25px;
                border-radius: 12px 12px 0px 0px;
                width: 100%;
            }

            .slds-scope button#modalNotesHeaderBtn {
                float: right;
                color: #FFFFFF;
                background: #3F5261;
                font-weight: 600;
                font-size: 16px;
                line-height: 24px;
                letter-spacing: 0.02em;
                border: none;
                display: flex;
                right: -140px;
                position: relative;
            }

            #modalNotesContent {
                background: #FFFFFF;
                padding: 15px;
            }

            #modalNoteNote {
                background: rgba(23, 118, 182, 0.12);
                border-radius: 4px;
                width: fit-content;
                padding: 3%;
                font-weight: 400;
                font-size: var(--step--1);
                line-height: 20px;
                letter-spacing: 0.01em;
                color: rgba(18, 23, 36, 0.91);
                margin-bottom: 15px;
            }

            #noteTitle {
                height: 50px;
                margin-bottom: 15px;
            }

            #noteBody {
                height: 215px;
            }

            .row {
                margin-left: 0px;
                flex: 0;
                width: 100%;
            }

            .col, .row>.col {
                flex: 0;
                display: table-cell;
                vertical-align: middle;
            }

            .row>* {
                padding: 7px 7px;
                width: auto;
            }
                        
            @media screen and (max-width: 1280px) {
            #formBody, #blastBody, #menuBody, #businessDisc, #businessDiscParts, #properEstityStrugleLLC, #flowThroughEntitySCorp, #entityClassificationElec, 
            #selfEmploymentTaxSCorp, #reasonableSalarySCorp, #selfEmploymentTaxLLC, #properEntityStrugReviewSCorp, #deductionsIntro, #startUpCosts, #medicalDeduction, 
            #vehicleDeduction, #homeOfficeDeduction, #properEntityStrugReviewLLC, #boiIntroLLC, #boiSummary, #boiIntroSCorp,
            #codeDeduction, #reviewDeduction, #paperloss, #preparedPackages, #verifyInformation, #scheduleDiscMeeting, #paymentDetails, #postPurchase, 
            #features, #expertAccountant, #portalTour, #filingBusinessTaxes, #filingECE, #presWrapUp, #properEstityStrugleSCorp #flowThroughEntityLLC { 
            padding-right: 37px;
            padding-left: 37px;
            }
            }

            @media screen and (max-width: 2200px) {
            .slds-scope p.noteClientView {
            margin-left: 33%;
            }
            }

            @media screen and (max-width: 1600px) {
            .slds-scope p.noteClientView {
            margin-left: 32%;
            }
            }

            @media screen and (max-width: 1500px) {
            .slds-scope p.noteClientView {
            margin-left: 30%;
            }
            }
        </style>
    </head>
    <script src="https://kit.fontawesome.com/8e2856d80f.js" crossorigin="anonymous"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.inputmask/3.3.4/jquery.inputmask.bundle.min.js"></script>

    <script src='https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.3.1/socket.io.js'></script>
    <apex:includeScript value="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.9.1.min.js"/>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/modernizr/2.8.3/modernizr.js"></script>
    <apex:actionFunction name="rerenderProducts" rerender="functionPanel" />
    <apex:outputPanel id="functionPanel">
        <script>
            function processProductData(){
                billingFreqFromController = '{!billingFreq}';
                //bookkeepingStartFromController = '{!existingBookkeepingStart}';
                console.log('processProductData: ');
                tempSelectedProducts = JSON.parse('{!selectedProductsJson}');
                selectedProductsMap = new Map();
                finalProducts = JSON.parse('{!finalProductsJson}');
                finalProductsMap = new Map();
                lastProductData = JSON.parse('{!finalProductsJson}');
                originalPriceMap = new Map();
                selectedProductsToQuote = new Array();//
                deletedProducts = new Array();
                billingAnnualMonthly = new Map();
                productsToPrice = JSON.parse('{!productToPrice}');
                pricesMap = new Map(Object.entries(productsToPrice));
                oridinalPricesMap = new Map(Object.entries(productsToPrice));
                frequentProducts = JSON.parse('{!frequentProductsJson}');
                businessProducts = JSON.parse('{!businessProductsJson}');
                personalProducts = JSON.parse('{!personalProductsJson}');
                payrollProducts = JSON.parse('{!payrollProductsJson}');
                bookkeepingProducts = JSON.parse('{!bookkeepingProductsJson}');
                entityFormationProducts = JSON.parse('{!entityFormationProductsJson}');

                for(var i=0; i < tempSelectedProducts.length; i++){
                    var prodId = tempSelectedProducts[i].Product.Id;
                    selectedProductsMap.set(prodId, tempSelectedProducts[i]);
                    if(!defaultProductIds.includes(prodId)){
                        defaultProductIds.push(prodId);
                    }
                }
                for(var i=0; i < finalProducts.length; i++){
                    finalProductsMap.set(finalProducts[i].Product.Id, finalProducts[i]);
                    originalPriceMap.set(finalProducts[i].Product.Id, finalProducts[i].adjustedPrice);
                    productNameToId.set(finalProducts[i].Product.Name, finalProducts[i].Product.Id);
                    if(finalProducts[i].enabled == false){
                        enableProduct(finalProducts[i].Product.Name,false);
                    }
                }
                for(var i=0; i < tempSelectedProducts.length; i++){
                    autoChecks(tempSelectedProducts[i].Product.Name, {checked: true});
                }
                updateBookkeeping();
                autoAmount1800Acc();
                autoAmountAdvisory();
                autoAmount1099();
                autoAmountLoan();
                lastProductData = JSON.parse(JSON.stringify(finalProducts));
                updateQuoteTotals();
                // for(var i=0; i < tempSelectedProducts.length; i++){
                //     syncProdToClient(tempSelectedProducts[i]);
                // }
                syncProdsToClient();
            }
        </script>
    </apex:outputPanel>
    <apex:messages />
    <apex:outputPanel >
    <script type='text/javascript'> 

    
    
    $(window).load(function() {
        $(".se-pre-con").fadeOut("slow");
    });
    
    $(document).ready(function () {
        Inputmask("(9{3}) 9{3}-9{4}", {
            placeholder: " ",
            greedy: false
        }).mask('#phone');
        Inputmask("(9{3}) 9{3}-9{4}", {
            placeholder: " ",
            greedy: false
        }).mask('#contphone');
        Inputmask("(9{3}) 9{3}-9{4}", {
            placeholder: " ",
            greedy: false
        }).mask('#phoneEditClient');
        Inputmask("(9{3}) 9{3}-9{4}", {
            placeholder: " ",
            greedy: false
        }).mask('#phoneModalEditClientInfo');
        
    });
    
    window.addEventListener('resize', function(event) {
        var newHeight = window.innerHeight; 
        var height = document.getElementById('menuBody').offsetHeight;

        var quarterHeight = newHeight / 5;
        var clientHeight = quarterHeight * 3;
        var detailsHeight = quarterHeight * 2;

        document.getElementById("blastBody").style.height = (newHeight - height) + 'px';
        document.getElementById("businessDisc").style.height = (newHeight - height) + 'px';
        document.getElementById("formBody").style.height = (newHeight - height) + 'px';
        document.getElementById("formClientDet").style.height = (detailsHeight) + 'px';
        document.getElementById("formClientView").style.height = (clientHeight) + 'px';
        document.getElementById('businessDiscParts').style.height = (newHeight - height) + 'px';
        document.getElementById('properEstityStrugleLLC').style.height = (newHeight - height) + 'px'; 
        document.getElementById('properEstityStrugleSCorp').style.height = (newHeight - height) + 'px';
        document.getElementById('flowThroughEntityLLC').style.height = (newHeight - height) + 'px';
        document.getElementById('flowThroughEntitySCorp').style.height = (newHeight - height) + 'px';
        document.getElementById('entityClassificationElec').style.height = (newHeight - height) + 'px';
        document.getElementById('selfEmploymentTaxLLC').style.height = (newHeight - height) + 'px';
        document.getElementById('selfEmploymentTaxSCorp').style.height = (newHeight - height) + 'px';
        document.getElementById('reasonableSalarySCorp').style.height = (newHeight - height) + 'px';
        document.getElementById('boiIntroLLC').style.height = (newHeight - height) + 'px';
        document.getElementById('boiIntroSCorp').style.height = (newHeight - height) + 'px';
        document.getElementById('properEntityStrugReviewLLC').style.height = (newHeight - height) + 'px';
        document.getElementById('properEntityStrugReviewSCorp').style.height = (newHeight - height) + 'px';
        document.getElementById('deductionsIntro').style.height = (newHeight - height) + 'px';
        document.getElementById('startUpCosts').style.height = (newHeight - height) + 'px';
        document.getElementById('medicalDeduction').style.height = (newHeight - height) + 'px';
        document.getElementById('vehicleDeduction').style.height = (newHeight - height) + 'px';
        document.getElementById('homeOfficeDeduction').style.height = (newHeight - height) + 'px';
        document.getElementById('codeDeduction').style.height = (newHeight - height) + 'px';
        document.getElementById('reviewDeduction').style.height = (newHeight - height) + 'px';
        document.getElementById('paperloss').style.height = (newHeight - height) + 'px';
        document.getElementById('preparedPackages').style.height = (newHeight - height) + 'px';
        document.getElementById('verifyInformation').style.height = (newHeight - height) + 'px';
        document.getElementById('paymentDetails').style.height = (newHeight - height) + 'px';
        document.getElementById('postPurchase').style.height = (newHeight - height) + 'px';
        document.getElementById('features').style.height = (newHeight - height) + 'px';
        document.getElementById('expertAccountant').style.height = (newHeight - height) + 'px';
        document.getElementById('portalTour').style.height = (newHeight - height) + 'px';
        document.getElementById('filingBusinessTaxes').style.height = (newHeight - height) + 'px';
        document.getElementById('filingECE').style.height = (newHeight - height) + 'px';
        document.getElementById('boiSummary').style.height = (newHeight - height) + 'px';
        document.getElementById('presWrapUp').style.height = (newHeight - height) + 'px';
    });
    
    //var bundleStatus = 'standard';
    var cInd;
    var answerMap;
    var answers = '';
    var isFirstTime = false;
    var isFirstTime2 = true;
    var isFirstTime3 = true;
    var isFirstTime4 = true;
    var isFirstTime5 = true;
    var flagOne = false;
    var flagTwo = false;
    var flagThree = false;
    var flagFour = false;
    var flagFive = false;
    var flagDoSubmit = false
    var pulledPartners = false;
    var partnersGone = true;
    var isfinalScreen = false;
    var firstPackage = false;
    const currentPlan = new Array();
    const AllPlan = new Array();
    const frequentPlan = new Array();
    const businessPlan = new Array();
    const personalPlan = new Array();
    const payrollPlan = new Array();
    const bookkeepingPlan = new Array();
    const entityFormationPlan = new Array();
    var chosenProducts = new Array();
    var uniquechosenProducts = new Array();
    const productIdToBilling = new Map();
    const defaultAnswers = new Map();
    var tempSelectedProducts = JSON.parse('{!selectedProductsJson}');
    var selectedProductsMap = new Map();
    var finalProducts = JSON.parse('{!finalProductsJson}');
    var finalProductsMap = new Map();
    var lastProductData = JSON.parse('{!finalProductsJson}');
    var originalPriceMap = new Map();
    var selectedProductsToQuote = new Array();
    var deletedProducts = new Array();
    var billingAnnualMonthly = new Map();
    var productsToPrice = JSON.parse('{!productToPrice}');
    var pricesMap = new Map(Object.entries(productsToPrice));
    var oridinalPricesMap = new Map(Object.entries(productsToPrice));
    var productNameToId = new Map();
    var frequentProducts = new Array();
    var businessProducts = new Array();
    var defaultProductIds = new Array();
    var personalProducts = new Array();
    var payrollProducts = new Array();
    var bookkeepingProducts = new Array();
    var entityFormationProducts = new Array();
    var quoteId = '{!quoteId}';
    var isEditQuote = (quoteId && quoteId != '' && quoteId != 'null');

    var hasPayroll = '';
    var stateBilli = '';
    var payTerms = 'yrl';
    var entity = '';
    var primaryDisp = 'Consulted';
    var secondaryDisp = 'Not Interested';
    var notEntityType = '';
    var eventId = "{!$CurrentPage.parameters.rId}";
    var whenDisposition = 'early';
    var schedulerURL = '';
    var useStaticPackage = true; //"{!useStaticPackage}" == 'true' ? true : false;
    var entitySelected = '';
    var bookkeepingStartDate = null;
    var bookkeepingEndDate = null;
    var transactionCount = ("{!defaultNumTransactions}" == "---" ? null : "{!defaultNumTransactions}");
    var nonProfit = ("{!isNonProfit}" == "true");
    var billingFreqFromController;
    var bookkeepingStartFromController;
    // var quoteTotal = 0;
    // var quoteTotalAnnual = 0;
    // var quoteTotalMonthly = 0;
    defaultAnswers.set('Is this your first business?', '');
    defaultAnswers.set('How many years have you been in business?', '---');
    defaultAnswers.set('What entity type is your business?', 'defaultEntity');
    defaultAnswers.set('What industry is your business in?', 'defaultIndustry');
    defaultAnswers.set('What is your state of incorporation?', 'defaultDomesticState');
    defaultAnswers.set('What is your foreign state of incorporation?', 'defaultForeignState ');
    //defaultAnswers.set('What is your state of residence?', 'defaultPersonalState');
    defaultAnswers.set('How much have you invested so far in start-up costs?', 'defaultStartupCosts');
    defaultAnswers.set('What do you anticipate your revenue to be over the next 12 months?', 'defaultRevenue');
    defaultAnswers.set('What do you project your 1st year profit to be over the next 12 months?', 'defaultFirstYearProfit');
    //defaultAnswers.set('What is your total investor funding?', 'defaultInvestorFunding');
    defaultAnswers.set('How many monthly bookkeeping transactions do you have?', 'defaultNumTransactions'); 

    var splittableProductsTotal = 0;
    var nonsplittableProductsTotal = 0;
    var numberOfPayments = 1;
    function getInstallmentAmount(){
        var amount = splittableProductsTotal / numberOfPayments;
        if(payTerms == 'mon'){ amount *= 1.2; } //extra fee for monthly financing
        return parseFloat(amount.toFixed(2));
    }
    function getTotalAmountDue(){
        return splittableProductsTotal + nonsplittableProductsTotal;
    }
    function getDueToday(){
        return getInstallmentAmount() + nonsplittableProductsTotal;
    }
    function getSelectedIds(){
        return tempSelectedProducts?.map(x => x.Id);
    }

    function getBundleStatus(){
        var returnStatus = 'standard';
        if(tempSelectedProducts.length > defaultProductIds.length){
            returnStatus = 'added';
        } 
        // else if(tempSelectedProducts.length < defaultProductIds.length){
        //     returnStatus = 'removed';
        // }
        var selectedIds = getSelectedIds();
        for(var id of defaultProductIds){
            if(!selectedIds?.includes(id)){
                returnStatus = 'removed';
                break;
            }
        }
        return returnStatus;
    }

    var dueTodayIds = [];
    var totalDueIds = [];
    var annualAndOneTimeIds = [];
    var monthlyIds = [];
    var separatedTotalIds = [];
    var editPages = ['Discovery Questions','Review Business Discovery','Prepared Packages',
    'Verify Information', 'Payment Details', 'Post Purchase'];

    function loadingPage() {

        
        var newHeight = window.innerHeight; 
        var height = document.getElementById('menuBody').offsetHeight;

        var quarterHeight = newHeight / 5;
        var clientHeight = quarterHeight * 3;
        var detailsHeight = quarterHeight * 2;

        document.getElementById("blastBody").style.height = (newHeight - height) + 'px';
        document.getElementById("businessDisc").style.height = (newHeight - height) + 'px';
        document.getElementById("formBody").style.height = (newHeight - height) + 'px';
        document.getElementById("formClientDet").style.height = (detailsHeight) + 'px';
        document.getElementById("formClientView").style.height = (clientHeight) + 'px';
        document.getElementById('businessDiscParts').style.height = (newHeight - height) + 'px';
        document.getElementById('properEstityStrugleLLC').style.height = (newHeight - height) + 'px';
        document.getElementById('properEstityStrugleSCorp').style.height = (newHeight - height) + 'px';
        document.getElementById('flowThroughEntityLLC').style.height = (newHeight - height) + 'px';
        document.getElementById('flowThroughEntitySCorp').style.height = (newHeight - height) + 'px';
        document.getElementById('entityClassificationElec').style.height = (newHeight - height) + 'px';
        document.getElementById('selfEmploymentTaxLLC').style.height = (newHeight - height) + 'px';
        document.getElementById('selfEmploymentTaxSCorp').style.height = (newHeight - height) + 'px';
        document.getElementById('reasonableSalarySCorp').style.height = (newHeight - height) + 'px';
        document.getElementById('boiIntroLLC').style.height = (newHeight - height) + 'px';
        document.getElementById('boiIntroSCorp').style.height = (newHeight - height) + 'px';
        document.getElementById('properEntityStrugReviewLLC').style.height = (newHeight - height) + 'px';
        document.getElementById('properEntityStrugReviewSCorp').style.height = (newHeight - height) + 'px';
        document.getElementById('deductionsIntro').style.height = (newHeight - height) + 'px';
        document.getElementById('startUpCosts').style.height = (newHeight - height) + 'px';
        document.getElementById('medicalDeduction').style.height = (newHeight - height) + 'px';
        document.getElementById('vehicleDeduction').style.height = (newHeight - height) + 'px';
        document.getElementById('homeOfficeDeduction').style.height = (newHeight - height) + 'px';
        document.getElementById('codeDeduction').style.height = (newHeight - height) + 'px';
        document.getElementById('reviewDeduction').style.height = (newHeight - height) + 'px';
        document.getElementById('paperloss').style.height = (newHeight - height) + 'px';
        document.getElementById('preparedPackages').style.height = (newHeight - height) + 'px';
        document.getElementById('verifyInformation').style.height = (newHeight - height) + 'px';
        document.getElementById('paymentDetails').style.height = (newHeight - height) + 'px';
        document.getElementById('postPurchase').style.height = (newHeight - height) + 'px';
        document.getElementById('features').style.height = (newHeight - height) + 'px';
        document.getElementById('expertAccountant').style.height = (newHeight - height) + 'px';
        document.getElementById('portalTour').style.height = (newHeight - height) + 'px';
        document.getElementById('filingBusinessTaxes').style.height = (newHeight - height) + 'px';
        document.getElementById('filingECE').style.height = (newHeight - height) + 'px';
        document.getElementById('boiSummary').style.height = (newHeight - height) + 'px';
        document.getElementById('presWrapUp').style.height = (newHeight - height) + 'px';

        document.getElementById('joinCall').style.display = "none";
        document.getElementById('partnersTable').style.display = "none";
        document.getElementById('start').setAttribute("disabled", "disabled");
        document.getElementById('stopPres').setAttribute("disabled", "disabled");
        document.getElementById('btnAddRow').setAttribute("disabled", "disabled");
        document.getElementById('blastBody').style.display = "none";
        document.getElementById('businessDisc').style.display = "none";
        document.getElementById("menuOpts").value = "Introduction"; //sets dropdown value to match starting page
        document.getElementById('businessDiscParts').style.display = "none";
        document.getElementById('properEstityStrugleLLC').style.display = "none";
        document.getElementById('properEstityStrugleSCorp').style.display = "none";
        document.getElementById('pesForLLC').style.display = "none";
        document.getElementById('pesForSCorp').style.display = "none";
        document.getElementById('flowThroughEntityLLC').style.display = "none";
        document.getElementById('flowThroughEntitySCorp').style.display = "none";
        document.getElementById('entityClassificationElec').style.display = "none";
        document.getElementById('selfEmploymentTaxSCorp').style.display = "none";
        document.getElementById('reasonableSalarySCorp').style.display = "none";
        document.getElementById('selfEmploymentTaxLLC').style.display = "none";
        document.getElementById('boiIntroLLC').style.display = "none";
        document.getElementById('boiIntroSCorp').style.display = "none";
        document.getElementById('properEntityStrugReviewLLC').style.display = "none";
        document.getElementById('properEntityStrugReviewSCorp').style.display = "none";
        document.getElementById('deductionsIntro').style.display = "none";
        document.getElementById('startUpCosts').style.display = "none";
        document.getElementById('medicalDeduction').style.display = "none";
        document.getElementById('vehicleDeduction').style.display = "none";
        document.getElementById('homeOfficeDeduction').style.display = "none";
        document.getElementById('codeDeduction').style.display = "none";
        document.getElementById('reviewDeduction').style.display = "none";
        document.getElementById('paperloss').style.display = "none";
        document.getElementById('preparedPackages').style.display = "none";
        document.getElementById('verifyInformation').style.display = "none";
        document.getElementById('paymentDetails').style.display = "none";
        document.getElementById('postPurchase').style.display = "none";
        document.getElementById('features').style.display = "none";
        document.getElementById('expertAccountant').style.display = "none";
        document.getElementById('portalTour').style.display = "none";
        document.getElementById('filingBusinessTaxes').style.display = "none";
        document.getElementById('filingECE').style.display = "none";
        document.getElementById('boiSummary').style.display = "none";
        document.getElementById('presWrapUp').style.display = "none";
        document.getElementById('waitingScreen').style.display = "none";
        
        var menuList = document.getElementById("menuOpts").options;
        for (let i = 1; i < menuList.length; i++) {
            menuList[i].setAttribute("disabled", "disabled"); //disable all dropdown options at the beginning?
        }

        setRequiredUnasweredFields();
        if(isEditQuote){
            document.getElementById("menuOpts").value = "Discovery Questions";
            goToPage();
            var indicesToRemove = [];
            for(var i = 0; i < document.getElementById("menuOpts").options.length; i++){
                option = document.getElementById("menuOpts").options.item(i);
                option.removeAttribute('disabled');
                if(!editPages.includes(option.value)){
                    indicesToRemove.push(i);
                }
            }
            for(var index of indicesToRemove.reverse()){
                document.getElementById("menuOpts").options.item(index).remove();
            }
            document.getElementById("formClientView").style = 'display: none';
            document.querySelector('.discoveryBackButton').setAttribute("disabled", "disabled");
            document.querySelector('.discoveryBackButton').style = 'display: none';
            document.querySelector('.backToPrep').style = 'display: none';
            document.querySelector('.backToReview').style = 'display: block';
            nextSection(3, 'Discovery Questions', 'businessDisc', 'businessDiscParts');
        }


    }

    
    

    //const socket = io('https://staging.1800accountant.com', { path: '/socket.io', autoConnect: false });
    const socket = io('{!socketBaseUrl}', { path: '/socket.io', autoConnect: false });
    console.log('sessionId: {!$CurrentPage.parameters.sessionId}');
    console.log('token: {!$CurrentPage.parameters.token}');
    socket.connect();
    socket.auth = {sessionID: '{!$CurrentPage.parameters.sessionId}', authToken: '{!$CurrentPage.parameters.token}', source: 'controller'}; 
    socket.on("connect", () => {
        console.log('socket.id: ' + socket.id);
    });
        
    socket.on("private message", (message) => {
        console.log("message", message);
    });
        
    socket.onerror = function(event) {
        console.error("WebSocket error observed:", event);
    }
        
    socket.on('disconnect', function (reason) {
        console.log('disconnecting:');
        console.log(reason);
    });

    var businessId = '{!businessId}';
    var accId = '{!opportunity.AccountId}';

    function getJoinCall() {
        document.getElementById('joinCall').style.display = "block";
        
        YesDecision(1);
        
        document.getElementById('start').setAttribute("disabled", "disabled");
        document.getElementById('start').style.opacity = "0.25";
    }
        
    function NoBusiPart() {
        document.getElementById('joinCall').style.display = "none";
        
        NoDecision(1);
        
        document.getElementById("menuOpts").options[1].removeAttribute('disabled'); 
        document.getElementById('start').removeAttribute('disabled'); 
        document.getElementById('start').style.opacity = "1";
    }
        
    function addPartners() {
        console.log('addPartners');
        document.getElementById('partnersTable').style.display = "block";
        
        YesDecision(2);
        
        document.getElementById('start').setAttribute("disabled", "disabled");
        document.getElementById('start').style.opacity = "0.25";
        
        //If there are Partners already in Salesforce, add them to the sales & client page
        if(!pulledPartners){
            <apex:repeat var="partner" value="{!partners}">
                document.getElementById("addPartTable1").style.display = "none";  
                var name = '{!partner.First_Name__c}' + ' ' + '{!partner.Last_Name__c}';            
                var ind1 = document.getElementById('contTable').getElementsByTagName('tbody')[0].getElementsByTagName('tr').length;
                var rowData1 = getRowData(ind1, "prin", name, '{!partner.Partner_Role__c}', '{!partner.Email__c}', '{!partner.Phone__c}', '{!partner.Id}');
            
                var ind2 = document.getElementById('addPartTable2').getElementsByTagName('tbody')[0].getElementsByTagName('tr').length;
                var rowData2 = getRowData(ind2, "sec", name, '{!partner.Partner_Role__c}', '{!partner.Email__c}', '{!partner.Phone__c}', '{!partner.Id}');
            
                if(tBody.innerHTML != null) {
                    tableBody.innerHTML = tableBody.innerHTML + rowData1;
                    tBody.innerHTML = tBody.innerHTML + rowData2;
                } else {
                    tableBody.innerHTML = rowData1;
                    tBody.innerHTML = rowData2;
                }
                
                socket.connect();
                content = {
                    page: "Partner Info",
                    name: name,
                    role: '{!partner.Partner_Role__c}',
                    email: '{!partner.Email__c}',
                    phone: '{!partner.Phone__c}'
                }
                socket.emit("private message", {
                    content
                });
                pulledPartners = true;
                partnersGone = false;
                document.getElementById("menuOpts").options[1].removeAttribute('disabled');
                document.getElementById('start').removeAttribute('disabled');
                document.getElementById('start').style.opacity = "1";
        
            </apex:repeat>
        
        } 
                    
        if(!partnersGone) {
            document.getElementById("menuOpts").options[1].removeAttribute('disabled');
            document.getElementById('start').removeAttribute('disabled');
            document.getElementById('start').style.opacity = "1";
        }
    }
        
    function YesDecision(num) {
        document.getElementById('yesBtn' + num).style.border = "1px solid #3B7A80";
        document.getElementById('yesBtn' + num).style.color = "white";
        document.getElementById('yesBtn'+num).style.background = "#3B7A80";
        
        document.getElementById('noBtn' + num).style.border = "1px solid #c0c0c0";
        document.getElementById('noBtn' + num).style.color = "black";
        document.getElementById('noBtn' + num).style.background = "white";
    }
        
    function NoDecisionTwo() {
        document.getElementById('partnersTable').style.display = "none";
        
        NoDecision(2);
        
        document.getElementById("menuOpts").options[1].removeAttribute('disabled'); 
        document.getElementById('start').removeAttribute('disabled');
        document.getElementById('start').style.opacity = "1";
    }
        
    function NoDecision(num) {
        document.getElementById('yesBtn' + num).style.border = "1px solid #c0c0c0";
        document.getElementById('yesBtn' + num).style.color = "black";
        document.getElementById('yesBtn' + num).style.background = "white";
        
        document.getElementById('noBtn' + num).style.border = "1px solid #3B7A80";
        document.getElementById('noBtn' + num).style.color = "white";
        document.getElementById('noBtn' + num).style.background = "#3B7A80";
    }
    
    function hideAll() {
        document.getElementById('formBody').style.display = "none";
        document.getElementById('blastBody').style.display = "none";
        document.getElementById('businessDisc').style.display = "none";
        document.getElementById('businessDiscParts').style.display = "none";
        document.getElementById('properEstityStrugleLLC').style.display = "none";
        document.getElementById('properEstityStrugleSCorp').style.display = "none";
        document.getElementById('pesForLLC').style.display = "none";
        document.getElementById('pesForSCorp').style.display = "none";
        document.getElementById('flowThroughEntityLLC').style.display = "none";
        document.getElementById('flowThroughEntitySCorp').style.display = "none";
        document.getElementById('entityClassificationElec').style.display = "none";
        document.getElementById('selfEmploymentTaxSCorp').style.display = "none";
        document.getElementById('reasonableSalarySCorp').style.display = "none";
        document.getElementById('selfEmploymentTaxLLC').style.display = "none";
        document.getElementById('boiIntroLLC').style.display = "none";
        document.getElementById('boiIntroSCorp').style.display = "none";
        document.getElementById('properEntityStrugReviewLLC').style.display = "none";
        document.getElementById('properEntityStrugReviewSCorp').style.display = "none";
        document.getElementById('deductionsIntro').style.display = "none";
        document.getElementById('startUpCosts').style.display = "none";
        document.getElementById('medicalDeduction').style.display = "none";
        document.getElementById('vehicleDeduction').style.display = "none";
        document.getElementById('homeOfficeDeduction').style.display = "none";
        document.getElementById('codeDeduction').style.display = "none";
        document.getElementById('reviewDeduction').style.display = "none"; 
        document.getElementById('paperloss').style.display = "none";  
        document.getElementById('preparedPackages').style.display = "none";
        document.getElementById('verifyInformation').style.display = "none";
        document.getElementById('paymentDetails').style.display = "none";
        document.getElementById('postPurchase').style.display = "none";
        document.getElementById('features').style.display = "none";
        document.getElementById('expertAccountant').style.display = "none";
        document.getElementById('portalTour').style.display = "none";
        document.getElementById('filingBusinessTaxes').style.display = "none";
        document.getElementById('filingECE').style.display = "none";
        document.getElementById('boiSummary').style.display = "none";
        document.getElementById('presWrapUp').style.display = "none";
        document.getElementById('waitingScreen').style.display = "none";
    }
                    
    function goToPage() {
        var selected = document.getElementById("menuOpts").value;
        console.log('goToPage '+selected);
        socket.connect();
        
        if(selected == "Introduction") {
            hideAll();
            document.getElementById('formBody').style.display = "block";
                    
            //If they have partners, show the partner page, else show the introduction slide again
            var page = ('white' == document.getElementById('yesBtn2').style.color) ? 'Back To Partners' : 'Back To Intro';
            content = {
                page: page,
            }
            socket.emit("private message", {
                content
            });
        } else if(selected == "1-800Accountant Blast") {
            hideAll();
            document.getElementById('blastBody').style.display = "block";
            document.getElementById("menuOpts").options[2].removeAttribute('disabled'); 
            content = {
                page: "Blast"
            }
            socket.emit("private message", {
                content
            });
        } else if(selected == "Business Discovery Intro") {
            hideAll();
            document.getElementById('businessDisc').style.display = "block";
            document.getElementById("menuOpts").options[3].removeAttribute('disabled'); 
            content = {
                page: "Business Discovery Intro", 
            }
            socket.emit("private message", {
                content
            });
        } else if(selected == "Discovery Questions") {
            hideAll();
            document.getElementById('businessDiscParts').style.display = "block";
            document.getElementById("menuOpts").value = "Discovery Questions"; //?
            document.getElementById("discoveryQuestionTitle").innerHTML = "Business Discovery";
            document.getElementById('engagee').style.display = "none";

            document.getElementById('mainCategoryDiv').style.background = "white";
            document.getElementById('mainCategoryDiv').style.border = "none";
            document.getElementById('mainCategoryDiv').style.borderRadius = "0px";
            document.getElementById('mainCategory').style.marginTop = "0px";
            document.getElementById('mainCategory').style.width = "100%";
            document.getElementById('mainCategory').style.marginLeft = "0px";
            document.getElementById('showAllAnswer').style.display = "none";

        } else if(selected == "Review Business Discovery") {
            hideAll();
            document.getElementById('businessDiscParts').style.display = "block";
            reviewBusiDisc(true);
        } else if(selected == "Proper Entity Structuring") {
            hideAll();
            reviewBusiDisc(false);
        } else if(selected == "Flow Through Entity") { //changes slide but blank rep page
            hideAll();
            if(entitySelected == 'LLC') {
                document.getElementById('flowThroughEntityLLC').style.display = "block";
                document.getElementById('pesForLLC').style.display = "block";
                nextSection(6, 'Flow Through Entity', 'properEstityStrugleLLC', 'flowThroughEntityLLC');
            } else if(entitySelected == 'S Corporation') {
                document.getElementById('flowThroughEntitySCorp').style.display = "block";
                document.getElementById('pesForSCorp').style.display = "block";
                nextSection(6, 'Flow Through Entity', 'properEstityStrugleSCorp', 'flowThroughEntitySCorp');
            }
        } else if(selected == "Start-up Costs") {
            hideAll();
            document.getElementById('startUpCosts').style.display = "block";
            if(entitySelected == 'LLC') {
                nextSection(7, 'Start-up Costs', 'flowThroughEntityLLC', 'startUpCosts');
            } else if(entitySelected == 'S Corporation') {
                nextSection(7, 'Start-up Costs', 'flowThroughEntitySCorp', 'startUpCosts');
            }
        } else if(selected == "Medical Deduction") {
            hideAll();
            document.getElementById('medicalDeduction').style.display = "block";
            nextSection(8, 'Medical Deduction', 'startUpCosts', 'medicalDeduction');
            validateButtons();
        } else if(selected == "Vehicle Deduction") {
            hideAll();
            document.getElementById('vehicleDeduction').style.display = "block";
            nextSection(9, 'Vehicle Deduction', 'startUpCosts', 'vehicleDeduction');
        } else if(selected == "Home Office Deduction") {
            hideAll();
            document.getElementById('homeOfficeDeduction').style.display = "block";
            nextSection(10, 'Home Office Deduction', 'startUpCosts', 'homeOfficeDeduction');
        } else if(selected == "Code Section 199A Deduction") {
            hideAll();
            document.getElementById('codeDeduction').style.display = "block";
            nextSection(11, 'Code Section 199A Deduction', 'startUpCosts', 'codeDeduction');
        } else if(selected == "Review Deductions") {
            hideAll();
            document.getElementById('reviewDeduction').style.display = "block";
            nextSection(12, 'Review Deductions', 'codeDeduction', 'reviewDeduction');
        } else if(selected == "Paperloss") {
            hideAll();
            document.getElementById('paperloss').style.display = "block";
            nextSection(13, 'Paperloss', 'reviewDeduction', 'paperloss');
        } else if(selected == "Prepared Packages") {
            hideAll();
            document.getElementById('preparedPackages').style.display = "block";
            nextSection(28, 'Prepared Packages', 'paperloss', 'preparedPackages');
        } else if(selected == "Verify Information") {
            hideAll();
            document.getElementById('verifyInformation').style.display = "block";
            nextSection(29, 'Verify Information', 'preparedPackages', 'verifyInformation');
        } else if(selected == "Payment Details") {
            hideAll();
            document.getElementById('paymentDetails').style.display = "block";
            nextSection(30, 'Payment Details', 'preparedPackages', 'paymentDetails');
        } else if(selected == "Post Purchase") {
            hideAll();
            document.getElementById('postPurchase').style.display = "block";
            nextSection(31, 'Post Purchase', 'paymentDetails', 'postPurchase');
        } else if(selected == "1-800Accountant Introduction") {
            hideAll();
            document.getElementById('features').style.display = "block";
            nextSection(14, '1-800Accountant Introduction', 'postPurchase', 'features');
        } else if(selected == "Your Expert Accountant Team") {
            hideAll();
            document.getElementById('expertAccountant').style.display = "block";
            nextSection(15, 'Your Expert Accountant Team', 'features', 'expertAccountant');
        } else if(selected == "Features - 1-800Accountant Portal") {
            hideAll();
            document.getElementById('portalTour').style.display = "block";
            nextSection(16, 'Features - 1-800Accountant Portal', 'expertAccountant', 'portalTour');
        } else if(selected == "Features - Appointment Scheduler") {
            hideAll();
            document.getElementById('portalTour').style.display = "block";
            nextSection(17, 'Features - 1-800Accountant Portal', 'expertAccountant', 'portalTour');
        } else if(selected == "Features - Message Center") {
            hideAll();
            document.getElementById('portalTour').style.display = "block";
            nextSection(18, 'Features - 1-800Accountant Portal', 'expertAccountant', 'portalTour');
        } else if(selected == "Features - Tax Planner") {
            hideAll();
            document.getElementById('portalTour').style.display = "block";
            nextSection(19, 'Features - 1-800Accountant Portal', 'expertAccountant', 'portalTour');
        } else if(selected == "Features - Bookkeeping") {
            hideAll();
            document.getElementById('portalTour').style.display = "block";
            nextSection(20, 'Features - 1-800Accountant Portal', 'expertAccountant', 'portalTour');
        } else if(selected == "Features - Document Center") {
            hideAll();
            document.getElementById('portalTour').style.display = "block";
            nextSection(21, 'Features - 1-800Accountant Portal', 'expertAccountant', 'portalTour');
        } else if(selected == "Features - Invoices") {
            hideAll();
            document.getElementById('portalTour').style.display = "block";
            nextSection(22, 'Features - 1-800Accountant Portal', 'expertAccountant', 'portalTour');
        } else if(selected == "Features - Mobile App") {
            hideAll();
            document.getElementById('portalTour').style.display = "block";
            nextSection(23, 'Features - 1-800Accountant Portal', 'expertAccountant', 'portalTour');
        } else if(selected == "Features - Summary") {
            hideAll();
            document.getElementById('portalTour').style.display = "block";
            nextSection(24, 'Features - 1-800Accountant Portal', 'expertAccountant', 'portalTour');
        } else if(selected == "Features - Business &#38; Personal...") {
            hideAll();
            document.getElementById('filingBusinessTaxes').style.display = "block";
            nextSection(25, 'Features - Business &#38; Personal...', 'portalTour', 'filingBusinessTaxes');
        } else if(selected == "Features - Filing ECE") {
            hideAll();
            document.getElementById('filingECE').style.display = "block";
            nextSection(26, 'Features - Filing ECE', 'filingBusinessTaxes', 'filingECE');
        } else if(selected == "Features - Wrap Up") {
            hideAll();
            document.getElementById('presWrapUp').style.display = "block";
            nextSection(27, 'Features - Wrap Up', 'filingECE', 'presWrapUp');
        }
    }
    
    function goToBlast() {
        socket.connect();
        content = {
            page: "Blast"
        }
        socket.emit("private message", {
            content
        });
    }
            
     function broadcastChannel() {
        document.getElementById("btnAddRow").innerHTML = "Add Partner";
        document.getElementById("emailFormatError").innerHTML = '';
        document.getElementById("partnerResponseErrors").innerHTML = '';
        var rows = document.getElementById('addPartTable2').getElementsByTagName('tbody')[0].getElementsByTagName('tr');
        
        if (rows.length < 4) {
            showModal();
        } else {
            document.getElementById("btnAdd").style.display = "none";  
            showModal();
        }
    } 
            
    function disableButton() {
        var firstName = document.getElementById("firstName").value;
        var lastName = document.getElementById("lastName").value;
        var email = document.getElementById("email").value;
        var phone = document.getElementById("phone").value;
            
        if(firstName != '' && lastName != '' && email != '' && phone != '') {
            document.getElementById('btnAddRow').removeAttribute('disabled');
            document.getElementById('btnAddRow').style.opacity = "1";
        } else {
            document.getElementById('btnAddRow').setAttribute("disabled", "disabled");
            document.getElementById('btnAddRow').style.opacity = "0.25";
        }
    }
            
    function showModal() {
        console.log('showModal()');
        document.getElementById("modal").style.display = "block";  
    }
            
    function showModalSkip() {
        console.log('showModalSkip()');
        document.getElementById("modalSkip").style.display = "block";  
    }

    function showModalClientScreen() {
        console.log('showModalClientScreen()');
        document.getElementById("modalClientScreenn").style.display = "block";  
    }

    function showModalConfirmQuote() {
        console.log('showModalConfirmQuote()');
        if(flagDoSubmit == false){
            console.log('showModalConfirmQuote');
            document.getElementById("confirmQuoteModal").style.display = "block"; 
        } else { 
            nextSection(30, 'Payment Details', 'verifyInformation', 'paymentDetails');
            getChargeOverURL();
        }         
    }
            
    function showModalCancel() {
        console.log('showModalCancel()');
        if(isfinalScreen == true) {
            endPresentation();
        } else {
            document.getElementById('stopPres').setAttribute("disabled", "disabled");
            document.getElementById("modalCancel").style.display = "block";  
        }
    }
            
    function showModalEditClient() {
        console.log('showModalEditClient()');
        document.getElementById("modalEditClient").style.display = "block";  
    }
            
    function showModalEditPackage() {
        console.log('showModalEditPackage()');
        document.getElementById("skiptoSale").style.display = "inline";
        document.getElementById("closeOptions").style.display = "inline";
        document.getElementById("keepEditing").style.display = "none";
        document.getElementById("discardEditing").style.display = "none";
        //var selectedProducts = JSON.parse('{!selectedProductsJson}');
        
        //firstPackage = false; //debugging
        if(firstPackage == false) {
            var productIdToIdentifier = JSON.parse('{!productToIdentifier}');
            const nameMap = new Map(Object.entries(productIdToIdentifier));
            console.log('showModalEditPackage false');
                    
            // for (let i = 0; i < currentPlan.length; i++) {
            //     var productName = nameMap.get(currentPlan[i]);
            //     productSelected(true, currentPlan[i], productName); //this probably won't be necessary in the new structure
            // } 

            // //check for any auto-selected products based on default selections
            // for (let i = 0; i < tempSelectedProducts.length; i++) {
            //     var productName = nameMap.get(tempSelectedProducts[i].Product.Id);
            //     if(document.getElementById(tempSelectedProducts[i].Product.Id).childNodes.length > 6) {
            //         autoChecks(productName, document.getElementById(tempSelectedProducts[i].Product.Id).childNodes[1].childNodes[1]);
            //     } else {
            //         autoChecks(productName, document.getElementById(tempSelectedProducts[i].Product.Id).childNodes[0].childNodes[0]);
            //     }
            // }
            //calcFinance(false);
        } else {
            console.log('showModalEditPackage true');
        }
        
        Visualforce.remoting.Manager.invokeAction('GuidedSellingControllerExtension.getBusinessInfo', accId, function(r,e) {
            if(e.status) {
                hasPayroll = e.result;
            }
        });

        document.getElementById("modalEditPackage").style.display = "block";  

        displayTablePlan('currentPlan', document.getElementById("tab2-1"), true);

        firstPackage = true;
    }

    function showModalEditClientInfo() {
        console.log('showModalEditClientInfo()');
        document.getElementById("modalEditClientInfo").style.display = "block";  
    }

    function showModalEditBillingAdd() {
        console.log('showModalEditBillingAdd()');
        document.getElementById("modalEditBillingAdd").style.display = "block";  
    }

    var lastPayTerms = 'No Financing';

    function showModalEditPayTerms() {
        console.log('showModalEditPayTerms()');
        var total = getTotalAmountDue();
        var payList = document.getElementById("payTerms").options;
        for (let i = 1; i < payList.length; i++) {
            payList[i].setAttribute("disabled", "disabled");
        }

        payList[0].removeAttribute('disabled');

        if(parseInt(total) < 500) {
            document.getElementById('payTerms').setAttribute('disabled', 'disabled');
            document.getElementById("payTerms").value = "No Financing";
        } else {
            document.getElementById('payTerms').removeAttribute('disabled');
            if(parseInt(total) >= 500 && parseInt(total) < 1000) {
                payList[1].removeAttribute('disabled');
                payList[2].removeAttribute('disabled');
            } else if(parseInt(total) >= 1000 && parseInt(total) < 1450) {
                payList[1].removeAttribute('disabled');
                payList[2].removeAttribute('disabled');
                payList[3].removeAttribute('disabled');
            } else if(parseInt(total) >= 1450 && parseInt(total) < 1790) {
                payList[1].removeAttribute('disabled');
                payList[2].removeAttribute('disabled');
                payList[3].removeAttribute('disabled');
                payList[4].removeAttribute('disabled');
            } else if(parseInt(total) >= 1790) {
                payList[1].removeAttribute('disabled');
                payList[2].removeAttribute('disabled');
                payList[4].removeAttribute('disabled');
                payList[3].removeAttribute('disabled');
                payList[5].removeAttribute('disabled');
            }
        }
        document.getElementById("modalEditPayTerms").style.display = "block";  
    }

    function showModalOptions() {
        console.log('showModalOptions()');
        document.getElementById("modalOptionCloseEditing").style.display = "block";  
    }
            
    function closeModal() {
        console.log('closeModal()');
        document.getElementById("modal").style.display = "none";  
        document.getElementById("firstName").value = "";
        document.getElementById("lastName").value = "";
        document.getElementById("role").value = "";
        document.getElementById("email").value = "";
        document.getElementById("phone").value = "";
        document.getElementById("partnerResponseErrors").value = "";
    }

    function getDefaultProds(){
        return "{!defaultProducts}";
    }
            
    function closeModalSkip() {
        console.log('closeModalSkip()');
        document.getElementById("modalSkip").style.display = "none";  
    }

    function closeModalConfirmQuote() {
        console.log('closeModalConfirmQuote');
        document.getElementById("confirmQuoteModal").style.display = "none";  
    }

    function closeModalClientScreen() {
        console.log('closeModalClientScreen()');
        document.getElementById("modalClientScreenn").style.display = "none";  
    }
            
    function closeModalCancel() {
        console.log('closeModalCancel()');
        document.getElementById("modalCancel").style.display = "none";  
    }
            
    function closeModalEditClient() {
        console.log('closeModalEditClient()');
        document.getElementById("modalEditClient").style.display = "none";  
    }
            
    function closeModalEditPackage() {
        console.log('closeModalEditPackage()');
        document.getElementById("skiptoSale").style.display = "none";
        document.getElementById("closeOptions").style.display = "none";
        document.getElementById("keepEditing").style.display = "inline";
        document.getElementById("discardEditing").style.display = "inline";
    }

    function closeAndSave() {
        console.log('closeAndSave()');
        document.getElementById("skiptoSale").style.display = "inline";
        document.getElementById("closeOptions").style.display = "inline";
        document.getElementById("keepEditing").style.display = "none";
        document.getElementById("discardEditing").style.display = "none";
        document.getElementById("modalEditPackage").style.display = "none"; 

        document.getElementById("showPackagelabel").childNodes[0].checked = false;
        lastProductData = JSON.parse(JSON.stringify(finalProducts));
        //calcFinance(false);
    }

    //discard changes
    function confimCloseModalEditPackage() {
        console.log('confimCloseModalEditPackage()');
        document.getElementById("skiptoSale").style.display = "inline";
        document.getElementById("closeOptions").style.display = "inline";
        document.getElementById("keepEditing").style.display = "none";
        document.getElementById("discardEditing").style.display = "none";
        document.getElementById("modalEditPackage").style.display = "none"; 

        document.getElementById("showPackagelabel").childNodes[0].checked = false;
        //var tempSelectedProducts = JSON.parse('{!selectedProductsJson}'); //overwrite temp values to discard changes
        discardProductChanges();

        //this code probably isn't running
        for (let i = 0; i < currentPlan.length; i++) {
            for (let j = 0; j < tempSelectedProducts.length; j++) {
                if(!currentPlan[i].includes(tempSelectedProducts[j])) {
                    const list = document.getElementsByClassName(tempSelectedProducts[j]);
                    for (let l = 0; l < list.length; l++) {
                        if(list[l].id.includes("actionPlanTable")) {
                            list[l].checked = false;
                            list[l].value = false;
                            
                        }
                    }
                }
            }
        }

        //I have no idea why this is here
        calculateTaxSavings();
        //CallApexMethod();
    }



    function discardProductChanges(){
        console.log('discardProductChanges');
        //revert product data to pre-edit values
        for(var oldProd of lastProductData){
            var curProd = finalProductsMap.get(oldProd.Product.Id);
            //curProd.selected = oldProd.selected;
            if(curProd.currentBillingFrequency != oldProd.currentBillingFrequency){
                var isMonthly = oldProd.currentBillingFrequency == 'Monthly';
                var monthlyOnes = document.getElementsByClassName(oldProd.Product.Id + 'monthly');
                var yearlyOnes = document.getElementsByClassName(oldProd.Product.Id + 'yearly');
                for(var r = 0; r < monthlyOnes.length; r++) {
                    monthlyOnes[r].checked = isMonthly;
                    monthlyOnes[r].value = isMonthly;
                    yearlyOnes[r].checked = !isMonthly;
                    yearlyOnes[r].value = !isMonthly;
                }
            }
            curProd.enabled = oldProd.enabled;
            curProd.currentQuantity = oldProd.currentQuantity;
            curProd.currentBillingFrequency = oldProd.currentBillingFrequency;
            curProd.adjustedPrice = oldProd.adjustedPrice;
            //curProd.subtotal = oldProd.subtotal;
            if(selectedProductsMap.has(oldProd.Product.Id)){
                curProd = selectedProductsMap.get(oldProd.Product.Id);
                //curProd.selected = oldProd.selected;
                curProd.enabled = oldProd.enabled;
                curProd.currentQuantity = oldProd.currentQuantity;
                curProd.currentBillingFrequency = oldProd.currentBillingFrequency;
                curProd.adjustedPrice = oldProd.adjustedPrice;
                //curProd.subtotal = oldProd.subtotal;
            } 
            if(curProd.selected != oldProd.selected){
                addRemoveProduct(oldProd.Product.Id);
            } else {
                updateProductSubtotal(oldProd.Product.Id);
            }
            // for(var x of document.getElementsByClassName("form-control "+oldProd.Product.Id)){
            //     x.value = oldProd.currentQuantity;
            //     x.nextElementSibling.value= oldProd.currentQuantity;
            // }
            const qtyBtnList = document.querySelectorAll("[data-product-qty='" + oldProd.Product.Name + "']");
            for(var i = 0; i < qtyBtnList.length; i++) {
                qtyBtnList[i].value = oldProd.currentQuantity;
            }
            // updateQuoteTotals();
            // syncProdToClient(oldProd);
        }
        updateQuoteTotals();
        syncProdsToClient();
    }

    function backToEditing() {
        console.log('backToEditing()');
        document.getElementById("skiptoSale").style.display = "inline";
        document.getElementById("closeOptions").style.display = "inline";
        document.getElementById("keepEditing").style.display = "none";
        document.getElementById("discardEditing").style.display = "none";
    }

    function backToEdit() {
        console.log('backToEdit()');
        closeModalOptions();
        showModalEditPackage();
    }

    function showOptionsToClose() {
        console.log('showOptionsToClose()');
        document.getElementById("skiptoSale").style.display = "inline";
        document.getElementById("closeOptions").style.display = "inline";
        document.getElementById("keepEditing").style.display = "none";
        document.getElementById("discardEditing").style.display = "none";
        document.getElementById("modalEditPackage").style.display = "none";
        showModalOptions();
        document.getElementById("showPackagelabel").childNodes[0].checked = false;
    }

    function closeModalEditClientInfo() {
        console.log('closeModalEditClientInfo()');
        document.getElementById("modalEditClientInfo").style.display = "none";
        document.getElementById("modalEditClientInfoErrors").value = "";
    }

    function closeModalEditBillingAdd() {
        console.log('closeModalEditBillingAdd()');
        document.getElementById("modalEditBillingAdd").style.display = "none";
        document.getElementById("modalEditBillingAddErrors").value = "";
    }

    function closeModalEditPayTerms(discardChanges) {
        console.log('closeModalEditPayTerms()');
        document.getElementById("modalEditPayTerms").style.display = "none";
        document.getElementById("modalEditPayTermsErrors").value = "";
        if(discardChanges){
            calcFinance(lastPayTerms, true);
            document.getElementById('payTerms').value = lastPayTerms;
        }        
    }

    function closeModalOptions() {
        console.log('closeModalOptions()');
        document.getElementById("modalOptionCloseEditing").style.display = "none";
    }
            
    function addRow(j) {
        console.log('addRow '+j);
        document.getElementById('btnAddRow').setAttribute("disabled", "disabled");
        document.getElementById('btnAddRow').style.opacity = "0.25";

        document.getElementById('thirdStart').removeAttribute('disabled');


        var action = document.getElementById("btnAddRow").innerHTML;
        var firstName = document.getElementById("firstName").value;
        var lastName = document.getElementById("lastName").value;
        var role = document.getElementById("role").value;
        var email = document.getElementById("email").value;
        
        if (!(/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(email))) {
            document.getElementById("emailFormatError").innerHTML = "Invalid email format.";
        } else {
            var phone = document.getElementById("phone").value;
            var contactId = (undefined == document.getElementById("contactId").value) ? null : document.getElementById("contactId").value;           
            
            var name = firstName + ' ' + lastName;
            var businessName = document.getElementById("businessName").value;
            var tBody = document.getElementById("tBody");
            var tableBody = document.getElementById("tableBody");
            var success = false;
            var jsonString = JSON.stringify({firstName: firstName, lastName: lastName, role: role, email: email, phone: phone});
        
            Visualforce.remoting.Manager.invokeAction('GuidedSellingControllerExtension.createUpdatePartner', businessId, contactId, businessName, jsonString, function(r,e) {
                if(e.status) {
                    if(action == "Add Partner") {
                        document.getElementById("addPartTable1").style.display = "none";  
                    
                        var ind1 = document.getElementById('contTable').getElementsByTagName('tbody')[0].getElementsByTagName('tr').length;
                        var rowData1 = getRowData(ind1, "prin", name, role, email, phone, e.result);
                    
                        var ind2 = document.getElementById('addPartTable2').getElementsByTagName('tbody')[0].getElementsByTagName('tr').length;
                        var rowData2 = getRowData(ind2, "sec", name, role, email, phone, e.result);
                    
                        if(tBody.innerHTML != null) {
                            tableBody.innerHTML = tableBody.innerHTML + rowData1;
                            tBody.innerHTML = tBody.innerHTML + rowData2;
                        } else {
                            tableBody.innerHTML = rowData1;
                            tBody.innerHTML = rowData2;
                        }
                    
                        socket.connect();
                        content = {
                            page: "Partner Info",
                            name: name,
                            role: role,
                            email: email,
                            phone: phone 
                        }
                        socket.emit("private message", {
                            content
                        });
                        document.getElementById("menuOpts").options[1].removeAttribute('disabled'); 
                        
                        document.getElementById('start').removeAttribute('disabled');
                        document.getElementById('start').style.opacity = "1";
                        
                    } else if(action == "Save Partner") {
                        document.getElementById("addPartTable1").style.display = "none";  
                        var col;
                        
                        if(cPar.includes("prin")) {
                            col = cInd - 1;
                            
                            tBody.rows[cInd - 1].cells[0].childNodes[0].innerText = name[0];
                            tBody.rows[cInd - 1].cells[1].childNodes[0].childNodes[0].innerText = name;
                            tBody.rows[cInd - 1].cells[1].childNodes[0].childNodes[1].innerText = role;
                            tBody.rows[cInd - 1].cells[2].childNodes[0].childNodes[0].innerText = phone;
                            tBody.rows[cInd - 1].cells[2].childNodes[0].childNodes[1].innerText = email;
                            
                            tableBody.rows[cInd].cells[0].childNodes[0].innerText = name[0];
                            tableBody.rows[cInd].cells[1].childNodes[0].childNodes[0].innerText = name;
                            tableBody.rows[cInd].cells[1].childNodes[0].childNodes[1].innerText = role;
                            tableBody.rows[cInd].cells[2].childNodes[0].childNodes[0].innerText = phone;
                            tableBody.rows[cInd].cells[2].childNodes[0].childNodes[1].innerText = email;
                        
                        } else if (cPar.includes("sec")) {
                            col = cInd;
                            
                            tBody.rows[cInd].cells[0].childNodes[0].innerText = name[0];
                            tBody.rows[cInd].cells[1].childNodes[0].childNodes[0].innerText = name;
                            tBody.rows[cInd].cells[1].childNodes[0].childNodes[1].innerText = role;
                            tBody.rows[cInd].cells[2].childNodes[0].childNodes[0].innerText = phone;
                            tBody.rows[cInd].cells[2].childNodes[0].childNodes[1].innerText = email;
                            
                            tableBody.rows[cInd + 1].cells[0].childNodes[0].innerText = name[0];
                            tableBody.rows[cInd + 1].cells[1].childNodes[0].childNodes[0].innerText = name;
                            tableBody.rows[cInd + 1].cells[1].childNodes[0].childNodes[1].innerText = role;
                            tableBody.rows[cInd + 1].cells[2].childNodes[0].childNodes[0].innerText = phone;
                            tableBody.rows[cInd + 1].cells[2].childNodes[0].childNodes[1].innerText = email;
                        } 
                        
                        socket.connect();
                        content = {
                            page: "Edit Partner", 
                            index: col,
                            name: name,
                            role: role,
                            email: email,
                            phone: phone
                        }
                        socket.emit("private message", {
                            content
                        });
                        
                        cInd = '';
                        cPar = '';
                    } else if(action == "Save Primary Contact") {
                        tableBody.rows[0].cells[0].childNodes[1].innerText = name[0];
                        tableBody.rows[0].cells[1].childNodes[1].childNodes[1].innerText = name;
                        tableBody.rows[0].cells[1].childNodes[1].childNodes[3].innerText = role;
                        tableBody.rows[0].cells[2].childNodes[1].childNodes[1].innerText = phone;
                        tableBody.rows[0].cells[2].childNodes[1].childNodes[3].innerText = email;
                        document.getElementById('additionalName0').innerText = name;
                        for(x = 0; x < 18; x++){
                            document.getElementById('additionalFirstName' + x).innerText = firstName;
                        }
                    }
                
                    name = '';
                    role = '';
                    email = '';
                    phone = '';
                    document.getElementById("btnAddRow").removeAttribute('disabled'); 
                    document.getElementById('btnAddRow').style.opacity = "1";
                
                    closeModal();
                } else if(e.type === 'exception') {
                    document.getElementById("partnerResponseErrors").innerHTML = e.message + "<br/>\n<pre>" + e.where + "</pre>";
                    document.getElementById("btnAddRow").removeAttribute('disabled'); 
                    document.getElementById('btnAddRow').style.opacity = "1";
                }
            });
        }
    }
    
    function getRowData(num, diff, name, role, email, phone, contactId) {
        console.log('getRowData');
        var rowData = '<tr>'
        + '<td>' 
        + '<spam class="contIni">' + name[0] + '</spam>'
        + '</td>'
        + '<td>'
        + '<div class="contInfo">'
        + '<p class="contName">' + name + '</p>'
        + '<p class="contRole">' +  role + '</p>'
        + '</div>'
        + '</td>'
        + '<td>'
        + '<div class="contContaInfo">'
        + '<p class="contPhone">' + phone + '</p>'
        + '<p class="contEmail">' + email + '</p>'
        + '<p class="contContactId" style="display:none">' + contactId + '</p>'
        + '</div>'
        + '</td>'
        + '<td>'
        + '<div class="contMore">'
        + '<span class="material-icons" onClick="' + diff + 'rowMenu' + num + '();" id="btnSubMenu">more_vert</span>'
        + '<div id="' + diff + 'menu' + num + '" class="dropdown-content">'
        + '<a onclick="editPartner(this);"><span class="material-icons" id="icon">edit</span>&nbsp;Edit Partner</a>'
        + '<a onclick="deletePartner(this);" id="edit"><span class="material-icons" id="icon">delete</span>&nbsp;Delete Partner</a>'
        + '</div>'                               
        + '</div>'
        + '</td>'
        + '</tr>';
        return rowData;
    }
    var seenDefaults = false;
    
    function nextSection(pickNum, opt, hideOne, showOne) { 
        console.log('pickNum: '+pickNum);
        console.log('opt: '+opt);
        isfinalScreen = false;
        
        document.getElementById(hideOne).style.display = "none";
        document.getElementById(showOne).style.display = "block";

        document.getElementById("switchText").style.display = "none";
        document.getElementById("showPackagelabel").style.display = "none";
        
        if(opt == '1-800Accountant Blast') {
            document.getElementById("menuOpts").options[pickNum]?.removeAttribute('disabled'); 
            document.getElementById("menuOpts").value = opt;
            var page = ('white' == document.getElementById('yesBtn2').style.color) ? 'Back To Partners' : 'Back To Intro';
            content = {
                page: page 
            }
            socket.emit("private message", {
                content
            });
        } else if(opt == 'Business Discovery Intro') {
            document.getElementById("menuOpts").options[pickNum]?.removeAttribute('disabled'); 
            document.getElementById("menuOpts").value = opt;
            socket.connect();
            content = {
                page: "Business Discovery Intro"
            }
            socket.emit("private message", {
                content
            });
        } else if(opt == 'Discovery Questions') {
            document.getElementById("menuOpts").options[pickNum]?.removeAttribute('disabled'); 
            document.getElementById("menuOpts").value = opt;
            document.getElementById("discoveryQuestionTitle").innerHTML = "Business Discovery";
            document.getElementById('engagee').style.display = "none";
            document.getElementById('thirdStart').setAttribute("disabled", "disabled");
            document.getElementById('thirdStart').style.opacity = "0.25";
            document.getElementById('errorMessage').style.display = "flex"; 

            document.getElementById('mainCategoryDiv').style.background = "white";
            document.getElementById('mainCategoryDiv').style.border = "none";
            document.getElementById('mainCategoryDiv').style.borderRadius = "0px";
            document.getElementById('mainCategory').style.marginTop = "0px";
            document.getElementById('mainCategory').style.width = "100%";
            document.getElementById('mainCategory').style.marginLeft = "0px";
            document.getElementById('showAllAnswer').style.display = "none";

            content = {
                page: "Business Discovery Parts"
            }
            socket.emit("private message", {
                content
            });

            var defaultYearsInBusiness = answerMap?.get('How many years have you been in business') ? answerMap?.get('How many years have you been in business') : '{!defaultYearsInBusiness}';
            var defaultEntity = answerMap?.get('What entity type is your business') ? answerMap?.get('What entity type is your business') : '{!defaultEntity}';
            var defaultIndustry = answerMap?.get('What industry is your business in') ? answerMap?.get('What industry is your business in') :'{!defaultIndustry}';
            var defaultDomesticState = answerMap?.get('What is your state of incorporation') ? answerMap?.get('What is your state of incorporation') :'{!defaultDomesticState}';
            var defaultForeignState = answerMap?.get('What is your foreign state of incorporation') ? answerMap?.get('What is your foreign state of incorporation') : '{!defaultForeignState}';
            //var defaultPersonalState = '{defaultPersonalState}';
            var defaultStartupCosts = answerMap?.get('How much have you invested so far in start-up costs') ? answerMap?.get('How much have you invested so far in start-up costs') :'{!defaultStartupCosts}';
            var defaultRevenue = answerMap?.get('What do you anticipate your revenue to be over the next 12 months') ? answerMap?.get('What do you anticipate your revenue to be over the next 12 months') : '{!defaultRevenue}';
            var defaultFirstYearProfit = answerMap?.get('What do you project your 1st year profit to be over the next 12 months') ? answerMap?.get('What do you project your 1st year profit to be over the next 12 months') : '{!defaultFirstYearProfit}';
            //var defaultInvestorFunding = '{defaultInvestorFunding}';
            var defaultNumTransactions = answerMap?.get('How many monthly bookkeeping transactions do you have') ? answerMap?.get('How many monthly bookkeeping transactions do you have') : '{!defaultNumTransactions}';
            //var defaultNumForeignOwners = '{defaultNumForeignOwners}';
            var defaultNumOwners = answerMap?.get('How many owners does your business have') ? answerMap?.get('How many owners does your business have') :'{!defaultNumOwners}';
            var defaultNumEmployees = answerMap?.get('How many employees do you have') ? answerMap?.get('How many employees do you have') : '{!defaultNumEmployees}';
            //var defaultNumContractors = '{defaultNumContractors}';
            var defaultFilingStatus = answerMap?.get('What is your tax filing status') ? answerMap?.get('What is your tax filing status') : '{!defaultFilingStatus}';
            var defaultPersonalIncome = answerMap?.get('What was your household W-2 income last year') ? answerMap?.get('What was your household W-2 income last year') : '{!defaultPersonalIncome}';
            var defaultNumberOfRentalProperties = answerMap?.get('How many rental properties do you have') ? answerMap?.get('How many rental properties do you have') : '{!defaultNumberOfRentalProperties}';
            //var defaultOtherInvestments = '{defaultOtherInvestments}';
            var defaultOffice = answerMap?.get('What is the approximate square footage of your home office') ? answerMap?.get('What is the approximate square footage of your home office') : '{!defaultOffice}';
            var defaultMileage = answerMap?.get('How many business-related miles do you estimate you’ll drive per year') ? answerMap?.get('How many business-related miles do you estimate you’ll drive per year') : '{!defaultMileage}';
            var firstBusiness = answerMap?.get('Is this your first business') ? answerMap?.get('Is this your first business') : '{!firstBusiness}';
            var runPayrollBefore = answerMap?.get('Have you run payroll before') ? answerMap?.get('Have you run payroll before') : '{!runPayrollBefore}';
            var hasEmployeesContractors = answerMap?.get('Do you currently have any employees') ? answerMap?.get('Do you currently have any employees') : '{!hasEmployeesContractors}';
            //var foreignIncome = '{foreignIncome}';
            var hasRentalProperties = answerMap?.get('Do you currently have any rental properties') ? answerMap?.get('Do you currently have any rental properties') : '{!hasRentalProperties}';
            var isWorkingFromHome = answerMap?.get('Will you be working from home') ? answerMap?.get('Will you be working from home') : '{!isWorkingFromHome}';
            var commutesWithOwnVehicle = answerMap?.get('Will you use your personal vehicle for business purposes') ? answerMap?.get('Will you use your personal vehicle for business purposes') : '{!commutesWithOwnVehicle}';
            //var eCommerce = '{eCommerce}';
            var bookStart = answerMap?.get('What transaction date should your bookkeeper start on') ? answerMap?.get('What transaction date should your bookkeeper start on') : '{!existingBookkeepingStart}';
            var bookEnd = answerMap?.get('What transaction date should your bookkeeper end on') ? answerMap?.get('What transaction date should your bookkeeper end on') : '{!existingBookkeepingEnd}';
            console.log('{!existingBookkeepingEnd}');
            console.log(bookEnd);
            //setRequiredUnasweredFields();

            if('---' != defaultYearsInBusiness){
                getNextBtn('Years In Business');
                populateAnswer('How many years have you been in business?', defaultYearsInBusiness, false);
            }
            if('Select an Entity Type' != defaultEntity){
                getNextBtn('Entity Type');
                populateAnswer('What entity type is your business?', defaultEntity, false);
            }
            if('Select an Industry' != defaultIndustry){
                getNextBtn('Industry Type');
                populateAnswer('What industry is your business in?', defaultIndustry, false);
            }
            if('Select a State' != defaultDomesticState){
                getNextBtn('State of Incorporation');
                populateAnswer('What is your state of incorporation?', defaultDomesticState, false);
            }
            if('Select a State' != defaultForeignState){
                getNextBtn('Foreign State');
                populateAnswer('What is your foreign state of incorporation?', defaultForeignState, false);
            }
            // if('Select a State' != defaultPersonalState){
            //     getNextBtn('State of Residence');
            //     populateAnswer('What is your state of residence?', defaultPersonalState, false);
            // }
            if('---' != defaultStartupCosts){
                getNextBtn('Total Startup Cost');
                populateAnswer('How much have you invested so far in start-up costs?', defaultStartupCosts, false);
            }
            if('---' != defaultRevenue){
                getNextBtn('Projected 1st Year Revenue');
                populateAnswer('What do you anticipate your revenue to be over the next 12 months?', defaultRevenue, false);
            }
            if('---' != defaultFirstYearProfit){
                getNextBtn('Projected 1st Year Profit');
                populateAnswer('What do you project your 1st year profit to be over the next 12 months?', defaultFirstYearProfit, false);
            }
            // if('---' != defaultInvestorFunding){
            //     getNextBtn('Investor Funding');
            //     populateAnswer('What is your total investor funding?', defaultInvestorFunding, false);
            // }
            if('---' != defaultNumTransactions){
                getNextBtn('Number of Transactions');
                populateAnswer('How many monthly bookkeeping transactions do you have?', defaultNumTransactions, false);
            }
            if('---' != defaultNumOwners){
                getNextBtn('Number of Owners');
                populateAnswer('How many owners does your business have?', defaultNumOwners, false);
            }
            // if('---' != defaultNumForeignOwners){
            //     getNextBtn('Number of Owners');
            //     getNextBtn('Foreign Owners');
            //     populateAnswer('How many owners are outside the USA?', defaultNumForeignOwners, false);
            // }
            if('---' != defaultNumEmployees){
                getNextBtn('Number of Employees');
                populateAnswer('How many employees do you have?', defaultNumEmployees, false);
            }
            // if('---' != defaultNumContractors){
            //     getNextBtn('Number of Contractors');
            //     populateAnswer('How many contractors do you have?', defaultNumContractors, false);
            // }
            if('Select a Filing Status' != defaultFilingStatus){
                getNextBtn('Filing Status');
                populateAnswer('What is your tax filing status?', defaultFilingStatus, false);
            }
            if('---' != defaultPersonalIncome){
                getNextBtn('Personal Income');
                populateAnswer('What was your household W-2 income last year?', defaultPersonalIncome, false);
            }
            if('---' != defaultNumberOfRentalProperties){
                getNextBtn('Number of Rental Properties');
                populateAnswer('How many rental properties do you have?', defaultNumberOfRentalProperties, false);
            }
            // if('---' != defaultOtherInvestments){
            //     getNextBtn('Number of Rental Properties');
            //     populateAnswer('How many K-1s are from other investments?', defaultOtherInvestments, false);
            // }
            if('---' != defaultOffice){
                getNextBtn('Office Square Footage');
                populateAnswer('What is the approximate square footage of your home office?', defaultOffice, false);
            }
            if('---' != defaultMileage){
                getNextBtn('Business Miles');
                populateAnswer('How many business-related miles do you estimate you’ll drive per year?', defaultMileage, false);
            }
            if('' != bookStart){
                document.querySelector('.date-select.start-date').value = bookStart;
                getNextBtn('Bookkeeping Start Date');
                populateAnswer('What transaction date should your bookkeeper start on?', bookStart, false);
            }
            if('' != bookEnd){
                document.querySelector('.date-select.end-date').value = bookEnd;
                getNextBtn('Bookkeeping End Date');
                populateAnswer('What transaction date should your bookkeeper end on?', bookEnd, false);
            }

            if(firstBusiness == 'true'){
                YesDecision(1.1);
                populateAnswer('Is this your first business?', 'Yes', false);
                getNextBtn('First Business');
            } else if(isEditQuote && firstBusiness == 'false') {
                NoDecision(1.1);
                populateAnswer('Is this your first business?', 'No', false);
                getNextBtn('First Business');
            }

            if(runPayrollBefore == 'true'){
                YesDecision(1.2);
                populateAnswer('Have you run payroll before?', 'Yes', false);
                getNextBtn('Run Payroll Before');
            } else if(isEditQuote && runPayrollBefore == 'false') {
                NoDecision(1.2);
                populateAnswer('Have you run payroll before?', 'No', false);
                getNextBtn('Run Payroll Before');
            }

            if(hasEmployeesContractors == 'true'){
                YesDecision(1.3);
                populateAnswer('Do you currently have any employees?', 'Yes', false);
                linkedYesNo('Employees and Contractors');
            } else if(isEditQuote && hasEmployeesContractors == 'false') {
                NoDecision(1.3);
                populateAnswer('Do you currently have any employees?', 'No', false);
                linkedYesNo('Employees and Contractors');
            }
            // if(foreignIncome == 'true'){
            //     YesDecision(1.5);
            //     populateAnswer('Do you have any foreign sourced income?', 'Yes', false);
            // }
            if(hasRentalProperties == 'true'){
                YesDecision(1.6);
                populateAnswer('Do you currently have any rental properties?', 'Yes', false);
                linkedYesNo('Number of Rental Properties');
            } else if(isEditQuote && hasRentalProperties == 'false') {
                NoDecision(1.6);
                populateAnswer('Do you currently have any rental properties?', 'No', false);
                linkedYesNo('Number of Rental Properties');
            }

            if(isWorkingFromHome == 'true'){
                YesDecision(1.7);
                populateAnswer('Will you be working from home?', 'Yes', false);
                linkedYesNo('Working from Home');
            } else if(isEditQuote && isWorkingFromHome == 'false') {
                NoDecision(1.7);
                populateAnswer('Will you be working from home?', 'No', false);
                linkedYesNo('Working from Home');
            }

            if(commutesWithOwnVehicle == 'true'){
                YesDecision(1.8);
                populateAnswer('Will you use your personal vehicle for business purposes?', 'Yes', false);
                linkedYesNo('Driving');
            } else if(isEditQuote && commutesWithOwnVehicle == 'false') {
                NoDecision(1.8);
                populateAnswer('Will you use your personal vehicle for business purposes?', 'No', false);
                linkedYesNo('Driving');
            }
            // if(eCommerce == 'true'){
            //     YesDecision(1.9);
            //     populateAnswer('Will your business have a web or e-commerce presence?', 'Yes', false);
            // }

        } else if(opt == 'Flow Through Entity') {
            document.getElementById("menuOpts").options[pickNum]?.removeAttribute('disabled'); 
            document.getElementById("menuOpts").value = opt;
            socket.connect();
            content = {
                page: "Flow Through Entity"
            }
            socket.emit("private message", {
                content
            });
        } else if(showOne == 'entityClassificationElec') {
            socket.connect();
                content = {
                page: "Entity Classification Election (ECE)"
            }
            socket.emit("private message", {
                content
            });
        } else if(showOne == 'selfEmploymentTaxLLC') {
            getSlideOne();
        } else if(showOne == 'selfEmploymentTaxSCorp') {
            getSlideOne();
        } else if(showOne == 'properEntityStrugReviewLLC') {
            socket.connect();
            content = {
                page: "Proper Entity Structuring Review LLC"
            }
            socket.emit("private message", {
                content
            });
        } else if(opt == 'Beneficial Ownership Information (BOI)') {
            socket.connect();
            content = {
                page: "Beneficial Ownership Information (BOI)"
            }
            socket.emit("private message", {
                content
            });
        } else if(showOne == 'reasonableSalarySCorp') {
            socket.connect();
            content = {
                page: "Reasonable Salary"
            }
            socket.emit("private message", {
                content
            });
        } else if(showOne == 'properEntityStrugReviewSCorp') {
            socket.connect();
            content = {
                page: "Proper Entity Structuring Review SCorp"
            }
            socket.emit("private message", {
                content
            });
        } else if(showOne == 'deductionsIntro') {
            socket.connect();
            content = {
                page: "Deductions Intro"
            }
            socket.emit("private message", {
                content
            });
        } else if(opt == 'Start-up Costs') {
            document.getElementById("menuOpts").options[pickNum]?.removeAttribute('disabled'); 
            document.getElementById("menuOpts").value = opt;
                
            document.getElementById('medicalbtn').style.opacity = "0.25";
            document.getElementById('vehiclebtn').style.opacity = "0.25";
            document.getElementById('officebtn').style.opacity = "0.25";
            document.getElementById('199Abtn').style.opacity = "0.25";
            document.getElementById('medicalbtn').setAttribute('disabled', 'disabled');
            document.getElementById('vehiclebtn').setAttribute('disabled', 'disabled');
            document.getElementById('officebtn').setAttribute('disabled', 'disabled');
            document.getElementById('199Abtn').setAttribute('disabled', 'disabled');
            content = {
                page: "Start-up Costs"
            }
            socket.emit("private message", {
                content
            });
        } else if(opt == 'Medical Deduction' || opt == 'Code Section 199A Deduction' || opt == 'Home Office Deduction' || opt == 'Vehicle Deduction') {
            document.getElementById("menuOpts").options[pickNum]?.removeAttribute('disabled'); 
            document.getElementById("menuOpts").value = opt;
            showDeductBtns();
            if(opt == 'Medical Deduction') {
                document.getElementById('dedMedical').style.display = "flex";
                content = {
                    page: "Medical Deduction"
                }
                socket.emit("private message", {
                    content
                });
            } else if(opt == 'Vehicle Deduction') {
                document.getElementById('dedVehicle').style.display = "flex";
                content = {
                    page: "Vehicle Deduction"
                }
                socket.emit("private message", {
                    content
                });
            } else if(opt == 'Home Office Deduction') {
                document.getElementById('dedHomeOffice').style.display = "flex";
                content = {
                    page: "Home Office Deduction"
                }
                socket.emit("private message", {
                    content
                });
            } else if(opt == 'Code Section 199A Deduction') {
                document.getElementById('dedCodeSec').style.display = "flex";
                content = {
                    page: "Code Section 199A Deduction"
                }
                socket.emit("private message", {
                    content
                });
            }
        } else if(opt == 'Review Deductions') {
            document.getElementById("menuOpts").options[pickNum]?.removeAttribute('disabled'); 
            document.getElementById("menuOpts").value = opt;

            if(entitySelected == 'LLC') {
                document.getElementById('revDeductForEntity').innerHTML = 'We have discussed Flow Through Entity, ECE, Self-Employment Tax, Startup and Organizational Expenses,';
            } else if(entitySelected == 'S Corporation') {
                document.getElementById('revDeductForEntity').innerHTML = 'We have discussed Flow Through Entity, Self-Employment Tax, Fair and Reasonable Salary, Start-up Costs, and Organizational Expenses,';
            }
            
            socket.connect();
            content = {
                page: "Review Deductions"
            }
            socket.emit("private message", {
                content
            });
        } else if(opt == 'Paperloss') {
            document.getElementById("menuOpts").options[pickNum]?.removeAttribute('disabled'); 
            document.getElementById("menuOpts").value = opt;
            getSecOne();
        } else if(opt == 'Prepared Packages') {
            document.getElementById("menuOpts").options[pickNum]?.removeAttribute('disabled'); 
            document.getElementById("menuOpts").value = opt; 
            
            document.getElementById("switchText").style.display = "inline-block";
            document.getElementById("showPackagelabel").style.display = "inline-block";

            document.getElementById("entityFormationPlan").style.display = "none";
            document.getElementById("bookkeepingPlan").style.display = "none";
            document.getElementById("payrollPlan").style.display = "none";
            document.getElementById("personalPlan").style.display = "none";
            document.getElementById("businessPlan").style.display = "none";
            document.getElementById("frequentPlan").style.display = "none";
            document.getElementById("AllPlan").style.display = "none";
            
            displayTablePlan('currentPlan', document.getElementById("tab2-1"), true);

            socket.connect();

            seenDefaults = true;

            content = {
                page: "Prepared Packages",
                showProgress: true
            }
            socket.emit("private message", {
                content
            });

        } else if(opt == 'Verify Information') {
            document.getElementById("menuOpts").options[pickNum]?.removeAttribute('disabled'); 
            document.getElementById("menuOpts").value = opt;
            var t = formatMoney(getTotalAmountDue());//document.getElementById('payAmountDue').innerHTML;
            var d = formatMoney(getDueToday());//document.getElementById('payAmountToday').innerHTML;
            socket.connect();
            content = {
                showProgress: true,
                page: "Payment Details",
                name: "{!businessOwner.First_Name__c} {!businessOwner.Last_Name__c}",
                total: t, //sets element with id=balanceSectionAmount
                due: d, //sets element with id=balanceSectionTitle
                installAmount: formatMoney(getInstallmentAmount()) //sets element with id=monthlyDue
            }
            socket.emit("private message", {
                content
            });
        } else if(opt == 'Payment Details') {
            document.getElementById("menuOpts").options[pickNum]?.removeAttribute('disabled'); 
            document.getElementById("menuOpts").value = opt;

            document.getElementById('nextPayment').setAttribute('disabled', 'disabled');
            document.getElementById('nextPayment').style.opacity = "0.25";

            var t = formatMoney(getTotalAmountDue());//document.getElementById('payAmountDue').innerHTML;
            var d = formatMoney(getDueToday());//document.getElementById('payAmountToday').innerHTML;

            socket.connect();
            content = {
                showProgress: true,
                page: "Payment Details",
                name: "{!businessOwner.First_Name__c} {!businessOwner.Last_Name__c}",
                total: t,//sets element with id=balanceSectionAmount
                due: d, //sets element with id=balanceSectionTitle
                installAmount: formatMoney(getInstallmentAmount()) //sets element with id=monthlyDue
            }
            socket.emit("private message", {
                content
            });
        } else if(opt == 'Post Purchase') {
            isfinalScreen = true;

            document.getElementById("menuOpts").options[pickNum]?.removeAttribute('disabled'); 
            document.getElementById("menuOpts").value = opt;

            schedulerURL = schedulerURL + '&Frame=1';
            document.getElementById('Scheduler').src = schedulerURL;

            socket.connect();
            content = {
                page: "Post Purchase"
            }
            socket.emit("private message", {
                content
            });

            secondaryDisp = 'Sale';  
            whenDisposition = 'afterPayment';
        } else if(opt == '1-800Accountant Introduction') {
            document.getElementById("menuOpts").options[pickNum]?.removeAttribute('disabled'); 
            document.getElementById("menuOpts").value = opt;
            getSecOnefeat();
        }  else if(opt == 'Your Expert Accountant Team') {
            document.getElementById("menuOpts").options[pickNum]?.removeAttribute('disabled'); 
            document.getElementById("menuOpts").value = opt;
            socket.connect();
            content = {
                page: "Your Expert Accountant Team"
            }
            socket.emit("private message", {
                content
            });
        }  else if(opt == 'Features - 1-800Accountant Portal') {
            document.getElementById("menuOpts").options[pickNum]?.removeAttribute('disabled'); 
            document.getElementById("menuOpts").value = opt;
            getSectionsPortal('Intro');
        }  else if(opt == 'Features - Business & Personal...') {
            document.getElementById("menuOpts").options[pickNum]?.removeAttribute('disabled'); 
            document.getElementById("menuOpts").value = opt;
            socket.connect();
            content = {
                page: "Features - Business & Personal..."
            }
            socket.emit("private message", {
                content
            });
        }  else if(opt == 'Features - Filing ECE') {
            document.getElementById("menuOpts").options[pickNum]?.removeAttribute('disabled'); 
            document.getElementById("menuOpts").value = opt;
            socket.connect();
            content = {
                page: "Features - Filing ECE"
            }
            socket.emit("private message", {
                content
            });
        }  else if(opt == 'Features - BOI Summary') {
            //document.getElementById("menuOpts").options[pickNum]?.removeAttribute('disabled'); 
            document.getElementById("menuOpts").value = opt;
            socket.connect();
            content = {
                page: "Beneficial Ownership Information (BOI)"
            }
            socket.emit("private message", {
                content
            });
        }  else if(opt == 'Features - Wrap Up') {
            document.getElementById("menuOpts").options[pickNum]?.removeAttribute('disabled'); 
            document.getElementById("menuOpts").value = opt;
            socket.connect();
            content = {
                page: "Features - Wrap Up"
            }
            socket.emit("private message", {
                content
            });
        } 
    } 
                
    function backSection(opt, showOne, hideOne) {
        document.getElementById("menuOpts").value = opt;
        if(showOne != 'properEntityStrugReview') {
            document.getElementById(showOne).style.display = "block";
        }
        document.getElementById(hideOne).style.display = "none";
        socket.connect();
                
        if(opt == 'Introduction') {
            //If they have partners, show the partner page, else show the introduction slide again
            var page = ('white' == document.getElementById('yesBtn2').style.color) ? 'Back To Partners' : 'Back To Intro';
            content = {
                page: page
            }
            socket.emit("private message", {
                content
            });
        } else if(opt == '1-800Accountant Blast') {
            content = {
                page: "Blast"
            }
            socket.emit("private message", {
                content
            });
        } else if(opt == 'Review Business Discovery') {
                content = {
                page: "Business Discovery Review"
            }
            socket.emit("private message", {
                content
            });
        } else if(opt == 'Proper Entity Structuring') {
            if(entitySelected == 'LLC') {
                document.getElementById('pesForLLC').style.display = "block";
                content = {
                    page: "Proper Entity Structuring"
                }
                socket.emit("private message", {
                    content
                });
            } else if(entitySelected == 'S Corporation') {
                document.getElementById('pesForSCorp').style.display = "block";
                content = {
                    page: "Proper Entity Structuring SCorp"
                }
                socket.emit("private message", {
                    content
                });
            }
        } else if(opt == 'Flow Through Entity') {
            if(showOne == 'flowThroughEntitySCorp') {
                content = {
                    page: "Flow Through Entity"
                }
                socket.emit("private message", {
                    content
                });
            } else if(showOne == 'flowThroughEntityLLC') {
                content = {
                    page: "Flow Through Entity"
                }
                socket.emit("private message", {
                    content
                });
            } else if(showOne == 'entityClassificationElec') {
                content = {
                    page: "Entity Classification Election (ECE)"
                }
                socket.emit("private message", {
                    content
                });
            } else if(showOne == 'selfEmploymentTaxLLC') {
                content = {
                    page: "Self Employment Tax (FICA) LLC"
                }
                socket.emit("private message", {
                    content
                });
            } else if(showOne == 'boiIntroLLC' || showOne == 'boiIntroSCorp') {
                content = {
                    page: "Beneficial Ownership Information (BOI)"
                }
                socket.emit("private message", {
                    content
                });
            } else if(showOne == 'selfEmploymentTaxSCorp') {
                content = {
                    page: "Self Employment Tax (FICA) S Corp"
                }
                socket.emit("private message", {
                    content
                });
            } else if(showOne == 'reasonableSalarySCorp') {
                content = {
                    page: "Reasonable Salary"
                }
                socket.emit("private message", {
                    content
                });
            } else if(showOne == 'properEntityStrugReview') {
                if(entitySelected == 'LLC') {
                    document.getElementById('properEntityStrugReviewLLC').style.display = "block";
                    content = {
                        page: "Proper Entity Structuring Review"
                    }
                    socket.emit("private message", {
                        content
                    });
                } else if(entitySelected == 'S Corporation') {
                    document.getElementById('properEntityStrugReviewSCorp').style.display = "block";
                    content = {
                        page: "Proper Entity Structuring Review"
                    }
                    socket.emit("private message", {
                        content
                    });
                }
            } else if(showOne == 'deductionsIntro') {
                content = {
                    page: "Deductions Intro"
                }
                socket.emit("private message", {
                    content
                });
            }
        }  else if(opt == 'Start-up Costs') {
            content = {
                page: "Start-up Costs"
            }
            socket.emit("private message", {
                content
            });
        } else if(opt == 'Medical Deduction') {
            document.getElementById('dedMedical').style.display = "flex";
            content = {
                page: "Medical Deduction"
            }
            socket.emit("private message", {
                content
            });
        } else if(opt == 'Vehicle Deduction') {
            document.getElementById('dedVehicle').style.display = "flex";
            content = {
                page: "Vehicle Deduction"
            }
            socket.emit("private message", {
                content
            });
        } else if(opt == 'Home Office Deduction') {
            document.getElementById('dedHomeOffice').style.display = "flex";
            content = {
                page: "Home Office Deduction"
            }
            socket.emit("private message", {
                content
            });
        } else if(opt == 'Code Section 199A Deduction') {
            document.getElementById('dedCodeSec').style.display = "flex";
            content = {
                page: "Code Section 199A Deduction"
            }
            socket.emit("private message", {
                content
            });
        } else if(opt == 'Review Deductions') {
            content = {
                page: "Review Deductions"
            }
            socket.emit("private message", {
                content
            });
        } else if(opt == 'Paperloss') {
            getSecThree();
        } else if(opt == 'Prepared Packages') {
            document.getElementById("switchText").style.display = "inline-block";
            document.getElementById("showPackagelabel").style.display = "inline-block";

            seenDefaults = true;

            content = {
                page: "Prepared Packages",
                showProgress: true
            }
            socket.emit("private message", {
                content
            });
        } else if(opt == 'Verify Information') {
            var t = formatMoney(getTotalAmountDue());//document.getElementById('payAmountDue').innerHTML;
            var d = formatMoney(getDueToday());//document.getElementById('payAmountToday').innerHTML;

            content = {
                showProgress: true,
                page: "Payment Details",
                name: "{!businessOwner.First_Name__c} {!businessOwner.Last_Name__c}",
                total: t,//sets element with id=balanceSectionAmount
                due: d, //sets element with id=balanceSectionTitle
                installAmount: formatMoney(getInstallmentAmount()) //sets element with id=monthlyDue
            }
            socket.emit("private message", {
                content
            });
        } else if(opt == 'Payment Details') {
            var t = formatMoney(getTotalAmountDue());//document.getElementById('payAmountDue').innerHTML;
            var d = formatMoney(getDueToday());//document.getElementById('payAmountToday').innerHTML;

            content = {
                showProgress: true,
                page: "Payment Details",
                name: "{!businessOwner.First_Name__c} {!businessOwner.Last_Name__c}",
                total: t,//sets element with id=balanceSectionAmount
                due: d, //sets element with id=balanceSectionTitle
                installAmount: formatMoney(getInstallmentAmount()) //sets element with id=monthlyDue
            }
            socket.emit("private message", {
                content
            });
        } else if(opt == '1-800Accountant Introduction') {
            content = {
                page: "1-800Accountant Introduction Part 1"
            }
            socket.emit("private message", {
                content
            });
        }  else if(opt == 'Your Expert Accountant Team') {
            content = {
                page: "Your Expert Accountant Team"
            }
            socket.emit("private message", {
                content
            });
        }  else if(opt == 'Features - 1-800Accountant Portal') {
            content = {
                page: "Features - 1-800Accountant Portal"
            }
            socket.emit("private message", {
                content
            });
        }  else if(opt == 'Features - Business & Personal...') {
            content = {
                page: "Features - Business & Personal..."
            }
            socket.emit("private message", {
                content
            });
        }  else if(opt == 'Features - Filing ECE') {
            content = {
                page: "Features - Filing ECE"
            }
            socket.emit("private message", {
                content
            });
        }  else if(opt == 'Features - BOI Summary') {
            content = {
                page: "Beneficial Ownership Information (BOI)"
            }
            socket.emit("private message", {
                content
            });
        }  else if(opt == 'Features - Wrap Up') {
            content = {
                page: "Features - Wrap Up"
            }
            socket.emit("private message", {
                content
            });
        }      
    }
        
    function backThirdSection() {
        socket.connect();
        if (document.getElementById('busiDisc').innerHTML != "Business Discovery Intro") {
            document.getElementById("menuOpts").value = "Discovery Questions";
            document.getElementById("discoveryQuestionTitle").innerHTML = "Business Discovery";
            document.getElementById('engagee').style.display = "none";
            document.getElementById('busiDisc').innerHTML = "Business Discovery Intro";
            document.getElementById('endNote').innerHTML = "Review Business Discovery";

            document.getElementById('mainCategoryDiv').style.background = "white";
            document.getElementById('mainCategoryDiv').style.border = "none";
            document.getElementById('mainCategoryDiv').style.borderRadius = "0px";
            document.getElementById('mainCategory').style.marginTop = "0px";
            document.getElementById('mainCategory').style.width = "100%";
            document.getElementById('mainCategory').style.marginLeft = "0px";
            document.getElementById('showAllAnswer').style.display = "none";

            content = {
                page: "Business Discovery Parts", 
                name: "Initial"
            }
            socket.emit("private message", {
                content
            });
        } else {
            document.getElementById("menuOpts").value = "Business Discovery Intro";
            document.getElementById('businessDisc').style.display = "block";
            document.getElementById('businessDiscParts').style.display = "none";
            content = {
                page: "Business Discovery Intro"
            }
            socket.emit("private message", {
                content
            });
        }
    }
         
    function prinrowMenu0() { document.getElementById("prinmenu0").classList.toggle("show"); }
    function prinrowMenu1() { document.getElementById("prinmenu1").classList.toggle("show"); }
    function prinrowMenu2() { document.getElementById("prinmenu2").classList.toggle("show"); }
    function prinrowMenu3() { document.getElementById("prinmenu3").classList.toggle("show"); }
    function prinrowMenu4() { document.getElementById("prinmenu4").classList.toggle("show"); }
    function prinrowMenu5() { document.getElementById("prinmenu5").classList.toggle("show"); }
                
    function secrowMenu0() { document.getElementById("secmenu0").classList.toggle("show"); }
    function secrowMenu1() { document.getElementById("secmenu1").classList.toggle("show"); }
    function secrowMenu2() { document.getElementById("secmenu2").classList.toggle("show"); }
    function secrowMenu3() { document.getElementById("secmenu3").classList.toggle("show"); }
    function secrowMenu4() { document.getElementById("secmenu4").classList.toggle("show"); }
                
    window.onclick = function(event) {
        if (!event.target.matches('#btnSubMenu')) {
            var dropdowns = document.getElementsByClassName("dropdown-content");
            var i;
            for (i = 0; i < dropdowns.length; i++) {
                var openDropdown = dropdowns[i];
                if (openDropdown.classList.contains('show')) {
                    openDropdown.classList.remove('show');
                }
            }
        }
    }
                
    function deletePartner(i) { 
        var parent = i.parentElement.id;
        var index = i.parentElement.parentElement.parentElement.parentElement.rowIndex;
        var col;
                
        cInd = i.parentElement.parentElement.parentElement.parentElement.rowIndex;
        cPar = i.parentElement.id;
                
        var path = i.parentElement.parentElement.parentElement.parentElement;
        var contactId = path.childNodes[2].childNodes[0].childNodes[2].innerText;
        
        Visualforce.remoting.Manager.invokeAction('GuidedSellingControllerExtension.createUpdatePartner', businessId, contactId, null, null, function(r,e) {
            if(e.status) {
                if(parent.includes("prin")) {
                    col = index - 1;
                    document.getElementById("contTable").deleteRow(index);
                    document.getElementById("addPartTable2").deleteRow(index - 1);
                } else if (parent.includes("sec")) {
                    col = index;
                    document.getElementById("contTable").deleteRow(index + 1);
                    document.getElementById("addPartTable2").deleteRow(index);
                }
                
                var tableLength = document.getElementById("addPartTable2").rows.length;
                
                if(tableLength == 0) {
                    document.getElementById("addPartTable1").style.display = "table";
                    document.getElementById('start').setAttribute("disabled", "disabled");
                    document.getElementById('start').style.opacity = "0.25";
                    partnersGone = true;
                
                } 
                
                if(tableLength == 4) {
                    document.getElementById("btnAdd").style.display = "block";  
                } 
                
                socket.connect();
                content = {
                    page: "Delete Partner", 
                    index: col
                }
                socket.emit("private message", {
                    content
                });
            } else if(e.type === 'exception') {
                alert(e.message);
            }
        });
    }
    
    function editPartner(x) { 
        document.getElementById("modal").style.display = "block";
        
        cInd = x.parentElement.parentElement.parentElement.parentElement.rowIndex;
        cPar = x.parentElement.id;
        
        var path = x.parentElement.parentElement.parentElement.parentElement;
        var name = path.childNodes[1].childNodes[0].childNodes[0].innerText;
        var role = path.childNodes[1].childNodes[0].childNodes[1].innerText;
        var phone = path.childNodes[2].childNodes[0].childNodes[0].innerText;
        var email = path.childNodes[2].childNodes[0].childNodes[1].innerText;
        var contactId = path.childNodes[2].childNodes[0].childNodes[2].innerText;
        
        var theName = name.split(" ");
        
        document.getElementById("firstName").value = theName[0];
        document.getElementById("lastName").value = theName[1];
        document.getElementById("role").value = role;
        document.getElementById("email").value = email;
        document.getElementById("phone").value = phone;
        document.getElementById("contactId").value = contactId;
        
        document.getElementById("btnAddRow").innerHTML = "Save Partner";
    }
    
    function editPrimary(x) { 
        document.getElementById("modal").style.display = "block";
        
        cInd = x.parentElement.parentElement.parentElement.parentElement.rowIndex;
        cPar = x.parentElement.id;
        
        var path = document.querySelector("#prinmenu0 > a:nth-child(1)").parentElement.parentElement.parentElement.parentElement;
        var name = path.childNodes[3].childNodes[1].childNodes[1].innerText;
        var role = path.childNodes[3].childNodes[1].childNodes[3].innerText;
        var phone = path.childNodes[5].childNodes[1].childNodes[1].innerText;
        var email = path.childNodes[5].childNodes[1].childNodes[3].innerText;
        var contactId = path.childNodes[5].childNodes[1].childNodes[5].innerText;
        
        var theName = name.split(" ");
        
        document.getElementById("firstName").value = theName[0];
        document.getElementById("lastName").value = theName[1];
        document.getElementById("role").value = role;
        document.getElementById("email").value = email;
        document.getElementById("phone").value = phone;
        document.getElementById("contactId").value = contactId;
        
        document.getElementById("btnAddRow").innerHTML = "Save Primary Contact";
    }
    
    //document.onclick = hideMenu;
    //document.oncontextmenu = rightClick;
    
    function hideMenu() {
        document.getElementById("contextMenu").style.display = "none";
    }
    
    function rightClick(e) {
        var targetId = event.target.id;
        if (targetId == "script" || targetId == "high") {
            e.preventDefault();
        }
        
        if (document.getElementById("contextMenu").style.display == "block") {
            hideMenu();
        } else {
            var menu = document.getElementById("contextMenu");
            
            menu.style.display = 'block';
            menu.style.left = e.pageX + "px";
            menu.style.top = e.pageY + "px";
        }
    }
    
    function highlight() {
        var selection;
        if(window.getSelection) {
            selection = window.getSelection();
        } else if(typeof document.selection != "undefined") {
            selection = document.selection;
        }
        
        var range = selection.getRangeAt(0);
        if(range && !selection.isCollapsed) {
            if(selection.anchorNode.parentNode.className == "normalTxt") {
                var span = document.createElement('span');
                span.className = 'highlight';
                span.id = 'high';
                range.surroundContents(span);
            } else if(selection.anchorNode.parentNode.className == "highlight" || selection.anchorNode.parentNode.className == "unhighlight") {
                selection.anchorNode.parentNode.className = "highlight";
            }
        }
    }
    
    function unhighlight() {
        var selection;
        if(window.getSelection) {
            selection = window.getSelection();
        } else if(typeof document.selection != "undefined") {
            selection = document.selection;
        }
        
        var range = selection.getRangeAt(0);
        if (range && !selection.isCollapsed) {
            if(selection.anchorNode.parentNode.className == "normalTxt") {
                var span = document.createElement('span');
                span.className = 'unhighlight';
                span.id = 'high';
                range.surroundContents(span);
            } else if(selection.anchorNode.parentNode.className == "highlight" || selection.anchorNode.parentNode.className == "unhighlight") {
                selection.anchorNode.parentNode.className = "unhighlight";
            }
        }
    }
    
    const answeredQuestions = new Map();
    let numRequiredQAnswered = 0;
    var numOptionalQAnswered = 0;
    let scrollAmount = 0;

    //keep track of required/optional questions answered
    function getNextBtn(field) {

        scrollAmount = scrollAmount + 250;
        if('{!requiredFields}'.includes(field)){
            if(undefined == answeredQuestions.get(field)){
                numRequiredQAnswered ++;
                answeredQuestions.set(field, field);
            } 
        } else {
            numOptionalQAnswered++;
        }

        if('{!numRequiredFields}' == numRequiredQAnswered){ 
            document.getElementById('thirdStart').removeAttribute('disabled');
            document.getElementById('thirdStart').style.opacity = "1";
            document.getElementById('errorMessage').style.display = "none";        
        }     

    }

    var beenPastReview = false;  
    
    function whatToDo() {
        console.log('whatToDo');
        // const foreQuali = document.querySelectorAll("[data-product='Foreign Qualification - LLC']");
        // var transactions = $('[data-id="transactions"]').val();

        var endNote = document.getElementById('endNote').innerHTML;
        var environment = "{!environment}";

        if(endNote == 'Review Business Discovery') {
            console.log('reviewBusiDisc(true)');
            reviewBusiDisc(true);
        } else {
            document.getElementById('waitingScreen').style.display = "flex";
            
            var fn = (function(r,e) {
               if(e.status) {
                    beenPastReview = true;      
                    answerMap = new Map(Object.entries(e.result));              
                    CallApexMethod();
                    //updateBackBookkeeping();
                    //processProductData();
                    calculateTaxSavings();  
                    reviewBusiDisc(false);
                    
                    //setTimeout(() => {
                        //updateBackBookkeeping();
                        document.getElementById('waitingScreen').style.display = "none";
                    //});
                    if(billingFreqFromController){
                        calcFinance(billingFreqFromController, true);
                        document.getElementById('payTerms').value = billingFreqFromController;
                    }
                    
               } else if(e.type === 'exception') {
                   alert(e.message);
               } else {
                   alert(e.message);
               }
            });
            console.log(bookkeepingStartDate);
            enableEditButton(false);
            Visualforce.remoting.Manager.invokeAction('GuidedSellingControllerExtension.saveAnswers', answers, businessId, accId, environment, fn);
        }
    }

    function enableEditButton(enable){
        var button = document.querySelectorAll('button#quoteEdit')[0];
        if(enable){
            button.removeAttribute('disabled');
            button.style.border = '1px solid #F15F22';
            button.style.setProperty('background-color','#F15F22');
        } else {
            button.style.border = '1px solid gray';
            button.style.setProperty('background-color','grey');
            button.setAttribute('disabled', 'disabled');
        }        
    }
      
    function reviewBusiDisc(flagReview) {
        if(flagReview == true) {
            document.getElementById("menuOpts").options[4].removeAttribute('disabled'); 
            document.getElementById("menuOpts").value = "Review Business Discovery";
            document.getElementById("discoveryQuestionTitle").innerHTML = "Review Business Discovery";
            document.getElementById('engagee').style.display = "block";
            document.getElementById('busiDisc').innerHTML = "Discovery Questions";
            document.getElementById('businessDiscParts').scrollTop = 0;
            document.getElementById('endNote').innerHTML = "Proper Entity Structuring";
            document.getElementById("mainCategory").value = "Show All Questions";

            document.getElementById('mainCategoryDiv').style.background = "#F7F5F2";
            document.getElementById('mainCategoryDiv').style.border = "1px solid rgba(18, 23, 36, 0.2)";
            document.getElementById('mainCategoryDiv').style.borderRadius = "8px";
            document.getElementById('mainCategory').style.marginTop = "20px";
            document.getElementById('mainCategory').style.width = "92%";
            document.getElementById('mainCategory').style.marginLeft = "20px";
            document.getElementById('showAllAnswer').style.display = "block";
            
            filterQuestions('Show All Questions');
            // var menuList = document.getElementById("menuOpts").options;
            // for (let i = 4; i < menuList.length; i++) {
            //     menuList[i].setAttribute("disabled", "disabled");
            // }

            socket.connect();
            content = {
                page: "Business Discovery Review"
            }
            socket.emit("private message", {
                content
            });
        } else {
                     
            if(isEditQuote){ //skip to Verify Info page
                nextSection(29, 'Verify Information', 'businessDiscParts', 'verifyInformation');
                var quoteEl = document.getElementsByClassName('quote')[0];                
                quoteEl.style.display = "block"; 
                var editEl = document.getElementsByClassName('editPackageButton')[0];
                quoteEl.style.display = "flex"; 
            } else {
                document.getElementById("menuOpts").value = "Proper Entity Structuring";
                document.getElementById('businessDiscParts').style.display = "none";

                if(entitySelected == 'LLC') {
                    document.getElementById('pesForLLC').style.display = "block";
                    document.getElementById('properEstityStrugleLLC').style.display = "block";

                } else if(entitySelected == 'S Corporation') {
                    document.getElementById('pesForSCorp').style.display = "block";
                    document.getElementById('properEstityStrugleSCorp').style.display = "block";

                }
                
                document.getElementById("menuOpts").options[5].removeAttribute('disabled');
                
                var quoteEl = document.getElementsByClassName('quote')[0];                
                quoteEl.style.display = "block"; 
                var editEl = document.getElementsByClassName('editPackageButton')[0];
                quoteEl.style.display = "flex"; 
                console.log(editEl); // editPackageButton
                
                            
                displayTablePlan('currentPlan', document.getElementById("tab2-1"), true);

                socket.connect();

                seenDefaults = true;

                var menuList = document.getElementById("menuOpts").options;
                for (let i = 1; i < menuList.length; i++) {
                    menuList[i].removeAttribute('disabled');
                }

                socket.connect();
                if(entitySelected == 'LLC') {
                    content = {
                        page: "Proper Entity Structuring"
                    }
                    socket.emit("private message", {
                        content
                    });
                } else if(entitySelected == 'S Corporation') {
                    content = {
                        page: "Proper Entity Structuring SCorp"
                    }
                    socket.emit("private message", {
                        content
                    });
                }
            }
            
        }
    }

    function calculateTaxSavings() {
        if(beenPastReview) {
            console.log('calculateTaxSavings');
            var entityType = $('[data-id="entity"]').val();
            var profits = $('[data-id="profit"]').val();
            var startup = $('[data-id="startup"]').val();
            var mileage = $('[data-id="miles"]').val();
            var office = $('[data-id="footage"]').val();
            var filingStatus = $('[data-id="filingStatus"]').val();
            var income = $('[data-id="household"]').val();
            var industryType = $('[data-id="industry"]').val();
            //var numForeignOwners = $('[data-id="foreignowners"]').val();
            var eventId = '{!$CurrentPage.parameters.id}';
            var recordId = '{!$CurrentPage.parameters.recordId}';
            var tempSelectedProducts = JSON.parse('{!selectedProductsJson}');
            var recordId = '{!$CurrentPage.parameters.recordId}';

            Visualforce.remoting.Manager.invokeAction('GuidedSellingControllerExtension.calculateSavingsGuidedSelling', entityType, profits, startup, mileage, office, filingStatus, income, industryType, accId,  function(r,e){
                
                var dataResult = e.result;
                const dataList = dataResult.split(",");

                var ece = parseFloat(dataList[0]);
                var office = parseFloat(dataList[1]);
                var mileage = parseFloat(dataList[2]);
                var qbi = parseFloat(dataList[3]);
                var startup = parseFloat(dataList[4]);
                var final = parseFloat(dataList[5]);

                ece = ece.toFixed(2).replace(/\d(?=(\d{3})+\.)/g, '$&,');
                office = office.toFixed(2).replace(/\d(?=(\d{3})+\.)/g, '$&,');
                mileage = mileage.toFixed(2).replace(/\d(?=(\d{3})+\.)/g, '$&,');
                qbi = qbi.toFixed(2).replace(/\d(?=(\d{3})+\.)/g, '$&,');
                startup = startup.toFixed(2).replace(/\d(?=(\d{3})+\.)/g, '$&,');
                final = final.toFixed(2).replace(/\d(?=(\d{3})+\.)/g, '$&,');
                
                socket.connect();
                content = {
                    savings: final, 
                    ece: ece, 
                    office: office, 
                    mileage: mileage, 
                    qbi: qbi, 
                    startup: startup
                }
                socket.emit("private message", {
                    content
                });
            });

            var months = monthDifference(bookkeepingStartDate);
            var nonProfit = false; //placeholder for account value
            //add in the bookkeeping products
            var transactions = $('[data-id="transactions"]').val();
            var bookkeepingDate = $('[data-id="bookkeepingStart"]').val();



            if((transactions && transactions != '')
            && (bookkeepingDate && bookkeepingDate != '')){
                var backName = nonProfit ? 'Non-Profit Back Bookkeeping' : 'Back Bookkeeping';
                var bookName = nonProfit ? 'Non-Profit Bookkeeping' : 'Dedicated Bookkeeping';
                //var productList = "{bookkeepingProducts}";
                //for(var p of {bookkeepingProducts}){}
                // if(months > 0 && nonProfit){
                //     const nonProfBackBookkQTYList = document.querySelectorAll("[data-product-qty='Non-Profit Back Bookkeeping']");
                //     for (let l = 0; l < nonProfBackBookkQTYList.length; l++) {
                //         nonProfBackBookkQTYList[l].value = months;
                //         calcQuantityChange(nonProfBackBookkQTYList[l], 'Back Bookkeeping')
                //     }
                // } else if (months > 0 && !nonProfit) {
                //     const backBookkQTYList = document.querySelectorAll("[data-product-qty='Back Bookkeeping']");
                //     for (let l = 0; l < backBookkQTYList.length; l++) {
                //         backBookkQTYList[l].value = months;
                //         calcQuantityChange(backBookkQTYList[l], 'Back Bookkeeping')
                //     }
                // }
            } else {
            }

            var productIdToIdentifier = JSON.parse('{!productToIdentifier}');
            const nameMap = new Map(Object.entries(productIdToIdentifier));
                
            // for (let i = 0; i < currentPlan.length; i++) {
            //     var productName = nameMap.get(currentPlan[i]);
            //     productSelected(true, currentPlan[i], productName);
            // } 

            // for (let i = 0; i < tempSelectedProducts.length; i++) {
            //     var productName = nameMap.get(tempSelectedProducts[i].Product.Id);
            //     if(document.getElementById(tempSelectedProducts[i].Product.Id).childNodes.length > 6) {
            //         autoChecks(productName, document.getElementById(tempSelectedProducts[i].Product.Id).childNodes[1].childNodes[1]);
            //     } else {
            //         autoChecks(productName, document.getElementById(tempSelectedProducts[i].Product.Id).childNodes[0].childNodes[0]);
            //     }
            // }
            document.getElementById('startUpAmount').innerHTML = '$' + startup.replace(/\d(?=(\d{3})+\.)/g, '$&,');
        }
    }

    function debugProductLists(){
        console.log('debugProductLists()');
        console.log(tempSelectedProducts);
        console.log('{!selectedProductsJson}');
        return '{!selectedProductsJson}';
    }

    //to-do: update all of this
    function updateBookkeeping(){
        console.log('updateBookkeeping '+bookkeepingStartDate+', '+bookkeepingEndDate);
        // if(useStaticPackage){
        //     console.log('static package; ignoring bookkeeping')
        //     return;
        // }
        var months = 0;
        if(bookkeepingStartDate){
            months = monthDifference(bookkeepingStartDate, bookkeepingEndDate);
        } else {
            console.log('no start date found');
        }
        
        //var nonProfit = false; //placeholder for account value
        var hasTransactions = transactionCount != null;
        //add in the bookkeeping products
        // var transactions = $('[data-id="transactions"]').val();
        // var bookkeepingDate = $('[data-id="bookkeepingStart"]').val();
        enableProduct('Non-Profit Back Bookkeeping', false);
        enableProduct('Back Bookkeeping', false);
        console.log('months: '+months);
        if(hasTransactions && bookkeepingStartDate){ //enable and add products
            if(nonProfit){
                addRemoveProduct(null, true, 'Non-Profit Bookkeeping');
                if(months > 0){
                    calcQuantityChange({value: months}, 'Non-Profit Back Bookkeeping');
                    addRemoveProduct(null, true, 'Non-Profit Back Bookkeeping');
                }
                enableProduct('Non-Profit Bookkeeping', true); //nonprofit bookkeeping
                enableProduct('Dedicated Bookkeeping', false);
            } else {
                addRemoveProduct(null, true, 'Dedicated Bookkeeping');
                if(months > 0){
                    calcQuantityChange({value: months}, 'Back Bookkeeping');
                    addRemoveProduct(null, true, 'Back Bookkeeping');
                }
                enableProduct('Dedicated Bookkeeping', true); //regular bookkeeping
                enableProduct('Non-Profit Bookkeeping', false);
            }
        } else { //disable and remove products
            if(nonProfit){
                addRemoveProduct(null, false, 'Non-Profit Bookkeeping');
                calcQuantityChange(1, 'Non-Profit Back Bookkeeping'); //probably not necessary
                addRemoveProduct(null, false, 'Non-Profit Back Bookkeeping');
                enableProduct('Non-Profit Bookkeeping', false); //nonprofit bookkeeping
                enableProduct('Dedicated Bookkeeping', false);
            } else {
                addRemoveProduct(null, false, 'Dedicated Bookkeeping');
                calcQuantityChange(1, 'Back Bookkeeping'); //probably not necessary
                addRemoveProduct(null, false, 'Back Bookkeeping');
                enableProduct('Dedicated Bookkeeping', false); //regular bookkeeping
                enableProduct('Non-Profit Bookkeeping', false);
            }
        }
        // if(months > 0 && nonProfit){
        //     const nonProfBackBookkQTYList = document.querySelectorAll("[data-product-qty='Non-Profit Back Bookkeeping']");
        //     for (let l = 0; l < nonProfBackBookkQTYList.length; l++) {
        //         nonProfBackBookkQTYList[l].value = months;
        //         calcQuantityChange(nonProfBackBookkQTYList[l], 'Back Bookkeeping', '');
        //     }
        // } else if (months > 0 && !nonProfit) {
        //     const backBookkQTYList = document.querySelectorAll("[data-product-qty='Back Bookkeeping']");
        //     for (let l = 0; l < backBookkQTYList.length; l++) {
        //         backBookkQTYList[l].value = months;
        //         calcQuantityChange(backBookkQTYList[l], 'Back Bookkeeping', '');
        //     }
        // }
        //rerenderProducts();
    }

    function refreshProducts(){
        rerenderProducts();
    }
      
    function populateAnswer(question, answer, picklist, skipSync) {
        var saveQuestion = false;
        var questionNumber = "";

        removeRequiredFieldAnswered(question);
        setYesNoFields(question, answer);

        if(null == textToQuestion.get(question)){
            var saveQuestion = true;
        } else {
            questionNumber = textToQuestion.get(question);
        }
        if (picklist) {
            answer = answer.value;
        } 

        var numRequiredQuestions = parseInt('{!numRequiredFields}') + parseInt(numOptionalQAnswered);

        if(skipSync == true){
        } else {
            socket.connect();
            content = {
                page: "Business Discovery Parts",
                question: questionNumber,
                answer: answer,
                save: saveQuestion,
                questionText: question,
                numRequiredQuestions: numRequiredQuestions
            }
            socket.emit("private message", {
            content
            });
        }       

        
        if(question == 'How many employees do you have?') {
            var num = parseInt(answer);
            num = num + 1;
            // var prodId = document.querySelectorAll("[Class='row Payroll'")[0].Id;
            // calcQuantityChange(num, 'Payroll', prodId);
            // const payrollList = document.querySelectorAll("[data-product-qty='Payroll']");
            // if(num == 51 || num > 51) {
            //     answer = '51+';
            //     for(var i = 0; i < payrollList.length; i++) {
            //         payrollList[i].value = '51';
            //     }
            // } else {
            //     answer = num.toString();
            //     for(var i = 0; i < payrollList.length; i++) {
            //         payrollList[i].value = num.toString();
            //     }
            // }
        } else if (question == 'How many monthly bookkeeping transactions do you have?'){
            transactionCount = answer.toString();
        } else if(question == 'What transaction date should your bookkeeper start on?'){
            bookkeepingStartDate = answer.toString();
            document.querySelector("[data-id='bookkeepingEnd']").min = answer.toString();
        } else if(question == 'What transaction date should your bookkeeper end on?'){
            // if(parseDate(answer.toString()) > new Date()){
            //     bookkeepingEndDate = new Date();
            // } else {
                
            // }
            bookkeepingEndDate = answer.toString();
            
        }

        //filling up the map with the answers 
        if(answers != null && answers != '') {
            answers = answers + '///' + question + '' + answer;
        } else {
            answers = question + '' + answer;
        }
    }

    var formationDate;
    function getDaysSinceFormation(){
        if(formationDate){
            var startDate = parseDate(formationDate).valueOf();
            var today = new Date().valueOf();
            var msDifference = today - startDate;
            return Math.floor(msDifference / (1000*60*60*24));
        } else {
            return null;
        }
    }
    function saveFormationDate(answer){
        console.log('saveFormationDate '+answer);
        if(answer == '' || !answer){
            return;
        }
        formationDate = answer?.value.toString();

        Visualforce.remoting.Manager.invokeAction('GuidedSellingControllerExtension.updateRegistrationDate', '{!opportunity.AccountId}', parseDate(formationDate).toUTCString(), (x) => console.log(x));

        //display the days since formation on relevant pages
        for(var textElement of document.getElementsByClassName('businessFormationAlert')){
                textElement.style.display = 'inline-flex';
        }
        for(var textElement of document.getElementsByClassName('businessFormationAlertText')){
                textElement.innerText = 'The client’s business was formed '+getDaysSinceFormation()+' days ago.';
        }

        //set the text for the boi intro page
        if(parseDate(formationDate).getFullYear() == 2024){
            for(var textElement of document.getElementsByClassName('boiIntro2024Text')){
                textElement.style.display = 'block';
            }
            for(var textElement of document.getElementsByClassName('boiIntro2023Text')){
                textElement.style.display = 'none';
            }
        } else {
            for(var textElement of document.getElementsByClassName('boiIntro2024Text')){
                textElement.style.display = 'none';
            }
            for(var textElement of document.getElementsByClassName('boiIntro2023Text')){
                textElement.style.display = 'block';
            }
        }        

        for(var textElement of document.getElementsByClassName('boiIntroEngageText')){
                textElement.style.display = 'block';
        }

        //set the text for the ece filing page
        if(getDaysSinceFormation() <= 75){
            for(var textElement of document.getElementsByClassName('eceFilingTextDefault')){
                textElement.style.display = 'block';
            }
            for(var textElement of document.getElementsByClassName('eceFilingTextOverdue')){
                textElement.style.display = 'none';
            }
        } else {
            for(var textElement of document.getElementsByClassName('eceFilingTextDefault')){
                textElement.style.display = 'none';
            }
            for(var textElement of document.getElementsByClassName('eceFilingTextOverdue')){
                textElement.style.display = 'block';
            }
        }

        //set the text for the boi summary page
        if(parseDate(formationDate).getFullYear() < 2023 || getDaysSinceFormation() <= 90){
            for(var textElement of document.getElementsByClassName('boiFilingTextDefault')){
                textElement.style.display = 'block';
            }
            for(var textElement of document.getElementsByClassName('boiFilingTextOverdue')){
                textElement.style.display = 'none';
            }
        } else {
            for(var textElement of document.getElementsByClassName('boiFilingTextDefault')){
                textElement.style.display = 'none';
            }
            for(var textElement of document.getElementsByClassName('boiFilingTextOverdue')){
                textElement.style.display = 'block';
            }
        }
    }
            
    function showSlideOne(isVisible) {
        if(isVisible == true) {
            document.getElementById('verticalSectLine1').style.borderLeft = "5px solid #F15F22";
            document.getElementById('currentSlide1').innerHTML = "Current Slide";
            document.getElementById('currentSlide1').style.border = "1px solid #E7EAF0";
            document.getElementById('currentSlide1').style.color = "black";
            document.getElementById('currentSlide1').style.background = "#E7EAF0";
            
        } else if(isVisible == false) {
            document.getElementById('verticalSectLine1').style.borderLeft = "5px solid #FFFFFF";
            document.getElementById('currentSlide1').innerHTML = "Show Slide";
            document.getElementById('currentSlide1').style.border = "1px solid #E7EAF0";
            document.getElementById('currentSlide1').style.color = "#1776B6";
            document.getElementById('currentSlide1').style.background = "white";
        }
    }
            
    function showSlideTwo(isVisible) {
        if(isVisible == true) {
            document.getElementById('verticalSectLine2').style.borderLeft = "5px solid #F15F22";
            document.getElementById('currentSlide2').innerHTML = "Current Slide";
            document.getElementById('currentSlide2').style.border = "1px solid #E7EAF0";
            document.getElementById('currentSlide2').style.color = "black";
            document.getElementById('currentSlide2').style.background = "#E7EAF0";
            
        } else if(isVisible == false) {
            document.getElementById('verticalSectLine2').style.borderLeft = "5px solid #FFFFFF";
            document.getElementById('currentSlide2').innerHTML = "Show Slide";
            document.getElementById('currentSlide2').style.border = "1px solid #E7EAF0";
            document.getElementById('currentSlide2').style.color = "#1776B6";
            document.getElementById('currentSlide2').style.background = "white";
        }
    }
            
    function showSlideThree(isVisible) {
        if(isVisible == true) {
            document.getElementById('verticalSectLine3').style.borderLeft = "5px solid #F15F22";
            document.getElementById('currentSlide3').innerHTML = "Current Slide";
            document.getElementById('currentSlide3').style.border = "1px solid #E7EAF0";
            document.getElementById('currentSlide3').style.color = "black";
            document.getElementById('currentSlide3').style.background = "#E7EAF0";
            
        } else if(isVisible == false) {
            document.getElementById('verticalSectLine3').style.borderLeft = "5px solid #FFFFFF";
            document.getElementById('currentSlide3').innerHTML = '<i class="fas fa-arrow-right">&nbsp;</i>Next Section';
            document.getElementById('currentSlide3').style.border = "1px solid #E7EAF0";
            document.getElementById('currentSlide3').style.color = "#1776B6";
            document.getElementById('currentSlide3').style.background = "white";
        }
    }
            
    function getSlideOne() {
        socket.connect();
        if(entitySelected == 'LLC') {
            content = {
                page: "Self Employment Tax (FICA) LLC"
            }
            socket.emit("private message", {
                content
            });
        } else if(entitySelected == 'S Corporation') {
            content = {
                page: "Self Employment Tax (FICA) S Corp"
            }
            socket.emit("private message", {
                content
            });
        }
        
        document.getElementById('ficaBtns').style.display = "block";
        document.getElementById('verticalSectLine3').style.display = "none";
        document.getElementById('verticalSectLine2').style.display = "none";
        document.getElementById('FICA-Example').style.display = "none";
        document.getElementById('btn-fica').style.display = "none";

        showSlideOne(true);
        showSlideTwo(false);
        showSlideThree(false);
    }
            
    function getSlideTwo() {
        showSlideOne(false);
        showSlideTwo(true);
        showSlideThree(false);
        
        document.getElementById('verticalSectLine2').style.display = "block";
        document.getElementById('verticalSectLine3').style.display = "block";
        document.getElementById('FICA-Example').style.display = "block";
        document.getElementById('btn-fica').style.display = "none";
        document.getElementById('Tax-Savings').style.display = "none";
        document.getElementById('currentSlide3').style.border = "1px solid #F15F22";
        document.getElementById('currentSlide3').style.color = "white";
        document.getElementById('currentSlide3').style.background = "#F15F22";
            
        socket.connect();
            content = {
            page: "(FICA) IRS"
        }
        socket.emit("private message", {
            content
        });
    }
    
    function getSlideThree() {
        showSlideOne(false);
        showSlideTwo(false);
        showSlideThree(true);
        
        document.getElementById('Tax-Savings').style.display = "block";
        document.getElementById('btn-fica').style.display = "block";
        
        scrollToDiv('#additionalFirstName7', '#selfEmploymentTaxLLC', 550);

        socket.connect();
        content = {
            page: "(FICA) Savings structured efficiently"
        }
        socket.emit("private message", {
            content
        });
    }
            
    const questionToText = new Map();
    const textToQuestion = new Map();

    const questionToProduct = new Map();
    const productToQuestion = new Map();

    function hideQuestion(hideBoolean, questionText, dependentFields){

        var questionNumber;
        //If we are showing the question
        if(true == hideBoolean){
            for(var i = 1; i < 31; i++) {
                if(null == questionToText.get(i)){
                    questionNumber = i;
                    questionToText.set(i, questionText);
                    textToQuestion.set(questionText, i);
                    break;
                }
            }

            socket.connect();
            content = {
                page: "Business Discovery Parts",
                hide: "false",
                answer: "",
                question: questionNumber,
                questionText: questionText
            }
            socket.emit("private message", {
                content
            });
        } else {
            var questionNumber = textToQuestion.get(questionText);
            if(!dependentFields){
                questionToText.delete(questionNumber);
                textToQuestion.delete(questionText);
            }
            
            socket.connect();
            content = {
                page: "Business Discovery Parts",
                hide: "true",
                question: questionNumber,
                answer: "",
                questionText: questionText
            }
            socket.emit("private message", {
                content
            });
        }
    }
            
    function validateButtons() {
        var isTrue = document.getElementById('understands').checked;
            
        if (isTrue == true) {
            document.getElementById('medicalbtn').style.opacity = "1";
            document.getElementById('vehiclebtn').style.opacity = "1";
            document.getElementById('officebtn').style.opacity = "1";
            document.getElementById('199Abtn').style.opacity = "1";
            document.getElementById('medicalbtn').removeAttribute('disabled');
            document.getElementById('vehiclebtn').removeAttribute('disabled');
            document.getElementById('officebtn').removeAttribute('disabled');
            document.getElementById('199Abtn').removeAttribute('disabled');
        } else {
            document.getElementById('medicalbtn').style.opacity = "0.25";
            document.getElementById('vehiclebtn').style.opacity = "0.25";
            document.getElementById('officebtn').style.opacity = "0.25";
            document.getElementById('199Abtn').style.opacity = "0.25";
            document.getElementById('medicalbtn').setAttribute('disabled', 'disabled');
            document.getElementById('vehiclebtn').setAttribute('disabled', 'disabled');
            document.getElementById('officebtn').setAttribute('disabled', 'disabled');
            document.getElementById('199Abtn').setAttribute('disabled', 'disabled');
        }
    }
            
    function showDeductBtns() {
        var isTrueMed = document.getElementById('understandsMed').checked;
        var isTrueVeh = document.getElementById('understandsVeh').checked;
        var isTrueOff = document.getElementById('understandsHome').checked;
        var isTrue199A = document.getElementById('understandsCode').checked;
        document.getElementById('vehiclebtnWhite1').style.opacity = "1";
        document.getElementById('officebtnWhite1').style.opacity = "1";
        document.getElementById('199AbtnWhite1').style.opacity = "1";
        document.getElementById('vehiclebtnWhite1').removeAttribute('disabled');
        document.getElementById('officebtnWhite1').removeAttribute('disabled');
        document.getElementById('199AbtnWhite1').removeAttribute('disabled');
        
        if (isTrueMed == true || isTrueVeh == true || isTrueOff == true || isTrue199A == true) {
            document.getElementById('reviewDeductionNext1').style.opacity = "1";
            document.getElementById('reviewDeductionNext1').removeAttribute('disabled');
            document.getElementById('reviewDeductionNext2').style.opacity = "1";
            document.getElementById('reviewDeductionNext2').removeAttribute('disabled');
            document.getElementById('reviewDeductionNext3').style.opacity = "1";
            document.getElementById('reviewDeductionNext3').removeAttribute('disabled');
            document.getElementById('reviewDeductionNext4').style.opacity = "1";
            document.getElementById('reviewDeductionNext4').removeAttribute('disabled');
        } else {
            document.getElementById('reviewDeductionNext1').style.opacity = "0.25";
            document.getElementById('reviewDeductionNext1').setAttribute('disabled', 'disabled');
            document.getElementById('reviewDeductionNext2').style.opacity = "0.25";
            document.getElementById('reviewDeductionNext2').setAttribute('disabled', 'disabled');
            document.getElementById('reviewDeductionNext3').style.opacity = "0.25";
            document.getElementById('reviewDeductionNext3').setAttribute('disabled', 'disabled');
            document.getElementById('reviewDeductionNext4').style.opacity = "0.25";
            document.getElementById('reviewDeductionNext4').setAttribute('disabled', 'disabled');
        }
    }
    
    function showSli1(isVisible) {
        if(isVisible == true) {
            document.getElementById('vertSectLine1').style.borderLeft = "5px solid #F15F22";
            document.getElementById('currtSlide1').innerHTML = "Current Slide";
            document.getElementById('currtSlide1').style.border = "1px solid #E7EAF0";
            document.getElementById('currtSlide1').style.color = "black";
            document.getElementById('currtSlide1').style.background = "#E7EAF0";
            
        } else if(isVisible == false) {
            document.getElementById('vertSectLine1').style.borderLeft = "5px solid #FFFFFF";
            document.getElementById('currtSlide1').innerHTML = '<i class="fas fa-arrow-right">&nbsp;</i>Next Section';
            document.getElementById('currtSlide1').style.border = "1px solid #F15F22;";
            document.getElementById('currtSlide1').style.color = "white";
            document.getElementById('currtSlide1').style.background = "#F15F22";
        } else {
            document.getElementById('vertSectLine1').style.borderLeft = "5px solid #FFFFFF";
            document.getElementById('currtSlide1').innerHTML = "Show Slide";
            document.getElementById('currtSlide1').style.border = "1px solid #E7EAF0";
            document.getElementById('currtSlide1').style.color = "#1776B6";
            document.getElementById('currtSlide1').style.background = "white";
        }
    }
            
    function showSli2(isVisible) {
        if(isVisible == true) {
            document.getElementById('vertSectLine2').style.borderLeft = "5px solid #F15F22";
            document.getElementById('currtSlide2').innerHTML = "Current Slide";
            document.getElementById('currtSlide2').style.border = "1px solid #E7EAF0";
            document.getElementById('currtSlide2').style.color = "black";
            document.getElementById('currtSlide2').style.background = "#E7EAF0";
            
        } else if(isVisible == false) {
            document.getElementById('vertSectLine2').style.borderLeft = "5px solid #FFFFFF";
            document.getElementById('currtSlide2').innerHTML = '<i class="fas fa-arrow-right">&nbsp;</i>Next Section';
            document.getElementById('currtSlide2').style.border = "1px solid #F15F22;";
            document.getElementById('currtSlide2').style.color = "white";
            document.getElementById('currtSlide2').style.background = "#F15F22";
        } else {
            document.getElementById('vertSectLine2').style.borderLeft = "5px solid #FFFFFF";
            document.getElementById('currtSlide2').innerHTML = "Show Slide";
            document.getElementById('currtSlide2').style.border = "1px solid #E7EAF0";
            document.getElementById('currtSlide2').style.color = "#1776B6";
            document.getElementById('currtSlide2').style.background = "white";
        }
    }

    function showSli3(isVisible) {
        if(isVisible == true) {
            document.getElementById('vertSectLine3').style.borderLeft = "5px solid #F15F22";
            document.getElementById('currtSlide3').innerHTML = "Current Slide";
            document.getElementById('currtSlide3').style.border = "1px solid #E7EAF0";
            document.getElementById('currtSlide3').style.color = "black";
            document.getElementById('currtSlide3').style.background = "#E7EAF0";
            
        } else if(isVisible == false) {
            document.getElementById('vertSectLine3').style.borderLeft = "5px solid #FFFFFF";
            document.getElementById('currtSlide3').innerHTML = '<i class="fas fa-arrow-right">&nbsp;</i>Next Section';
            document.getElementById('currtSlide3').style.border = "1px solid #F15F22;";
            document.getElementById('currtSlide3').style.color = "white";
            document.getElementById('currtSlide3').style.background = "#F15F22";
        } else {
            document.getElementById('vertSectLine3').style.borderLeft = "5px solid #FFFFFF";
            document.getElementById('currtSlide3').innerHTML = "Show Slide";
            document.getElementById('currtSlide3').style.border = "1px solid #E7EAF0";
            document.getElementById('currtSlide3').style.color = "#1776B6";
            document.getElementById('currtSlide3').style.background = "white";
        }
    }
    
    function getSecOne() {
        showSli1(true);
        showSli2(false);
        showSli3(false);
                
        document.getElementById('PaperlossFormula').style.display = "none";
        document.getElementById('vertSectLine3').style.display = "none";
        document.getElementById('btn-paperloss').style.display = "none";
                
        socket.connect();
        content = {
            page: "Paperloss"
        }
        socket.emit("private message", {
            content
        });
    }
            
    function getSecTwo() {
        showSli1(null);
        showSli2(true);
        showSli3(false);
        
        document.getElementById('PaperlossFormula').style.display = "block";
        document.getElementById('vertSectLine3').style.display = "block";
        document.getElementById('PaperlossExample').style.display = "none";
        document.getElementById('btn-paperloss').style.display = "none";
        
        scrollToDiv('#vertSectLine3', '#paperloss', 500);

        socket.connect();
        content = {
            page: "Paperloss Formula"
        }
        socket.emit("private message", {
            content
        });
    }
            
    function getSecThree() {
        showSli1(null);
        showSli2(null);
        showSli3(true);
        
        document.getElementById('PaperlossExample').style.display = "block";
        document.getElementById('btn-paperloss').style.display = "block";
        
        var height = window.innerHeight; 
        var menuheight = document.getElementById('menuBody').offsetHeight;
        var scrollValue = height - menuheight;
        if(height > 800) {
            scrollValue = scrollValue - 350;
        } else {
            scrollValue = scrollValue + 500;
        }
        
        scrollToDiv('#vertSectLine3', '#paperloss', scrollValue);

        socket.connect();
        content = {
            page: "Paperloss Example"
        }
        socket.emit("private message", {
            content
        });
    }

    const allIds = [
    "firstBusiness",
    "years",
    "entity",
    "industry",
    "domState",
    "foreignState",
    //"state",
    "startup",
    "revenue",
    "profit",
    //"investor",
    "household",
    //"foreignIncome",
    "transactions",
    "bookkeepingStart",
    "bookkeepingEnd",
    "hasRentals",
    "rental",
    //"k1s",
    "owners",
    //"foreignOwners",
    "runPayroll",
    "hasEmpContractors",
    "employees",
    //"contractors",
    "filingStatus",
    "workingHome",
    "footage",
    "drive",
    "miles",
    //"website"
    ];

    const years = [
    "firstBusiness",
    "years"
    ];

    const entityIndustry = [
    "entity",
    "industry"
    ];

    const state = [
    "domState",
    //"foreignState",
    //"state"
    ];

    const businessIncome = [
    "startup",
    "revenue",
    "profit",
    //"investor"
    ];

    const bookkeeping = [
    "transactions",
    "bookkeepingStart",
    "bookkeepingEnd"
    ];

    const owners = [
    "owners",
    //"foreignOwners"
    ];

    const payroll = [
    "runPayroll",
    "hasEmpContractors",
    "employees",
    //"contractors"
    ];

    const filing = [
    "filingStatus"
    ];

    const personalIncome = [
    "household",
    "hasRentals",
    "rental",
    //"foreignIncome",
    //"k1s"
    ];

    const deductions = [
    "workingHome",
    "footage",
    "drive",
    "miles",
    //"website"
    ];

    const requiredFields = [];
    const requiredUnasweredFields = [];

    function setRequiredUnasweredFields() {

        if('{!requiredFields}'.includes('First Business')) {
            requiredUnasweredFields.push("firstBusiness");
        }
        if('{!requiredFields}'.includes('Years In Business')) {
            requiredUnasweredFields.push("years");
        }
        if('{!requiredFields}'.includes('Entity Type')) {
            requiredUnasweredFields.push("entity");
        }
        if('{!requiredFields}'.includes('Industry Type')) {
            requiredUnasweredFields.push("industry");
        }
        if('{!requiredFields}'.includes('State of Incorporation')) {
            requiredUnasweredFields.push("domState");
        }
        if('{!requiredFields}'.includes('Foreign State')) {
            requiredUnasweredFields.push("foreignState");
        }
        // if('{requiredFields}'.includes('State of Residence')) {
        //     requiredUnasweredFields.push("state");
        // }
        if('{!requiredFields}'.includes('Total Startup Cost')) {
            requiredUnasweredFields.push("startup");
        }
        if('{!requiredFields}'.includes('Projected 1st Year Revenue')) {
            requiredUnasweredFields.push("revenue");
        }
        if('{!requiredFields}'.includes('Projected 1st Year Profit')) {
            requiredUnasweredFields.push("profit");
        }
        // if('{requiredFields}'.includes('Investor Funding')) {
        //     requiredUnasweredFields.push("investor");
        // }
        if('{!requiredFields}'.includes('Number of Transactions')) {
            requiredUnasweredFields.push("transactions");
        }
        if('{!requiredFields}'.includes('Number of Owners')) {
            requiredUnasweredFields.push("owners");
        }
        // if('{requiredFields}'.includes('Foreign Owners')) {
        //     requiredUnasweredFields.push("foreignOwners");
        // }
        if('{!requiredFields}'.includes('Run Payroll Before')) {
            requiredUnasweredFields.push("runPayroll");
        }
        if('{!requiredFields}'.includes('Number of Employees')) {
            requiredUnasweredFields.push("hasEmpContractors");
            requiredUnasweredFields.push("employees");
        }
        // if('{requiredFields}'.includes('Number of Contractors')) {
        //     requiredUnasweredFields.push("contractors");
        // }
        if('{!requiredFields}'.includes('Filing Status')) {
            requiredUnasweredFields.push("filingStatus");
        }
        if('{!requiredFields}'.includes('Personal Income')) {
            requiredUnasweredFields.push("household");
        }
        // if('{requiredFields}'.includes('Foreign Income')) {
        //     requiredUnasweredFields.push("foreignIncome");
        // }
        if('{!requiredFields}'.includes('Number of Rental Properties')) {
            requiredUnasweredFields.push("hasRentals");
            requiredUnasweredFields.push("rental");
        }
        // if('{requiredFields}'.includes('Number of K1s')) {
        //     requiredUnasweredFields.push("k1s");
        // }
        if('{!requiredFields}'.includes('Office Square Footage')) {
            requiredUnasweredFields.push("workingHome");
            requiredUnasweredFields.push("footage");
        }
        if('{!requiredFields}'.includes('Business Miles')) {
            requiredUnasweredFields.push("drive");
            requiredUnasweredFields.push("miles");
        }
        if('{!requiredFields}'.includes('Website Selling Goods')) {
            requiredUnasweredFields.push("website");
        }
    }

    function removeRequiredFieldAnswered(question) {
        var index = 0;

        if('Is this your first business?' == question) {
            index = requiredUnasweredFields.indexOf('firstBusiness');
            if (index > -1) {
                requiredUnasweredFields.splice(index, 1);
            }
        }
        if('How many years have you been in business?' == question) {
            index = requiredUnasweredFields.indexOf('years');
            if (index > -1) {
                requiredUnasweredFields.splice(index, 1);
            }
        }
        if('What entity type is your business?' == question) {
            index = requiredUnasweredFields.indexOf('entity');
            if (index > -1) {
                requiredUnasweredFields.splice(index, 1);
            }
        }
        if('What industry is your business in?' == question) {
            index = requiredUnasweredFields.indexOf('industry');
            if (index > -1) {
                requiredUnasweredFields.splice(index, 1);
            }
        }
        if('What is your state of incorporation?' == question) {
            index = requiredUnasweredFields.indexOf('domState');
            if (index > -1) {
                requiredUnasweredFields.splice(index, 1);
            }
        }
        if('What is your foreign state of incorporation?' == question) {
            index = requiredUnasweredFields.indexOf('foreignState');
            if (index > -1) {
                requiredUnasweredFields.splice(index, 1);
            }
        }
        // if('What is your state of residence?' == question) {
        //     index = requiredUnasweredFields.indexOf('state');
        //     if (index > -1) {
        //         requiredUnasweredFields.splice(index, 1);
        //     }
        // }
        if('How much have you invested so far in start-up costs?' == question) {
            index = requiredUnasweredFields.indexOf('startup');
            if (index > -1) {
                requiredUnasweredFields.splice(index, 1);
            }
        }
        if('What do you anticipate your revenue to be over the next 12 months?' == question) {
            index = requiredUnasweredFields.indexOf('revenue');
            if (index > -1) {
                requiredUnasweredFields.splice(index, 1);
            }
        }
        if('What do you project your 1st year profit to be over the next 12 months?' == question) {
            index = requiredUnasweredFields.indexOf('profit');
            if (index > -1) {
                requiredUnasweredFields.splice(index, 1);
            }
        }
        // if('What is your total investor funding?' == question) {
        //     index = requiredUnasweredFields.indexOf('investor');
        //     if (index > -1) {
        //         requiredUnasweredFields.splice(index, 1);
        //     }
        // }
        if('How many monthly bookkeeping transactions do you have?' == question) {
            index = requiredUnasweredFields.indexOf('transactions');
            if (index > -1) {
                requiredUnasweredFields.splice(index, 1);
            }
        }
        if('How many owners does your business have?' == question) {
            index = requiredUnasweredFields.indexOf('owners');
            if (index > -1) {
                requiredUnasweredFields.splice(index, 1);
            }
        }
        // if('How many owners are outside the USA?' == question) {
        //     index = requiredUnasweredFields.indexOf('foreignOwners');
        //     if (index > -1) {
        //         requiredUnasweredFields.splice(index, 1);
        //     }
        // }
        if('How many employees do you have?' == question) {
            index = requiredUnasweredFields.indexOf('employees');
            if (index > -1) {
                requiredUnasweredFields.splice(index, 1);
            }
        }
        // if('How many contractors do you have?' == question) {
        //     index = requiredUnasweredFields.indexOf('contractors');
        //     if (index > -1) {
        //         requiredUnasweredFields.splice(index, 1);
        //     }
        // }
        if('What is your tax filing status?' == question) {
            index = requiredUnasweredFields.indexOf('filingStatus');
            if (index > -1) {
                requiredUnasweredFields.splice(index, 1);
            }
        }
        if('What was your household W-2 income last year?' == question) {
            index = requiredUnasweredFields.indexOf('household');
            if (index > -1) {
                requiredUnasweredFields.splice(index, 1);
            }
        }
        if('How many rental properties do you have?' == question) {
            index = requiredUnasweredFields.indexOf('rental');
            if (index > -1) {
                requiredUnasweredFields.splice(index, 1);
            }
        }
        // if('How many K-1s are from other investments?' == question) {
        //     index = requiredUnasweredFields.indexOf('k1s');
        //     if (index > -1) {
        //         requiredUnasweredFields.splice(index, 1);
        //     }
        // }
        if('What is the approximate square footage of your home office?' == question) {
            index = requiredUnasweredFields.indexOf('footage');
            if (index > -1) {
                requiredUnasweredFields.splice(index, 1);
            }
        }
        if('How many business-related miles do you estimate you’ll drive per year?' == question) {
            index = requiredUnasweredFields.indexOf('miles');
            if (index > -1) {
                requiredUnasweredFields.splice(index, 1);
            }
        }
        if('Have you run payroll before?' == question) {
            index = requiredUnasweredFields.indexOf('runPayroll');
            if (index > -1) {
                requiredUnasweredFields.splice(index, 1);
            }
        }
        if('Do you currently have any employees?' == question) {
            index = requiredUnasweredFields.indexOf('hasEmpContractors');
            if (index > -1) {
                requiredUnasweredFields.splice(index, 1);
            }
        }
        // if('Do you have any foreign sourced income?' == question) {
        //     index = requiredUnasweredFields.indexOf('foreignIncome');
        //     if (index > -1) {
        //         requiredUnasweredFields.splice(index, 1);
        //     }
        // }
        if('Do you currently have any rental properties?' == question) {
            index = requiredUnasweredFields.indexOf('hasRentals');
            if (index > -1) {
                requiredUnasweredFields.splice(index, 1);
            }
        }
        if('Will you be working from home?' == question) {
            index = requiredUnasweredFields.indexOf('workingHome');
            if (index > -1) {
                requiredUnasweredFields.splice(index, 1);
            }
        }
        if('Will you use your personal vehicle for business purposes?' == question) {
            index = requiredUnasweredFields.indexOf('drive');
            if (index > -1) {
                requiredUnasweredFields.splice(index, 1);
            }
        }
        // if('Will your business have a web or e-commerce presence?' == question) {
        //     index = requiredUnasweredFields.indexOf('website');
        //     if (index > -1) {
        //         requiredUnasweredFields.splice(index, 1);
        //     }
        // }
    }

    //remove questions from required list based on other answers
    function setYesNoFields(question, answer) {

        if('Is this your first business?' == question) {
            index = requiredUnasweredFields.indexOf('firstBusiness');
            if(answer == 'Yes') {
                if (index > -1) {
                    requiredUnasweredFields.splice(index, 1);
                }
            } else {
                requiredFields.push("firstBusiness");
            }
        } else if('Do you currently have any employees?' == question) {
            index = requiredUnasweredFields.indexOf('hasEmpContractors');
            if(answer == 'Yes') {
                if (index > -1) {
                    requiredUnasweredFields.splice(index, 1);
                }
            } else {
                requiredFields.push("hasEmpContractors");
            }
        } else if('Do you currently have any rental properties?' == question) {
            index = requiredUnasweredFields.indexOf('hasRentals');
            if(answer == 'Yes') {
                if (index > -1) {
                    requiredUnasweredFields.splice(index, 1);
                }
            } else {
                requiredFields.push("hasRentals");
            }
        } else if('Will you be working from home?' == question) {
            index = requiredUnasweredFields.indexOf('workingHome');
            if(answer == 'Yes') {
                if (index > -1) {
                    requiredUnasweredFields.splice(index, 1);
                }
            } else {
                requiredFields.push("workingHome");
            }
        } else if('Will you use your personal vehicle for business purposes?' == question) {
            index = requiredUnasweredFields.indexOf('drive');
            if(answer == 'Yes') {
                if (index > -1) {
                    requiredUnasweredFields.splice(index, 1);
                }
            } else {
                requiredFields.push("drive");
            }
        }
    }

    function setRequiredFields() {

        if('{!requiredFields}'.includes('First Business')) {
            requiredFields.push("firstBusiness");
        }
        if('{!requiredFields}'.includes('Years In Business')) {
            requiredFields.push("years");
        }
        if('{!requiredFields}'.includes('Entity Type')) {
            requiredFields.push("entity");
        }
        if('{!requiredFields}'.includes('Industry Type')) {
            requiredFields.push("industry");
        }
        if('{!requiredFields}'.includes('State of Incorporation')) {
            requiredFields.push("domState");
        }
        if('{!requiredFields}'.includes('Foreign State')) {
            requiredFields.push("foreignState");
        }
        // if('{requiredFields}'.includes('State of Residence')) {
        //     requiredFields.push("state");
        // }
        if('{!requiredFields}'.includes('Total Startup Cost')) {
            requiredFields.push("startup");
        }
        if('{!requiredFields}'.includes('Projected 1st Year Revenue')) {
            requiredFields.push("revenue");
        }
        if('{!requiredFields}'.includes('Projected 1st Year Profit')) {
            requiredFields.push("profit");
        }
        // if('{requiredFields}'.includes('Investor Funding')) {
        //     requiredFields.push("investor");
        // }
        if('{!requiredFields}'.includes('Number of Transactions')) {
            requiredFields.push("transactions");
        }
        if('{!requiredFields}'.includes('Number of Owners')) {
            requiredFields.push("owners");
        }
        // if('{requiredFields}'.includes('Foreign Owners')) {
        //     requiredFields.push("foreignOwners");
        // }
        if('{!requiredFields}'.includes('Run Payroll Before')) {
            requiredFields.push("runPayroll");
        }
        if('{!requiredFields}'.includes('Number of Employees')) {
            requiredFields.push("hasEmpContractors");
            requiredFields.push("employees");
        }
        // if('{requiredFields}'.includes('Number of Contractors')) {
        //     requiredFields.push("contractors");
        // }
        if('{!requiredFields}'.includes('Filing Status')) {
            requiredFields.push("filingStatus");
        }
        if('{!requiredFields}'.includes('Personal Income')) {
            requiredFields.push("household");
        }
        // if('{requiredFields}'.includes('Foreign Income')) {
        //     requiredFields.push("foreignIncome");
        // }
        if('{!requiredFields}'.includes('Number of Rental Properties')) {
            requiredFields.push("hasRentals");
            requiredFields.push("rental");
        }
        // if('{requiredFields}'.includes('Number of K1s')) {
        //     requiredFields.push("k1s");
        // }
        if('{!requiredFields}'.includes('Office Square Footage')) {
            requiredFields.push("workingHome");
            requiredFields.push("footage");
        }
        if('{!requiredFields}'.includes('Business Miles')) {
            requiredFields.push("drive");
            requiredFields.push("miles");
        }
        if('{!requiredFields}'.includes('Website Selling Goods')) {
            requiredFields.push("website");
        }

        setYesNoFields();
    }

    function filterQuestions(value) {

        setRequiredFields();

        if('Show All Questions' == value) {
            for (let i = 0; i < allIds.length; i++) {
                document.getElementById(allIds[i]).style.display = "";
            }
        } else if('Years' == value) {
            for (let i = 0; i < allIds.length; i++) {
                if(!years.includes(allIds[i])) {
                    document.getElementById(allIds[i]).style.display = "none";
                } else {
                    for(let j = 0; j < years.length; j++) {
                        document.getElementById(years[j]).style.display = ""; 
                    }
                }
            }
        } else if('Entity & Industry' == value) {
            for (let i = 0; i < allIds.length; i++) {
                if(!entityIndustry.includes(allIds[i])) {
                    document.getElementById(allIds[i]).style.display = "none";
                } else {
                    for(let j = 0; j < entityIndustry.length; j++) {
                        document.getElementById(entityIndustry[j]).style.display = ""; 
                    }
                }
            }
        } else if('State' == value) {
            for (let i = 0; i < allIds.length; i++) {
                if(!state.includes(allIds[i])) {
                    document.getElementById(allIds[i]).style.display = "none";
                } else {
                    for(let j = 0; j < state.length; j++) {
                        document.getElementById(state[j]).style.display = ""; 
                    }
                }
            }
        }  else if('Business Income' == value) {
            for (let i = 0; i < allIds.length; i++) {
                if(!businessIncome.includes(allIds[i])) {
                    document.getElementById(allIds[i]).style.display = "none";
                } else {
                    for(let j = 0; j < businessIncome.length; j++) {
                        document.getElementById(businessIncome[j]).style.display = ""; 
                    }
                }
            }
        } else if('Bookkeeping' == value) {
            for (let i = 0; i < allIds.length; i++) {
                if(!bookkeeping.includes(allIds[i])) {
                    document.getElementById(allIds[i]).style.display = "none";
                } else {
                    for(let j = 0; j < bookkeeping.length; j++) {
                        document.getElementById(bookkeeping[j]).style.display = ""; 
                    }
                }
            }
        } else if('Owners' == value) {
            for (let i = 0; i < allIds.length; i++) {
                if(!owners.includes(allIds[i])) {
                    document.getElementById(allIds[i]).style.display = "none";
                } else {
                    for(let j = 0; j < owners.length; j++) {
                        document.getElementById(owners[j]).style.display = ""; 
                    }
                }
            }
        } else if('Payroll' == value) {
            for (let i = 0; i < allIds.length; i++) {
                if(!payroll.includes(allIds[i])) {
                    document.getElementById(allIds[i]).style.display = "none";
                } else {
                    for(let j = 0; j < payroll.length; j++) {
                        document.getElementById(payroll[j]).style.display = ""; 
                    }
                }
            }
        } else if('Filing' == value) {
            for (let i = 0; i < allIds.length; i++) {
                if(!filing.includes(allIds[i])) {
                    document.getElementById(allIds[i]).style.display = "none";
                } else {
                    for(let j = 0; j < filing.length; j++) {
                        document.getElementById(filing[j]).style.display = ""; 
                    }
                }
            }
        } else if('Personal Income' == value) {
            for (let i = 0; i < allIds.length; i++) {
                if(!personalIncome.includes(allIds[i])) {
                    document.getElementById(allIds[i]).style.display = "none";
                } else {
                    for(let j = 0; j < personalIncome.length; j++) {
                        document.getElementById(personalIncome[j]).style.display = ""; 
                    }
                }
            }
        } else if('Deductions' == value) {
            for (let i = 0; i < allIds.length; i++) {
                if(!deductions.includes(allIds[i])) {
                    document.getElementById(allIds[i]).style.display = "none";
                } else {
                    for(let j = 0; j < deductions.length; j++) {
                        document.getElementById(deductions[j]).style.display = ""; 
                    }
                }
            }
        } else if('Unanswered Required Questions' == value) {
            for (let i = 0; i < allIds.length; i++) {
                if(!requiredUnasweredFields.includes(allIds[i])) {
                    document.getElementById(allIds[i]).style.display = "none";
                } else {
                    for(let j = 0; j < requiredUnasweredFields.length; j++) {
                        document.getElementById(requiredUnasweredFields[j]).style.display = ""; 
                    }
                }
            }
        } else if('Required Questions' == value) {
            for (let i = 0; i < allIds.length; i++) {
                if(!requiredFields.includes(allIds[i])) {
                    document.getElementById(allIds[i]).style.display = "none";
                } else {
                    for(let j = 0; j < requiredFields.length; j++) {
                        document.getElementById(requiredFields[j]).style.display = ""; 
                    }
                }
            }
        }
    }

    function linkedFields(value){
        switch (value) {
            case 'Employees and Contractors':
            var employees = $('[data-id="employees"]').val();
            //var contractors = $('[data-id="contractors"]').val();


            if("white" != document.getElementById('yesBtn1.3').style.color){
                if(0 != employees){
                    YesDecision(1.3);
                    populateAnswer('Do you currently have any employees?', 'Yes', false);
                }
            }
            break;

            case 'Number of Rental Properties':
            var rental = $('[data-id="rental"]').val();

            if("white" != document.getElementById('yesBtn1.7').style.color){
                if(0 != rental){
                    YesDecision(1.6);
                    populateAnswer('Do you currently have any rental properties?', 'Yes', false);
                }
            }
            break;
            case 'Working from Home':
            var footage = $('[data-id="footage"]').val();

            if("white" != document.getElementById('yesBtn1.7').style.color){
                if(0 != footage){
                    YesDecision(1.7);
                    populateAnswer('Will you be working from home?', 'Yes', false);
                }
            }
            break;
            case 'Driving':
            var footage = $('[data-id="miles"]').val();

            if("white" != document.getElementById('yesBtn1.8').style.color){
                if(0 != footage){
                    YesDecision(1.8);
                    populateAnswer('Will you use your personal vehicle for business purposes?', 'Yes', false);
                }
            }
            break;
        }
    }

    function linkedYesNo(fieldSet){
        switch (fieldSet) {
            case 'Employees and Contractors':
            //If there are not employees or contractors
            if("white" != document.getElementById('yesBtn1.3').style.color){
                $('[data-id="employees"]').val('0');
                $('[data-id="employees"]').parent().parent().children().find("spam").css("color", "rgba(18, 23, 36, 0.65)");
                populateAnswer('How many employees do you have?', '0', false);
                // $('[data-id="contractors"]').val('0');
                // $('[data-id="contractors"]').parent().parent().children().find("spam").css("color", "rgba(18, 23, 36, 0.65)");
                // populateAnswer('How many contractors do you have?', '0', false);
            } else {
                $('[data-id="employees"]').parent().parent().children().find("spam").css("color", "#F15F22");
                //$('[data-id="contractors"]').parent().parent().children().find("spam").css("color", "#F15F22");
            }
            break;
            case 'Number of Rental Properties':
            if("white" != document.getElementById('yesBtn1.6').style.color){
                $('[data-id="rental"]').val('0');
                $('[data-id="rental"]').parent().parent().children().find("spam").css("color", "rgba(18, 23, 36, 0.65)");
                populateAnswer('How many rental properties do you have?', '0', false);
            } else {
                $('[data-id="rental"]').parent().parent().children().find("spam").css("color", "#F15F22");
            }
            break;
            case 'Working from Home':
            if("white" != document.getElementById('yesBtn1.7').style.color){
                $('[data-id="footage"]').val('0');
                $('[data-id="footage"]').parent().parent().children().find("spam").css("color", "rgba(18, 23, 36, 0.65)");
                populateAnswer('What is the approximate square footage of your home office?', '0', false);
            } else {
                $('[data-id="footage"]').parent().parent().children().find("spam").css("color", "#F15F22");
            }
            break;
            case 'Driving':
            if("white" != document.getElementById('yesBtn1.8').style.color){
                $('[data-id="miles"]').val('0');
                $('[data-id="miles"]').parent().parent().children().find("spam").css("color", "rgba(18, 23, 36, 0.65)");
                populateAnswer('How many business-related miles do you estimate you’ll drive per year?', '0', false);
            } else {
                $('[data-id="miles"]').parent().parent().children().find("spam").css("color", "#F15F22");
            }
            break;

            //Take dependent questions off the client form
        }
    }
          
    function accordionFunct(accbtn, question) {
        accbtn.classList.toggle("active");
        var panel = accbtn.nextElementSibling;
        if (panel.style.display === "block") {
            panel.style.display = "none";
            document.getElementById("lessArrow"+question).style.display = "none";
            document.getElementById("moreArrow"+question).style.display = "block";
        } else {
            panel.style.display = "block";
            document.getElementById("lessArrow"+question).style.display = "block";
            document.getElementById("moreArrow"+question).style.display = "none";
        }
    }
            
    function activateNext() {
        var authorizes = document.getElementById("authorizes").checked;
        
        if(authorizes == true) {
            document.getElementById('nextPayment').removeAttribute('disabled');
            document.getElementById('nextPayment').style.opacity = "1";
        } else {
            document.getElementById('nextPayment').setAttribute('disabled', 'disabled');
            document.getElementById('nextPayment').style.opacity = "0.25";
        }
    }
            
    function showOne(isVisible) {
        if(isVisible == true) {
            document.getElementById('verticaltLine1').style.borderLeft = "5px solid #F15F22";
            document.getElementById('currSlide1').innerHTML = "Current Slide";
            document.getElementById('currSlide1').style.border = "1px solid #E7EAF0";
            document.getElementById('currSlide1').style.color = "black";
            document.getElementById('currSlide1').style.background = "#E7EAF0";
            
        } else if(isVisible == false) {
            document.getElementById('verticaltLine1').style.borderLeft = "5px solid #FFFFFF";
            document.getElementById('currSlide1').innerHTML = "Show Slide";
            document.getElementById('currSlide1').style.border = "1px solid #E7EAF0";
            document.getElementById('currSlide1').style.color = "#1776B6";
            document.getElementById('currSlide1').style.background = "white";
        }
    }
            
    function showTwo(isVisible) {
        if(isVisible == true) {
            document.getElementById('verticaltLine2').style.borderLeft = "5px solid #F15F22";
            document.getElementById('currSlide2').innerHTML = "Current Slide";
            document.getElementById('currSlide2').style.border = "1px solid #E7EAF0";
            document.getElementById('currSlide2').style.color = "black";
            document.getElementById('currSlide2').style.background = "#E7EAF0";
            
        } else if(isVisible == false) {
            document.getElementById('verticaltLine2').style.borderLeft = "5px solid #FFFFFF";
            document.getElementById('currSlide2').innerHTML = "Show Slide";
            document.getElementById('currSlide2').style.border = "1px solid #E7EAF0";
            document.getElementById('currSlide2').style.color = "#1776B6";
            document.getElementById('currSlide2').style.background = "white";
        }
    }

    function showThree(isVisible) {
        if(isVisible == true) {
            document.getElementById('verticaltLine3').style.borderLeft = "5px solid #F15F22";
            document.getElementById('currSlide3').innerHTML = "Current Slide";
            document.getElementById('currSlide3').style.border = "1px solid #E7EAF0";
            document.getElementById('currSlide3').style.color = "black";
            document.getElementById('currSlide3').style.background = "#E7EAF0";
            
        } else if(isVisible == false) {
            document.getElementById('verticaltLine3').style.borderLeft = "5px solid #FFFFFF";
            document.getElementById('currSlide3').innerHTML = "Show Slide";
            document.getElementById('currSlide3').style.border = "1px solid #E7EAF0";
            document.getElementById('currSlide3').style.color = "#1776B6";
            document.getElementById('currSlide3').style.background = "white";
        }
    }
    
    function getOne() {
        showOne(true);
        showTwo(false);
        showThree(false);
                
        document.getElementById('accessAccount').style.display = "none";
        document.getElementById('verticaltLine3').style.display = "none";
        document.getElementById('btn-post').style.display = "none";
    }
            
    function getTwo() {
        showOne(false);
        showTwo(true);
        showThree(false);
        
        document.getElementById('accessAccount').style.display = "block";
        document.getElementById('verticaltLine3').style.display = "block";
        document.getElementById('expFeedback').style.display = "none";
    }
            
    function getThree() {
        showOne(false);
        showTwo(false);
        showThree(true);
        
        document.getElementById('expFeedback').style.display = "block";
        document.getElementById('btn-post').style.display = "block";
    }
    
    function cleanBtnSeleccion() {
        document.getElementById('tab2-1label').style.color = "#121724";
        document.getElementById('tab2-1label').style.background = "#FFFFFF";
        document.getElementById('tab2-2label').style.color = "#121724";
        document.getElementById('tab2-2label').style.background = "#FFFFFF";
        document.getElementById('tab2-3label').style.color = "#121724";
        document.getElementById('tab2-3label').style.background = "#FFFFFF";
        document.getElementById('tab2-4label').style.color = "#121724";
        document.getElementById('tab2-4label').style.background = "#FFFFFF";
        document.getElementById('tab2-5label').style.color = "#121724";
        document.getElementById('tab2-5label').style.background = "#FFFFFF";
        document.getElementById('tab2-6label').style.color = "#121724";
        document.getElementById('tab2-6label').style.background = "#FFFFFF";
        document.getElementById('tab2-7label').style.color = "#121724";
        document.getElementById('tab2-7label').style.background = "#FFFFFF";
        document.getElementById('tab2-8label').style.color = "#121724";
        document.getElementById('tab2-8label').style.background = "#FFFFFF";
    }        
            
    function hideTables() {
        document.getElementById("entityFormationPlan").style.display = "none";
        document.getElementById("bookkeepingPlan").style.display = "none";
        document.getElementById("payrollPlan").style.display = "none";
        document.getElementById("personalPlan").style.display = "none";
        document.getElementById("businessPlan").style.display = "none";
        document.getElementById("frequentPlan").style.display = "none";
        document.getElementById("AllPlan").style.display = "none";
        document.getElementById("currentPlan").style.display = "none";
    }
           
    function resizeTables(size) {
        document.getElementById("entityFormationPlan").style.height = size + "px";
        document.getElementById("bookkeepingPlan").style.height = size + "px";
        document.getElementById("payrollPlan").style.height = size + "px";
        document.getElementById("personalPlan").style.height = size + "px";
        document.getElementById("businessPlan").style.height = size + "px";
        document.getElementById("frequentPlan").style.height = size + "px";
        document.getElementById("AllPlan").style.height = size + "px";
        document.getElementById("currentPlan").style.height = size + "px";
    }
            
    function displayTablePlan(tableName, tabSelect, isFirst) {
        console.log('displayTablePlan '+tableName+' '+tabSelect.id+' '+tabSelect.checked+' '+isFirst);
        var tabSelected = tabSelect.checked;

        cleanBtnSeleccion(); //styling
        document.getElementById(tabSelect.id+'label').style.color = "#FFFFFF";
        document.getElementById(tabSelect.id+'label').style.background = "#75777A";
        
        document.getElementById("modalBodyTitleTable").style.display = "none"; //product search bar
        resizeTables(341); //styling
                
        if (tabSelected == true || isFirst == true) {
            hideTables(); //styling
            document.getElementById(tableName).style.display = "block";
            if(tableName == "AllPlan") {
                searchProds('all'); //styling
                document.getElementById("modalBodyTitleTable").style.display = "block"; //product search bar
                resizeTables(291); //styling
            }
        }

        var frecuencyBtnList = document.getElementsByClassName('radiobtn');
        
        for(var i = 0; i < frecuencyBtnList.length; i++) {
            
            if(frecuencyBtnList[i].value == 'true') {
                frecuencyBtnList[i].checked = true;
            } else {
                frecuencyBtnList[i].checked = false;
            }

            if(frecuencyBtnList[i].tagName == 'OUTPUT') {
                var btnsList = document.getElementsByClassName(frecuencyBtnList[i].id+'label');
                for(var j = 0; j < btnsList.length; j++) {
                    btnsList[j].style.opacity = "0.55";
                    btnsList[j].style.cursor = "not-allowed";
                    if(frecuencyBtnList[i].value == 'true') {
                        btnsList[j].style.background = "rgba(23, 118, 182, 0.16)";
                        btnsList[j].style.color = "rgba(18, 23, 36, 0.91)"
                    }
                }
            }
        }
    }
            
    function getSecOnefeat() {
        showFeatureSlides('vertLine1features', 'currtSlide1features', true);
        showFeatureSlides('vertLine2features', 'currtSlide2features', false);
        showFeatureSlides('vertLine3features', 'currtSlide3features', false);
                
        document.getElementById('otherCPAs').style.display = "none";
        document.getElementById('vertLine3features').style.display = "none";
        document.getElementById('btn-features').style.display = "none";
        
        socket.connect();
        content = {
            page: "1-800Accountant Introduction Part 1"
        }
        socket.emit("private message", {
            content
        });
    }
            
    function getSecTwofeat() {
        showFeatureSlides('vertLine1features', 'currtSlide1features', null);
        showFeatureSlides('vertLine2features', 'currtSlide2features', true);
        showFeatureSlides('vertLine3features', 'currtSlide3features', false);
                
        document.getElementById('otherCPAs').style.display = "block";
        document.getElementById('vertLine3features').style.display = "block";
        document.getElementById('different').style.display = "none";
            
        scrollToDiv('#vertLine3features', '#features', 500);

        socket.connect();
        content = {
            page: "1-800Accountant Introduction Part 2"
        }
        socket.emit("private message", {
            content
        });
    }
            
    function getSecThreefeat() {
        showFeatureSlides('vertLine1features', 'currtSlide1features', null);
        showFeatureSlides('vertLine2features', 'currtSlide2features', null);
        showFeatureSlides('vertLine3features', 'currtSlide3features', true);
                
        document.getElementById('different').style.display = "block";
        document.getElementById('btn-features').style.display = "block";
        
        scrollToDiv('#btn-features', '#features', 500);

        socket.connect();
        content = {
            page: "1-800Accountant Introduction Part 3"
        }
        socket.emit("private message", {
            content
        });
    }

    function showFeatureSlides(vertName, currentName, isVisible) {
        if(isVisible == true) {
            document.getElementById(vertName).style.borderLeft = "5px solid #F15F22";
            document.getElementById(currentName).innerHTML = "Current Slide";
            document.getElementById(currentName).style.border = "1px solid #E7EAF0";
            document.getElementById(currentName).style.color = "black";
            document.getElementById(currentName).style.background = "#E7EAF0";
            
        } else if(isVisible == false) {
            document.getElementById(vertName).style.borderLeft = "5px solid #FFFFFF";
            document.getElementById(currentName).innerHTML = '<i class="fas fa-arrow-right">&nbsp;</i>Next Section';
            document.getElementById(currentName).style.border = "1px solid #F15F22;";
            document.getElementById(currentName).style.color = "white";
            document.getElementById(currentName).style.background = "#F15F22";
        } else {
            document.getElementById(vertName).style.borderLeft = "5px solid #FFFFFF";
            document.getElementById(currentName).innerHTML = "Show Slide";
            document.getElementById(currentName).style.border = "1px solid #E7EAF0";
            document.getElementById(currentName).style.color = "#1776B6";
            document.getElementById(currentName).style.background = "white";
        }
    }
            
    function getSectionsPortal(sect) {
        showFeatureSlides('vertLine1portalTour', 'currtSlide1portalTour', false);
        showFeatureSlides('vertLine2portalTour', 'currtSlide2portalTour', false);
        showFeatureSlides('vertLine3portalTour', 'currtSlide3portalTour', false);
        showFeatureSlides('vertLine4portalTour', 'currtSlide4portalTour', false);
        showFeatureSlides('vertLine5portalTour', 'currtSlide5portalTour', false);
        showFeatureSlides('vertLine6portalTour', 'currtSlide6portalTour', false);
        showFeatureSlides('vertLine7portalTour', 'currtSlide7portalTour', false);
        showFeatureSlides('vertLine8portalTour', 'currtSlide8portalTour', false);
        showFeatureSlides('vertLine9portalTour', 'currtSlide9portalTour', false);
        
        var pageToGo; 
        
        if(sect == 'Intro') {
            showFeatureSlides('vertLine1portalTour', 'currtSlide1portalTour', true);
            document.getElementById('scheduler').style.display = "none";
            document.getElementById('vertLine3portalTour').style.display = "none";
            document.getElementById('vertLine4portalTour').style.display = "none";
            document.getElementById('vertLine5portalTour').style.display = "none";
            document.getElementById('vertLine6portalTour').style.display = "none";
            document.getElementById('vertLine7portalTour').style.display = "none";
            document.getElementById('vertLine8portalTour').style.display = "none";
            document.getElementById('vertLine9portalTour').style.display = "none";
            document.getElementById('btn-portalTour').style.display = "none";
            pageToGo = "Features - 1-800Accountant Portal";
        } 
        if(sect == 'Scheduler') {
            document.getElementById("menuOpts").options[17].removeAttribute('disabled'); 
            document.getElementById("menuOpts").value = "Features - Appointment Scheduler";
            showFeatureSlides('vertLine1portalTour', 'currtSlide1portalTour', null);
            showFeatureSlides('vertLine2portalTour', 'currtSlide2portalTour', true);
            document.getElementById('scheduler').style.display = "block";
            document.getElementById('vertLine3portalTour').style.display = "block";
            document.getElementById('messageCenter').style.display = "none";
            pageToGo = "Features - Appointment Scheduler";
            scrollToDiv('#vertLine3portalTour', '#portalTour', 500);
        } 
        if(sect == 'Message') {
            document.getElementById("menuOpts").options[18].removeAttribute('disabled'); 
            document.getElementById("menuOpts").value = "Features - Message Center";
            showFeatureSlides('vertLine1portalTour', 'currtSlide1portalTour', null);
            showFeatureSlides('vertLine2portalTour', 'currtSlide2portalTour', null);
            showFeatureSlides('vertLine3portalTour', 'currtSlide3portalTour', true);
            document.getElementById('messageCenter').style.display = "block";
            document.getElementById('vertLine4portalTour').style.display = "block";
            document.getElementById('taxPlanner').style.display = "none";
            pageToGo = "Features - Message Center";
            scrollToDiv('#vertLine4portalTour', '#portalTour', 500);
        } 
        if(sect == 'Tax') {
            document.getElementById("menuOpts").options[19].removeAttribute('disabled'); 
            document.getElementById("menuOpts").value = "Features - Tax Planner";
            showFeatureSlides('vertLine1portalTour', 'currtSlide1portalTour', null);
            showFeatureSlides('vertLine2portalTour', 'currtSlide2portalTour', null);
            showFeatureSlides('vertLine3portalTour', 'currtSlide3portalTour', null);
            showFeatureSlides('vertLine4portalTour', 'currtSlide4portalTour', true);
            document.getElementById('taxPlanner').style.display = "block";
            document.getElementById('vertLine5portalTour').style.display = "block";
            document.getElementById('featBookkeeping').style.display = "none";
            pageToGo = "Features - Tax Planner";
            scrollToDiv('#vertLine5portalTour', '#portalTour', 500);
        } 
        if(sect == 'Bookkeeping') {
            document.getElementById("menuOpts").options[20].removeAttribute('disabled'); 
            document.getElementById("menuOpts").value = "Features - Bookkeeping";
            showFeatureSlides('vertLine1portalTour', 'currtSlide1portalTour', null);
            showFeatureSlides('vertLine2portalTour', 'currtSlide2portalTour', null);
            showFeatureSlides('vertLine3portalTour', 'currtSlide3portalTour', null);
            showFeatureSlides('vertLine4portalTour', 'currtSlide4portalTour', null);
            showFeatureSlides('vertLine5portalTour', 'currtSlide5portalTour', true);
            document.getElementById('featBookkeeping').style.display = "block";
            document.getElementById('vertLine6portalTour').style.display = "block";
            document.getElementById('DocumentCenter').style.display = "none";
            pageToGo = "Features - Bookkeeping";
            scrollToDiv('#vertLine6portalTour', '#portalTour', 500);
        } 
        if(sect == 'Document') {
            document.getElementById("menuOpts").options[21].removeAttribute('disabled'); 
            document.getElementById("menuOpts").value = "Features - Document Center";
            showFeatureSlides('vertLine1portalTour', 'currtSlide1portalTour', null);
            showFeatureSlides('vertLine2portalTour', 'currtSlide2portalTour', null);
            showFeatureSlides('vertLine3portalTour', 'currtSlide3portalTour', null);
            showFeatureSlides('vertLine4portalTour', 'currtSlide4portalTour', null);
            showFeatureSlides('vertLine5portalTour', 'currtSlide5portalTour', null);
            showFeatureSlides('vertLine6portalTour', 'currtSlide6portalTour', true);
            document.getElementById('DocumentCenter').style.display = "block";
            document.getElementById('vertLine7portalTour').style.display = "block";
            document.getElementById('featInvoices').style.display = "none";
            pageToGo = "Features - Document Center";
            scrollToDiv('#vertLine7portalTour', '#portalTour', 900);
        } 
        if(sect == 'Invoices') {
            document.getElementById("menuOpts").options[22].removeAttribute('disabled'); 
            document.getElementById("menuOpts").value = "Features - Invoices";
            showFeatureSlides('vertLine1portalTour', 'currtSlide1portalTour', null);
            showFeatureSlides('vertLine2portalTour', 'currtSlide2portalTour', null);
            showFeatureSlides('vertLine3portalTour', 'currtSlide3portalTour', null);
            showFeatureSlides('vertLine4portalTour', 'currtSlide4portalTour', null);
            showFeatureSlides('vertLine5portalTour', 'currtSlide5portalTour', null);
            showFeatureSlides('vertLine6portalTour', 'currtSlide6portalTour', null);
            showFeatureSlides('vertLine7portalTour', 'currtSlide7portalTour', true);
            document.getElementById('featInvoices').style.display = "block";
            document.getElementById('vertLine8portalTour').style.display = "block";
            document.getElementById('mobileApp').style.display = "none";
            pageToGo = "Features - Invoices";
            scrollToDiv('#vertLine8portalTour', '#portalTour', 1300);
        } 
        if(sect == 'Mobile') {
            document.getElementById("menuOpts").options[23].removeAttribute('disabled'); 
            document.getElementById("menuOpts").value = "Features - Mobile App";
            showFeatureSlides('vertLine1portalTour', 'currtSlide1portalTour', null);
            showFeatureSlides('vertLine2portalTour', 'currtSlide2portalTour', null);
            showFeatureSlides('vertLine3portalTour', 'currtSlide3portalTour', null);
            showFeatureSlides('vertLine4portalTour', 'currtSlide4portalTour', null);
            showFeatureSlides('vertLine5portalTour', 'currtSlide5portalTour', null);
            showFeatureSlides('vertLine6portalTour', 'currtSlide6portalTour', null);
            showFeatureSlides('vertLine7portalTour', 'currtSlide7portalTour', null);
            showFeatureSlides('vertLine8portalTour', 'currtSlide8portalTour', true);
            document.getElementById('mobileApp').style.display = "block";
            document.getElementById('vertLine9portalTour').style.display = "block";
            document.getElementById('summary').style.display = "none";
            pageToGo = "Features - Mobile App";
            scrollToDiv('#vertLine9portalTour', '#portalTour', 1700);
        } 
        if(sect == 'Summary') {
            document.getElementById("menuOpts").options[24].removeAttribute('disabled'); 
            document.getElementById("menuOpts").value = "Features - Summary";
            showFeatureSlides('vertLine1portalTour', 'currtSlide1portalTour', null);
            showFeatureSlides('vertLine2portalTour', 'currtSlide2portalTour', null);
            showFeatureSlides('vertLine3portalTour', 'currtSlide3portalTour', null);
            showFeatureSlides('vertLine4portalTour', 'currtSlide4portalTour', null);
            showFeatureSlides('vertLine5portalTour', 'currtSlide5portalTour', null);
            showFeatureSlides('vertLine6portalTour', 'currtSlide6portalTour', null);
            showFeatureSlides('vertLine7portalTour', 'currtSlide7portalTour', null);
            showFeatureSlides('vertLine8portalTour', 'currtSlide8portalTour', null);
            showFeatureSlides('vertLine9portalTour', 'currtSlide9portalTour', true);
            document.getElementById('summary').style.display = "block";
            document.getElementById('btn-portalTour').style.display = "block";
            pageToGo = "Features - Summary";
            scrollToDiv('#btn-portalTour', '#portalTour', 2200);
        } 

        socket.connect();
        content = {
            page: pageToGo
        }
        socket.emit("private message", {
            content
        });
    }
            
    function checkAll(thisObj) {
        var tab = thisObj.id.substring(7);
        var productsToCheck = new Array();
        switch(tab){
            case 'currentPlan':
                productsToCheck = tempSelectedProducts;
                break;
            case 'AllPlan':
                productsToCheck = finalProducts;
                break;
            case 'frequentPlan':
                productsToCheck = frequentProducts;
                break;
            case 'businessPlan':
                productsToCheck = businessProducts;
                break;
            case 'personalPlan':
                productsToCheck = personalProducts;
                break;
            case 'payrollPlan':
                productsToCheck = payrollProducts;
                break;
            case 'bookkeepingPlan':
                productsToCheck = bookkeepingProducts;
                break;
            case 'entityFormationPlan':
                productsToCheck = entityFormationProducts;
                break;            
        }
        for(var prod of productsToCheck){
            if(prod.enabled){
                addRemoveProduct(prod.Product.Id, thisObj.checked);
            }            
        }
        return;
        var isMaster = thisObj.hasAttribute('data-master-checkbox');
        var group = thisObj.closest('[data-checkbox-group]');
        var boxes = group.querySelectorAll('input[type=checkbox]:not([data-master-checkbox])');
        var master = isMaster ? thisObj : group.querySelector('input[type=checkbox][data-master-checkbox]');
        var allRows = thisObj.parentElement.parentElement.parentElement.childElementCount;
        var numRows = allRows - 1;

        if(isMaster) {
            // Check and Uncheck all with the parent 
            for(var i = 0; i < boxes.length; i++) {
                if(boxes[i].id.includes("actionPlanTable") && boxes[i].parentNode.parentNode.style.display == 'table-row') {
                    boxes[i].checked = thisObj.checked;
                    boxes[i].value = thisObj.value;

                    var name = boxes[i].parentNode.parentNode.className;
                    var prodName = name.replace(/(\r\n|\n|\r)/gm, "");
                    if(prodName.includes('row')) {
                        prodName = prodName.replace('row ','');
                    }
                    var prodId = boxes[i].parentNode.parentNode.id;
                    chosenProducts.push(prodId);
                    uniquechosenProducts = [...new Set(chosenProducts)];
    
                    productSelected(boxes[i].checked, prodId, prodName);
                }
            }
        } else {
            // Check and Uncheck the parent if the childs are all checked or unchecked
            var checkedCount = 0;
            for(var i = 0; i < boxes.length; i++) {
                if(boxes[i].id.includes("actionPlanTable") && boxes[i].parentNode.parentNode.style.display == 'table-row') {
                    var name = boxes[i].parentNode.parentNode.className;
                    var prodName = name.replace(/(\r\n|\n|\r)/gm, "");
                    if(prodName.includes('row')) {
                        prodName = prodName.replace('row ','');
                    }
                    var prodId = boxes[i].parentNode.parentNode.id;

                    if(boxes[i].checked) { 
                        checkedCount += 1;      

                        chosenProducts.push(prodId);
                        uniquechosenProducts = [...new Set(chosenProducts)];
                    } else {             
                        var prodsList = document.getElementsByClassName(prodId);
                        for(var l = 0; l < prodsList.length; l++) {
                            prodsList[l].checked = boxes[i].checked;
                        }
                    }
                    productSelected(boxes[i].checked, prodId, prodName);
                }
            }
            
            if(checkedCount == numRows) { 
                master.checked = true;
                master.value = true;
            } else {
                master.checked = false;
                master.value = false;
            }
        }
    }
            
    function showWaitingScreen(isShow) {
        if(isShow != false) {
            isShow = isShow.checked;
        }

        socket.connect();
        if(isShow == false) {
            content = {
                page: "Waiting"
            }
            socket.emit("private message", {
                content
            }); 
        } else {
            content = {
                page: "Prepared Packages",
                showProgress: true
            }
            socket.emit("private message", {
                content
            });
        }
    }

    function enableProduct(productName, enabled){
        console.log('enableProduct '+productName);
        var productCheckboxes = document.querySelectorAll("[data-product='"+productName+"']");
        var prodId = productNameToId.get(productName);
        if(!prodId){
            return;
        }
        var selectedProd = selectedProductsMap.get(prodId);
        var finalProd = finalProductsMap.get(prodId);
        if(!finalProd){
            return;
        }

        if(selectedProd){
            selectedProd.enabled = enabled;
        }
        finalProd.enabled = enabled;
        
        if(enabled){
            for (let l = 0; l < productCheckboxes.length; l++) {
                productCheckboxes[l].removeAttribute('disabled');
            }
        } else {
            for (let l = 0; l < productCheckboxes.length; l++) {
                productCheckboxes[l].setAttribute('disabled', 'disabled');
            }
        }
    }

    //to-do: deal with autochecks that should be disabled boxes ?
    function autoChecks(name, chck) {
        console.log('autoChecks '+name);
        //return; //temporarily disabled
        const corpList = document.querySelectorAll("[data-product='Corp State Filing Fee']");
        const llcList = document.querySelectorAll("[data-product='LLC State Filing Fee']");
        const businessTaxList = document.querySelectorAll("[data-product='Business Tax Preparation']");
        const taxAdvisoryList = document.querySelectorAll("[data-product='Tax Advisory']");
        const backBookkList = document.querySelectorAll("[data-product='Back Bookkeeping']");
        const bookkList = document.querySelectorAll("[data-product='Bookkeeping Advisory']");
        const dedicBookkList = document.querySelectorAll("[data-product='Dedicated Bookkeeping']");
        const expediList = document.querySelectorAll("[data-product='Expedited Fee - Bookkeeping']");
        const threePageList = document.querySelectorAll("[data-product='3-Page Templated Website']");
        const fivePageList = document.querySelectorAll("[data-product='5-Page Templated Website']");
        const mainManaList = document.querySelectorAll("[data-product='Maintenance & Management']");
        const websiteList = document.querySelectorAll("[data-product='Website Builder']");
        const persoTaxPrepList = document.querySelectorAll("[data-product='Personal Tax Preparation']");
        const nonTaxPrepList = document.querySelectorAll("[data-product='Non-Profit Tax Preparation']");
        const nonProfBookkList = document.querySelectorAll("[data-product='Non-Profit Bookkeeping']");
        const nonProfBackBookkList = document.querySelectorAll("[data-product='Non-Profit Back Bookkeeping']");
        const nonProfBackBookkQTYList = document.querySelectorAll("[data-product-qty='Non-Profit Back Bookkeeping']");
        const backBookkQTYList = document.querySelectorAll("[data-product-qty='Back Bookkeeping']");
        const payrollList = document.querySelectorAll("[data-product='Payroll']");
        const audDefBusiList = document.querySelectorAll("[data-product='Audit Defense - Business']");
        const audDefPersList = document.querySelectorAll("[data-product='Audit Defense - Personal']");
        const twoYearList = document.querySelectorAll("[data-product='Two-Year Review']");
        const loanAgreeList = document.querySelectorAll("[data-product='Loan Agreement']");
        const prepList = document.querySelectorAll("[data-product='1099 Prep']");
        const prepQTYList = document.querySelectorAll("[data-product-qty='1099 Prep']");
        const foreQuali = document.querySelectorAll("[data-product='Foreign Qualification - LLC']");
        var transactions = $('[data-id="transactions"]').val();
        var bookkeepingDate = $('[data-id="bookkeepingStart"]').val();
        var foreignState = $('[data-id="foreignState"]').val();
        
        var newName = name;
        if(name == 'Business Return') {
            newName = 'Business Tax Preparation';
        } else if(name == 'Personal Return') {
            newName = 'Personal Tax Preparation';
        } else if(name == 'Advisory') {
            newName = 'Tax Advisory';
        }
        // var listProdPrice = document.querySelectorAll("[data-product-cost='" + newName + "']");
        // var prodPrice = listProdPrice[0].innerHTML;
        // prodPrice = prodPrice.replace('$','');
        // pricesMap.set(chck.className, prodPrice);

        if(name == 'LLC State Filing Fee') {
            for (let j = 0; j < corpList.length; j++) {
                if(chck.checked == true) {
                    //corpList[j].checked = false;
                    autoCheckEntity(true);
                } else {
                    autoCheckEntity(false);
                }
                break;
            }
        } else if(name == 'Corp State Filing Fee') {
            for (let i = 0; i < llcList.length; i++) {
                if(chck.checked == true) {
                    //llcList[i].checked = false;
                    autoCheckEntity(true);
                } else {
                    autoCheckEntity(false);
                }
                break;
            }
        } else if(name == 'Entity Formation') {
            for (let j = 0; j < corpList.length; j++) {
                for (let i = 0; i < llcList.length; i++) {
                    if(corpList[j].checked == true || llcList[i].checked == true) {
                        autoCheckEntity(true);
                        break;
                    }
                }
            }
        } else if(name == 'Payroll') {
            if(chck.checked == true) {
                if(hasPayroll == 'true') {
                    autoCheckPayrollFee(false);
                } else {
                    autoCheckPayrollFee(true);
                }
            } else {
                autoCheckPayrollFee(false);
            }
        } else if(name == 'Payroll Setup Fee') {
            for (let l = 0; l < payrollList.length; l++) {
                if(payrollList[l].checked == true) {
                    autoCheckPayrollFee(true);
                }
            }
        } else if(name == 'Business Tax Preparation' || name == 'Business Return') {
            var taxAdvisory = false;
            
            for (let j = 0; j < taxAdvisoryList.length; j++) {
                if(taxAdvisoryList[j].checked == true) {
                    taxAdvisory = true;
                }
            }


            if(taxAdvisory == true && chck.checked == true) {
                autoCheck1800Acc(true);
            } 
        } else if(name == 'Tax Advisory' || name == 'Advisory') {
            var persoTaxPrepFlag = false;
            var audDefBusiFlag = false;
            var audDefPersFlag = false;
            var loanAgreeFlag = false;
            var twoYearFlag = false;
            var taxAdvisoryFlag = false;
            var businessTax = false;
            var persoTaxPrep = false;
            var nonTaxPrep = false;

            for (let j = 0; j < businessTaxList.length; j++) {
                if(businessTaxList[j].checked == true) {
                    businessTax = true; 
                }
            } 

            // for (let f = 0; f < persoTaxPrepList.length; f++) {
            //     if(persoTaxPrepList[f].checked == true) {
            //         persoTaxPrep = true;  
            //     }
            // }

            
            if(chck.checked == true && businessTax == true) {
                autoCheck1800Acc(true);
            }

            // if(persoTaxPrep == true && chck.checked == true) {
            //     persoTaxPrepFlag = true;
            //     taxAdvisoryFlag = true;
            //     autoCheckLoanAgree(true);
            // } else if(persoTaxPrep == false && chck.checked == false) {
            //     autoCheckLoanAgree(false);
            // }
        } else if(name == '1-800Accountant Access') {
            var businessTax = false;
            var taxAdvisory = false;
            for (let l = 0; l < businessTaxList.length; l++) {
                if(businessTaxList[l].checked == true) {
                    businessTax = true;
                }
            }
            for (let j = 0; j < taxAdvisoryList.length; j++) {
                const taxAdvisoryText = taxAdvisoryList[j].className;
                if(taxAdvisoryList[j].checked == true) {
                    taxAdvisory = true;
                }
            } 
            if(businessTax == true && taxAdvisory == true) {
                autoCheck1800Acc(true);
            }
        } else if(name == '3-Page Templated Website') {
            for (let j = 0; j < fivePageList.length; j++) {
                if(chck.checked == true) {
                    if(fivePageList[j].checked == true) {
                        autoCheckMainMana(true);
                        autoCheckWebsite(true);
                        break;
                    }
                } 
            }
        } else if(name == '5-Page Templated Website') {
            for (let j = 0; j < threePageList.length; j++) {
                if(chck.checked == true) {
                    if(threePageList[j].checked == true) {
                        autoCheckMainMana(true);
                        autoCheckWebsite(true);
                        break;
                    }
                } 
            }
        } else if(name == 'Maintenance & Management') {
            if(chck.checked == true) {
                for (let d = 0; d < fivePageList.length; d++) {
                    for (let j = 0; j < threePageList.length; j++) {
                        for (let f = 0; f < websiteList.length; f++) {
                            if(fivePageList[d].checked == false && 
                               threePageList[j].checked == false && 
                               websiteList[f].checked == false) {
                                autoCheckWebsite(true);
                                break;
                            }
                        }
                    }
                }
            }
        // } else if(name == 'Expedited Fee - Bookkeeping') {
        //     if(chck.checked == true) {
        //         var backBookk = false;
        //         for (let l = 0; l < backBookkList.length; l++) {
        //             if(backBookkList[l].checked == false) {
        //                 autoCheckBackBookk(true); //why are we calling a function for this? We're already iterating through the list. -mc
        //                 backBookk = true;
        //                 break;
        //             } 
        //         }
        //         for (let j = 0; j < bookkList.length; j++) {
        //             if(bookkList[j].checked == false && backBookk == false) {
        //                 autoCheckBookk(true);
        //                 break;
        //             }
        //         }
        //     }
        } else if(name == 'Back Bookkeeping') {
            if(chck.checked == false) {
                for (let l = 0; l < expediList.length; l++) {
                    if(expediList[l].checked == true) {
                        autoCheckExpedited(false);
                        break;
                    } 
                }
            }
        } 
        
        if(getBundleStatus() == 'removed'){
            autoCheckBundleAddons(false);
        } else {
            autoCheckBundleAddons(true);
        }
        
        if(false){
            var months = monthDifference(bookkeepingStartDate); 
            var nonProfit = false; //placeholder for account value
            //disable or enable bookkeeping products based on discovery questions -mc bookkeepingDate
            if((transactions == null || transactions == '')
            || (bookkeepingDate == null || bookkeepingDate == '')){ //added criteria for new question -mc
                console.log('no bookkeeping');
                for (let l = 0; l < dedicBookkList.length; l++) {
                    dedicBookkList[l].setAttribute('disabled', 'disabled');
                    //dedicBookkList[l].checked = false;
                }
                for (let l = 0; l < backBookkList.length; l++) {
                    backBookkList[l].setAttribute('disabled', 'disabled');
                    //backBookkList[l].checked = false;
                }
                for (let l = 0; l < nonProfBookkList.length; l++) {
                    nonProfBookkList[l].setAttribute('disabled', 'disabled');
                    //nonProfBookkList[l].checked = false;
                }
                for (let l = 0; l < nonProfBackBookkList.length; l++) {
                    nonProfBackBookkList[l].setAttribute('disabled', 'disabled');
                    //nonProfBackBookkList[l].checked = false;
                }
                for (let l = 0; l < bookkList.length; l++) {
                    bookkList[l].setAttribute('disabled', 'disabled');
                    //bookkList[l].checked = false;
                }
                for (let l = 0; l < expediList.length; l++) {
                    expediList[l].setAttribute('disabled', 'disabled');
                    //expediList[l].checked = false;
                }
            } else {         
                if(months > 0){ //select back bookkeeping and set the quantity
                    if(nonProfit){
                        for (let l = 0; l < backBookkList.length; l++) {
                            //backBookkQTYList[l].value = months;
                            //backBookkList[l].removeAttribute('disabled'); //don't let the rep toggle back bookkeeping -mc
                            backBookkList[l].setAttribute('disabled', 'disabled');
                            //backBookkList[l].checked = true; //auto select back bookkeeping
                            //backBookkQTYList[l].setAttribute('value', months);
                            
                        }
                        
                        //calcQuantityChange(backBookkQTYList[0], 'Back Bookkeeping')
                        for (let l = 0; l < dedicBookkList.length; l++) { 
                            dedicBookkList[l].removeAttribute('disabled');
                            //dedicBookkList[l].checked = true;
                        }
                    } else {
                        for (let l = 0; l < backBookkList.length; l++) {
                            //backBookkList[l].removeAttribute('disabled'); //don't let the rep toggle back bookkeeping -mc
                            backBookkList[l].setAttribute('disabled', 'disabled');
                            //backBookkList[l].checked = true; //auto select back bookkeeping
                            //backBookkQTYList[l].setAttribute('value', months);
                        }
                        //calcQuantityChange(backBookkQTYList[0], 'Back Bookkeeping')
                        for (let l = 0; l < dedicBookkList.length; l++) { 
                            dedicBookkList[l].removeAttribute('disabled');
                            //dedicBookkList[l].checked = true;
                        }
                    }
                    
                } else {
                    console.log('no back bookkeeping');
                    for (let l = 0; l < dedicBookkList.length; l++) { 
                        dedicBookkList[l].removeAttribute('disabled');
                    }  
                }
                
                for (let l = 0; l < nonProfBookkList.length; l++) {
                    nonProfBookkList[l].removeAttribute('disabled');
                }
                for (let l = 0; l < nonProfBackBookkList.length; l++) {
                    nonProfBackBookkList[l].removeAttribute('disabled');
                }
                for (let l = 0; l < bookkList.length; l++) {
                    bookkList[l].removeAttribute('disabled');
                }
                for (let l = 0; l < expediList.length; l++) {
                    expediList[l].removeAttribute('disabled');
                }
            }
        }
        

        if(foreignState == null || foreignState == ''){
            for (let l = 0; l < foreQuali.length; l++) {
                foreQuali[l].setAttribute('disabled', 'disabled');
            }
        } else {
            for (let l = 0; l < foreQuali.length; l++) {
                foreQuali[l].removeAttribute('disabled');
            }
        }

        // checkAll(chck);
    }

    function parseDate(stringVal){
        return new Date(Date.parse(stringVal+'T00:00:00'));
    }

    function monthDifference(startVal, endVal){
        if(!startVal){
            return null;
        }
        var startDate = parseDate(startVal);
        var today = new Date();
        var endDate;
        if(!endVal || parseDate(endVal) > today){
            endDate = today;
        } else {
            endDate = parseDate(endVal);
        }
        // get months
        var months;
        months = (endDate.getFullYear() - startDate.getFullYear()) * 12; //start with the year difference
        months -= startDate.getMonth(); //exclude the extra months before the startDate
        months += endDate.getMonth(); //include the extra months before today's date
        months = months <= 0 ? 0 : months;
        return months;
    }

    function autoCheckEntity(val) {
        var prodId = productNameToId.get('Entity Formation');
        addRemoveProduct(prodId, val);
    }

    function autoCheckPayrollFee(val) {
        var prodId = productNameToId.get('Payroll Setup Fee');
        addRemoveProduct(prodId, val);
    }

    function autoCheck1800Acc(val) {
        var prodId = productNameToId.get('1-800Accountant Access');
        addRemoveProduct(prodId, val);
    }

    function autoCheckExpedited(val) {
        var prodId = productNameToId.get('Expedited Fee - Bookkeeping');
        addRemoveProduct(prodId, val);
    }

    function autoCheckBackBookk(val) {
        var prodId = productNameToId.get('Back Bookkeeping');
        addRemoveProduct(prodId, val);
    }

    function autoCheckBookk(val) {
        var prodId = productNameToId.get('Bookkeeping Advisory');
        addRemoveProduct(prodId, val);
    }

    function autoCheckMainMana(val) {
        var prodId = productNameToId.get('Maintenance & Management');
        addRemoveProduct(prodId, val);
    }

    function autoCheckWebsite(val) {
        var prodId = productNameToId.get('Website Builder');
        addRemoveProduct(prodId, val);
    }

    function autoCheckBundleAddons(val) {
        var prodId = productNameToId.get('Custom Accounting Package');
        addRemoveProduct(prodId, val);

        prodId = productNameToId.get('Personal Financial Planning');
        addRemoveProduct(prodId, val);
    }

    function autoCheckLoanAgree(val) {
        return;
        const loanAgreeList = document.querySelectorAll("[data-amount='Loan Agreement']");
        var id = '';
        var productPrice = 0;

        for (let l = 0; l < loanAgreeList.length; l++) {
            id = loanAgreeList[l].parentNode.parentNode.id;
            if(val == true) {
                loanAgreeList[l].innerHTML = '$0.00';
                productPrice = 0.00;
            } else {
                productPrice = oridinalPricesMap.get(id);
                productPrice = parseFloat(productPrice).toFixed(2);
                loanAgreeList[l].innerHTML = formatMoney(productPrice);
            }
        }
        pricesMap.set(id, productPrice);
    }

    //update unit price of 1800Accountant access based on other items
    //Should be triggered when de/selecting any items in productsRelatedToAccess
    function autoAmount1800Acc(prodId) {
        console.log('autoAmount1800Acc');
        const accList = document.querySelectorAll("[data-amount='1-800Accountant Access']");
        if(accList.length == 0){
            console.log('1800 Access node not found');
            return;
        }
        //var id = '';
        var productPrice = 0;
        if(!prodId){ prodId = accList[0].parentNode.parentNode.id; }
        var useDiscount = accessDiscounted();
        if(useDiscount){
            productPrice = 329.89; //29.99;
            } else {
                productPrice = originalPriceMap.get(prodId);
                productPrice = parseFloat(productPrice).toFixed(2);
                }
        for (let l = 0; l < accList.length; l++) {
            //id = accList[l].parentNode.parentNode.id;
            accList[l].innerHTML = formatMoney(productPrice);
        }
        finalProductsMap.get(prodId).adjustedPrice = productPrice;
        if(selectedProductsMap.has(prodId)) { selectedProductsMap.get(prodId).adjustedPrice = productPrice; }
        //pricesMap.set(id, productPrice);
        updateProductSubtotal(prodId);

    }

    const productsRelatedToAccess = ['Audit Defense - Business','Audit Defense - Personal','Business Tax Preparation',
    'Two-Year Review','Loan Agreement','Tax Advisory','Personal Tax Preparation','Non-Profit Tax Preparation'];
    const productsRelatedToLoanAgreement = ['Tax Advisory','Personal Tax Preparation'];
    
    function accessDiscounted(){
        var persoTaxPrepFlag = false;
        var audDefBusiFlag = false;
        var audDefPersFlag = false;
        var loanAgreeFlag = false;
        var twoYearFlag = false;
        var taxAdvisoryFlag = false;
        var businessTaxFlag = false;
        var nonprofitTaxFlag = false;
        const audDefBusiList = document.querySelectorAll("[data-product='Audit Defense - Business']");
        const audDefPersList = document.querySelectorAll("[data-product='Audit Defense - Personal']");
        const twoYearList = document.querySelectorAll("[data-product='Two-Year Review']");
        const loanAgreeList = document.querySelectorAll("[data-product='Loan Agreement']");
        const taxAdvisoryList = document.querySelectorAll("[data-product='Tax Advisory']");
        const persoTaxPrepList = document.querySelectorAll("[data-product='Personal Tax Preparation']");
        const nonTaxPrepList = document.querySelectorAll("[data-product='Non-Profit Tax Preparation']");
        const businessTaxList = document.querySelectorAll("[data-product='Business Tax Preparation']");

        for (let l = 0; l < businessTaxList.length; l++) {
            if(businessTaxList[l].checked == true) {
                businessTaxFlag = true;
                break;
            }
        }
        for (let f = 0; f < nonTaxPrepList.length; f++) {
            if(nonTaxPrepList[f].checked == true) {
                nonprofitTaxFlag = true;
                break;
            }
        }
        for (let j = 0; j < audDefBusiList.length; j++) {
            if(audDefBusiList[j].checked == true) {
                audDefBusiFlag = true;
                break;
            }
        }
        for (let j = 0; j < persoTaxPrepList.length; j++) {
            if(persoTaxPrepList[j].checked == true) {
                persoTaxPrepFlag = true;
                break;
            }
        }
        for (let j = 0; j < audDefPersList.length; j++) {
            if(audDefPersList[j].checked == true) {
                audDefPersFlag = true;
                break;
            }
        }
        for (let j = 0; j < loanAgreeList.length; j++) {
            if(loanAgreeList[j].checked == true) {
                loanAgreeFlag = true;
                break;
            }
}
        for (let j = 0; j < twoYearList.length; j++) {
            if(twoYearList[j].checked == true) {
                twoYearFlag = true;
                break;
            }
        }
        for (let j = 0; j < taxAdvisoryList.length; j++) {
            if(taxAdvisoryList[j].checked == true) {
                taxAdvisoryFlag = true;
                break;
            }
        }

        if(businessTaxFlag && persoTaxPrepFlag && taxAdvisoryFlag){
            return true;
        }
        if(persoTaxPrepFlag && taxAdvisoryFlag && audDefBusiFlag && audDefPersFlag && loanAgreeFlag && twoYearFlag) {
            return true;
        }
        if(persoTaxPrepFlag && taxAdvisoryFlag && nonprofitTaxFlag){
            return true;
        }
        return false;
    }

    //update 1099 unit price based on the qty of the same product
    //theoretically only needs to be triggered when 1099 qty changes
    function autoAmount1099(qtyPrep, prodId) {
        console.log('autoAmount1099');
        const prepList = document.querySelectorAll("[data-amount='1099 Prep']");
        var id = '';
        var productPrice = 0;
        var newPrice = 0;
        if(prepList.length == 0){
            console.log('1099 node not found');
            return;
        }
        if(!prodId){ prodId = prepList[0].parentNode.parentNode.id; }
        if(!qtyPrep){ finalProductsMap.get(prodId)?.currentQuantity; }
        productPrice = originalPricesMap.get(prodId);
        newPrice = finalProductsMap.get(prodId)?.adjustedPrice;
            
        if(qtyPrep > 1) {
            newPrice = (productPrice + ((qtyPrep - 1) * 20)) / qtyPrep;
            newPrice = parseFloat(newPrice).toFixed(2);
        } else {
            newPrice = 50;
            //newPrice = parseFloat(newPrice).toFixed(2);
        }
        
        for (let l = 0; l < prepList.length; l++) {
            prepList[l].innerHTML = formatMoney(newPrice);
        }
        //pricesMap.set(id, newPrice);
        finalProductsMap.get(prodId).adjustedPrice = newPrice;
        if(selectedProductsMap.has(prodId)) { selectedProductsMap.get(prodId).adjustedPrice = newPrice; }
        updateProductSubtotal(prodId);
        return newPrice;
    }

    //update tax advisory unit price based on whether business prep and personal prep
    //are both included in the current package. Theoretically only needs to be triggered
    //when business or personal prep are de/selected (or if their unit price changes, which shouldn't happen currently)
    function autoAmountAdvisory(prodId) {
        console.log('autoAmountAdvisory');
        var useCustomPricing = isCustomAdvisoryPricing();
        const advList = document.querySelectorAll("[data-amount='Tax Advisory']");
        if(advList.length == 0){
            console.log('advisory node not found');
            return;
        }
        if(!prodId){ prodId = advList[0].parentNode.parentNode.id; }
        //var id = '';
        var productPrice = 0;

        if(useCustomPricing){
            var perPrice = document.querySelector("[data-amount='Personal Tax Preparation']").innerHTML;
            var busiPrice = document.querySelector("[data-amount='Business Tax Preparation']").innerHTML;
            perPrice = perPrice.replace('$','');
            busiPrice = busiPrice.replace('$','');
            productPrice = (((parseInt(busiPrice) + parseInt(perPrice)) / (869 + 390)) * 1199).toFixed(2);
        } else {
            productPrice = originalPriceMap.get(prodId);
        }

        for (let l = 0; l < advList.length; l++) {
            advList[l].innerHTML = formatMoney(productPrice);
        }
        //pricesMap.set(id, productPrice);
        finalProductsMap.get(prodId).adjustedPrice = productPrice;
        if(selectedProductsMap.has(prodId)) { selectedProductsMap.get(prodId).adjustedPrice = productPrice; }
        updateProductSubtotal(prodId);
    }

    
    function isCustomAdvisoryPricing(){
        const businessTaxList = document.querySelectorAll("[data-product='Business Tax Preparation']");
        const persoTaxPrepList = document.querySelectorAll("[data-product='Personal Tax Preparation']");
        var persoTaxPrepFlag = false;
        var businessTaxFlag = false;
        for (let l = 0; l < businessTaxList.length; l++) {
            if(businessTaxList[l].checked == true) {
                businessTaxFlag = true;
                break;
            }
        }
        for (let j = 0; j < persoTaxPrepList.length; j++) {
            if(persoTaxPrepList[j].checked == true) {
                persoTaxPrepFlag = true;
                break;
            }
        }
        return businessTaxFlag && persoTaxPrepFlag;
    }

    function autoAmountLoan(prodId){
        console.log('autoAmountLoan');
        var useCustomPricing = isFreeLoan();
        const advList = document.querySelectorAll("[data-amount='Loan Agreement']");
        if(!prodId){ prodId = advList[0].parentNode.parentNode.id; }
        //var id = '';
        var productPrice = 0;

        if(useCustomPricing){
            productPrice = 0;
            } else {
                productPrice = originalPriceMap.get(prodId);
        }

        for (let l = 0; l < advList.length; l++) {
            advList[l].innerHTML = formatMoney(productPrice);
        }
        //pricesMap.set(id, productPrice);
        finalProductsMap.get(prodId).adjustedPrice = productPrice;
        if(selectedProductsMap.has(prodId)) { selectedProductsMap.get(prodId).adjustedPrice = productPrice; }
        updateProductSubtotal(prodId);
    }

    function isFreeLoan(){
        const taxAdvisoryList = document.querySelectorAll("[data-product='Tax Advisory']");
        const persoTaxPrepList = document.querySelectorAll("[data-product='Personal Tax Preparation']");
        var persoTaxPrepFlag = false;
        var taxAdvisoryFlag = false;
        for (let l = 0; l < taxAdvisoryList.length; l++) {
            if(taxAdvisoryList[l].checked == true) {
                taxAdvisoryFlag = true;
                    break;
                }
            }
        for (let j = 0; j < persoTaxPrepList.length; j++) {
            if(persoTaxPrepList[j].checked == true) {
                persoTaxPrepFlag = true;
                break;
            }
        }
        return taxAdvisoryFlag && persoTaxPrepFlag;
    }


    //the primary purpose of this function is to (re)calculate the quote totals
    //runs in calcQuantityChange(), checkAll(), calculateTaxSavings(),and calcFrequencyChange
    function productSelected(checked, value, name) {
        return; //temporarily disabled
        //var selectedProducts = '{selectedProducts}';
        // const link = document.getElementsByClassName(value);

        // for (let i = 0; i < link.length; i++) {
        //     if(checked) {
        //         link[i].checked = true;
        //     } else {
        //         link[i].checked = false;
        //     }
        // }

        //I think this whole section is probably worthless
        // if(checked) {
        //     var questionNumber;
        //     for(var i = 1; i < 31; i++) {
        //         if(null == questionToProduct.get(i)) {
        //             questionNumber = i;
        //             questionToProduct.set(i, name);
        //             productToQuestion.set(name, i);
        //             break;
        //         }
        //     }
        // } else {
        //     var questionNumber = productToQuestion.get(name);
            //     questionToProduct.delete(questionNumber);
            //     productToQuestion.delete(name);
        // }

        var totalPrice = 0;
        var monthlyPrice = 0;
        var monthPrice = 0;
        var oneTimePricing = 0;
        var oneTimePrice = 0;
        var yearlyPricing = 0;
        var yearlyPrice = 0;

        //selectedProducts.length = 0;
        selectedProductsToQuote.length = 0;
        
        for (let i = 0; i < uniquechosenProducts.length; i++) {
            var mark = document.getElementsByClassName(uniquechosenProducts[i]);
            
            for(let j = 0; j < mark.length; j++) {

                if(mark[j].checked  && !tempSelectedProducts.includes(uniquechosenProducts[i])) {

                    var productPrice = pricesMap.get(uniquechosenProducts[i]);
                    var newProductPrice = productPrice;
                    var billing = productIdToBilling.get(uniquechosenProducts[i]);
                    var prod = document.getElementById(uniquechosenProducts[i]);

                    var billiDet = billingAnnualMonthly.get(uniquechosenProducts[i]);
                    
                    var billingSelect = new Array();
                    if(billiDet != null && billiDet != undefined && billiDet != '') {
                        billingSelect = billiDet.split(",");

                        if(billingSelect[0] == 'Monthly') {
                            if(billingSelect[1] == 'false') {
                                newProductPrice = productPrice * 11;
                                billing = 'Annual';
                            } else {
                                newProductPrice = productPrice;
                                billing = 'Monthly';
                            }
                        } else if(billingSelect[0] == 'Annual' || billingSelect[0] == 'One-Time') {
                            if(billingSelect[1] == 'false') {
                                newProductPrice = (productPrice / 12) * 1.2;
                                productPrice = productPrice * 1.2;
                                billing = 'Monthly';
                            } else {
                                newProductPrice = productPrice;
                                if(billingSelect[0] == 'One-Time') {
                                    billing = 'One-Time';
                                } else if(billingSelect[0] == 'Annual') {
                                    billing = 'Annual';
                                }
                            }
                        }
                    } else {
                        newProductPrice = productPrice;
                    }

                    var qty = 0;
                    if(prod.childNodes.length > 6) {
                        qty = prod.childNodes[9].childNodes[1].childNodes[1].value;
                    } else {
                        qty = prod.childNodes[4].childNodes[0].childNodes[0].value;
                    }
                    
                    var subtotal = newProductPrice * qty;

                    if('Monthly' == billing) {
                        monthlyPrice += subtotal;
                    } else if('Annual' == billing) {
                        yearlyPricing += subtotal;
                    } else if('One-Time' == billing) {
                        oneTimePricing += subtotal;
                    }

                    subtotal = parseFloat(subtotal).toFixed(2);
                    var subtotalList = document.getElementsByClassName(uniquechosenProducts[i]+'subtotal');
                    for(var k = 0; k < subtotalList.length; k++) {
                        subtotalList[k].innerHTML = '$' + subtotal.toString();
                    }
                }

//productPrice = p.price
                //newProductPrice = p.freqPrice
                //subtotal = p.subtotal
                var prodValues = '';
                prodValues = uniquechosenProducts[i] + '//' + billing + '//' + qty + '//' + productPrice + '//' + newProductPrice + '//' + subtotal;    
                tempSelectedProducts.push(uniquechosenProducts[i]); 
                selectedProductsToQuote.push(prodValues);
            }
        } 

        monthPrice = parseFloat(monthlyPrice).toFixed(2);
        oneTimePrice = parseFloat(oneTimePricing).toFixed(2);
        yearlyPrice = parseFloat(yearlyPricing).toFixed(2); 

        totalPrice = parseFloat(yearlyPrice) + parseFloat(oneTimePrice);
        totalPrice = parseFloat(totalPrice).toFixed(2); 
        
        document.getElementById('onTime').innerHTML = oneTimePrice;
        document.getElementById('originalValue').innerHTML = totalPrice;

        document.getElementById('quoteTotal').innerHTML = '$' + totalPrice.replace(/\d(?=(\d{3})+\.)/g, '$&,') + '+ $' + monthPrice + '/Mo'; 
        document.getElementById('quoteText').innerHTML = '$' + totalPrice.replace(/\d(?=(\d{3})+\.)/g, '$&,') + ' + $' + monthPrice + '/Mo'; 

        document.getElementById('totalAnualCost').innerHTML = '$' + totalPrice.replace(/\d(?=(\d{3})+\.)/g, '$&,');

        var quoteTotal = parseFloat(yearlyPrice) + parseFloat(oneTimePrice) + parseFloat(monthlyPrice);
        quoteTotal = parseFloat(quoteTotal).toFixed(2);
        quoteTotal = '$' + quoteTotal.replace(/\d(?=(\d{3})+\.)/g, '$&,');

        document.getElementById('payAmountDue').innerHTML = quoteTotal;
        document.getElementById('payAmountToday').innerHTML = quoteTotal;
        document.getElementById('paymentAmount').innerHTML = quoteTotal;

        document.getElementById('finalAmount').innerHTML = '$' + totalPrice.replace(/\d(?=(\d{3})+\.)/g, '$&,'); 
        document.getElementById('finalAmou').innerHTML = '$' + totalPrice.replace(/\d(?=(\d{3})+\.)/g, '$&,');
        
        if(monthPrice > 0 && monthPrice != 0) {
            document.getElementById('finalMonthAmount').innerHTML = '+ $' + monthPrice + '/Mo 1-800Accountant Portal monthly access fee.'; 
            document.getElementById('finalMonthAmou').innerHTML = '+ $' + monthPrice + '/Mo 1-800Accountant Portal monthly access fee.';
        } else {
            document.getElementById('finalMonthAmount').innerHTML = ''; 
            document.getElementById('finalMonthAmou').innerHTML = '';
        }
        
        const date = new Date();
        let day = date.getDate();
        document.getElementById('numDay').innerHTML = day;

        if(name.includes('row')) {
            name = name.replace('row ','');
        }
        socket.connect();
        content = {
            page: "Prepared Packages",
            showProgress: false, //determines whether to change to the packages page
            checked: checked, //determines whether to add or remove line item
            productName: name, //used to determine which products to display
            productCant: qty, //included in the line item displayed if >1
            question: questionNumber, //not currently in use
            quoteTotal: quoteTotal //used to display the real amount and calculate the fake amount
        }
        socket.emit("private message", {
            content
        });
    }

    //update the line item's total, and then sync across tabs
    function calcQuantityChange(quantity, prodName, prodId, prodPrice) {
        if(!prodId || prodId == ''){
            prodId = productNameToId.get(prodName);
        }
        var qty = quantity.value;
        if(!qty || !Number.isInteger(Number.parseFloat(qty)) || qty < 1){
            console.log('invalid quantity');
            return;
        }
        var qtyNum = Number.parseInt(qty);

        var newPrice = prodPrice;
        //use custom logic for 1099 prep, since unit price depends on qty
        if(prodName == '1099 Prep') {
            newPrice = autoAmount1099(qty, prodId);
        }

        //sync product quantity across  tabs
        const qtyBtnList = document.querySelectorAll("[data-product-qty='" + prodName + "']");
        for(var i = 0; i < qtyBtnList.length; i++) {
            qtyBtnList[i].value = qty;
        }

        //calculate line totals and sync across tabs
        // const subBtnList = document.querySelectorAll("[data-product-subtotal='" + prodName + "']");
        // // var listProdPrice = document.querySelectorAll("[data-product-cost='" + prodName + "']");
        // // var prodPrice = listProdPrice[0].innerHTML;
        // // prodPrice = prodPrice.replace('$','');
        // var subtotalValue = (qtyNum * parseFloat(newPrice)).toFixed(2);
                // //subtotalValue = parseFloat(subtotalValue).toFixed(2);
                
        // for(var i = 0; i < subBtnList.length; i++) {            
        //     subBtnList[i].innerHTML = '$' + subtotalValue.toString();
            // }
        
        if(finalProductsMap.has(prodId)) { finalProductsMap.get(prodId).currentQuantity = qtyNum; }
        if(selectedProductsMap.has(prodId)) { selectedProductsMap.get(prodId).currentQuantity = qtyNum; }
        
        updateProductSubtotal(prodId);
        updateQuoteTotals();
        syncProdsToClient();
        //syncProdToClient(finalProductsMap.get(prodId));
        // var checkRow = quantity.parentNode.parentNode.parentNode.childNodes[0].childNodes[0].checked;
        // var classNameRow = quantity.parentNode.parentNode.parentNode.id;
        // var nameRow = quantity.parentNode.parentNode.parentNode.className;
        // nameRow = nameRow.replace('row ','');
  
        // productSelected(checkRow, classNameRow, nameRow);
    }

    //18A access yearly click: {"0":{},"1":"01tf1000003JjrwAAC","2":"1-800Accountant Access","3":"Monthly","4":"true"}
    function calcFrecuencyChange(frecuencyBtn, prodId) { 
        var product = finalProductsMap.get(prodId);
        var prodName = product.Product.Name;
        var thisChecked = frecuencyBtn.checked;
        if(!thisChecked){
            console.log('unchecked');
            return;
        }
        var thisId = frecuencyBtn.id;
        var isNowYearly = thisId.includes("yearly");
        var isNowMonthly = thisId.includes("monthly");
        
        
        var frecuencyBtnList = document.getElementsByClassName(frecuencyBtn.className);

        var monthlyOnes = document.getElementsByClassName(prodId + 'monthly');
        var yearlyOnes = document.getElementsByClassName(prodId + 'yearly');
        for(var r = 0; r < monthlyOnes.length; r++) {
            monthlyOnes[r].checked = isNowMonthly;
            monthlyOnes[r].value = isNowMonthly;
            yearlyOnes[r].checked = isNowYearly;
            yearlyOnes[r].value = isNowYearly;
        }

        
        if(isNowMonthly && product){
            product.currentBillingFrequency = 'Monthly';
            if(selectedProductsMap.has(prodId)) { selectedProductsMap.get(prodId).currentBillingFrequency = 'Monthly'; }
        }
        if(isNowYearly && product){
            product.currentBillingFrequency = 'Annual';
            if(selectedProductsMap.has(prodId)) { selectedProductsMap.get(prodId).currentBillingFrequency = 'Annual'; }
        }
        
        updateProductSubtotal(prodId);
        updateQuoteTotals();
        syncProdsToClient();
        //syncProdToClient(product);
    }

    function justRemoveProduct(pId) {
        addRemoveProduct(pId, false, null);
    }
    var lastSubtotal;
    function updateProductSubtotal(prodId){
        var product = finalProductsMap.get(prodId);
        console.log('updateProductSubtotal '+product.Product.Name);
        var subtotal = product.adjustedPrice * product.currentQuantity;
        if(product.Product.Guided_Selling_Identifier__c == '1-800Accountant Access' && product.currentBillingFrequency == 'Monthly'){
            subtotal = subtotal / 11;
        } else if(product.currentBillingFrequency == 'Annual' && product.Product.Billing_Frequency__c != 'Annual'){
            subtotal = subtotal * 11;
        } else if (product.currentBillingFrequency == 'Monthly' && product.Product.Billing_Frequency__c != 'Monthly'){
            subtotal = (subtotal / 12) * 1.2;
        }
        subtotal = Number.parseFloat(subtotal.toFixed(2));
        lastSubtotal = subtotal; //debug
        product.subtotal = subtotal;
        if(selectedProductsMap.has(prodId)) { selectedProductsMap.get(prodId).subtotal = subtotal; }
        var subtotalList = document.getElementsByClassName(prodId+'subtotal');
                    
        for(var k = 0; k < subtotalList.length; k++) {
            subtotalList[k].innerHTML = formatMoney(subtotal);
        }
        // if(!skipFullUpdate){
        //     updateQuoteTotals(); 
        // }        
        //syncProdToClient(product);
    }
    
    const productsRelatedToAdvisory = ['Personal Tax Preparation', 'Business Tax Preparation'];
    //function called when un/checking a product in the modal
    //function addRemoveProduct(pChecked, pId, pName, pPrice, pAnnualMonthly, pBillingFreq, pQtyAllow) {
    function addRemoveProduct(prodId, overrideValue, productName) {
        if(productName && !prodId){
            prodId = productNameToId.get(productName);
        }
        var product = finalProductsMap.get(prodId);
        if(!product){
            console.log('product not available; skipping '+prodId);
            return;
        }
        //remove product if already selected
        // if(selectedProductsMap.has(prodId)){
        //     selectedProductsMap.get(prodId).selected = false;
        //     selectedProductsMap.delete(prodId);
        //     tempSelectedProducts = Array.from(selectedProductsMap.values());
        // } else { //add product
        //     product.selected = true;
        //     selectedProductsMap.set(prodId, product);
        //     tempSelectedProducts.push(product);
        // }

        var tBody = document.getElementById("selectedPlan");
        var pAnnualOne;
        var pMonthly;
        //don't toggle the selection if the current "value" matches overrideValue
        var skipAddRemove = (selectedProductsMap.has(prodId) == overrideValue);
        if(skipAddRemove){
            return;
        }
        //to-do: I'd eventually like to get rid of this html code in favor of a better solution, but it 
        //isn't worth the time sink at the moment
        if(!selectedProductsMap.has(prodId)) { //add product
            product.selected = true;
            selectedProductsMap.set(prodId, product);
            tempSelectedProducts.push(product);

            var checkboxList = document.querySelectorAll("[data-product='"+product.Product.Name+"']");
            for(var i=0; i<checkboxList.length; i++){
                checkboxList[i].checked = true;
                checkboxList[i].value = true;
            }

            var none = '';
            var flex = '';

            if(product.currentBillingFrequency == 'Annual' || product.currentBillingFrequency == 'One-Time') {
                pAnnualOne = true;
            } else {
                pAnnualOne = false;
            }
            if(product.currentBillingFrequency == 'Monthly') {
                pMonthly = true;
            } else {
                pMonthly = false;
            }
            
            if(product.Product.Disable_QTY_on_Calc__c == false || product.Product.Disable_QTY_on_Calc__c == 'false') {
                none = 'none';
                flex = 'flex';
            } else {
                none = 'flex';
                flex = 'none';
            }

            if(product.Product.AnnualMonthlyOption__c == true || product.Product.AnnualMonthlyOption__c == 'true') {
                var rowData = '<div id="' + product.Product.Id + '" class="row ' + product.Product.Name + '" style="display: table-row;border-bottom: 1px solid rgba(18, 23, 36, 0.2);">'
                + '<div class="col" style="text-align: center;vertical-align: middle;padding-left: 17px;">' 
                + '<input type="checkbox" html-data-id="' + product.Product.Id + '" data-product="' + product.Product.Name + '" style="Height: 13px;margin-left: 12px;" id="actionPlanTable" class="' + product.Product.Id + '" onchange="addRemoveProduct(&apos;' + product.Product.Id + '&apos;);" checked="checked" value="true"'+(product.enabled ? '' : 'disabled= "disabled"')+'/>'
                + '</div>'
                + '<div class="col" style="padding-left: 0px;">'
                + '<p class="planPackageTableProd">' + product.Product.Name + '</p>'
                + '</div>'
                + '<div class="col" style="padding-left: 195px;">'
                + '<p class="planPackageTableCost" data-product-cost="' + product.Product.Name + '" data-amount="' + product.Product.Name + '">' + formatMoney(product.adjustedPrice) + '</p>'
                + '</div>'
                + '<div class="col" style="width: 160px;">'
                + '<div class="radio-group">'
                + '<input type="checkbox" class="radiobtn ' + product.Product.Id + 'yearly" id="' + product.Product.Id + 'yearly" name="selector" value="' + pAnnualOne + '" checked=' + pAnnualOne + ' onchange="calcFrecuencyChange(this, &apos;' + product.Product.Id + '&apos;, &apos;' + product.Product.Name + '&apos;, &apos;' + product.currentBillingFrequency + '&apos;, &apos;' + pAnnualOne + '&apos;);"/>'
                + '<label for="' + product.Product.Id + 'yearly" class="radioLabel"  >Yearly</label>'
                + '<input type="checkbox" class="radiobtn ' + product.Product.Id + 'monthly" id="' + product.Product.Id + 'monthly" name="selector" value="' + pMonthly + '" checked=' + pMonthly + ' onchange="calcFrecuencyChange(this, &apos;' + product.Product.Id + '&apos;, &apos;' + product.Product.Name + '&apos;, &apos;' + product.currentBillingFrequency + '&apos;, &apos;' + pMonthly + '&apos;);"/>'
                + '<label for="' + product.Product.Id + 'monthly" class="radioLabel">Monthly</label>'
                + '</div>'
                + '</div>'
                + '<div class="col" style="width: 110px;">'
                + '<div class="form-floating">'
                + '<input type="tel" data-product-qty="' + product.Product.Name + '" class="form-control ' + product.Product.Id + 'qty" id="planPackageTableQuantity" style="display: ' + flex + '" value="' + product.currentQuantity + '" oninput="calcQuantityChange(this, &apos;' + product.Product.Name + '&apos;);"/>'
                + '<output type="tel" data-product-qty="' + product.Product.Name + '" class="form-control" id="planPackageTableQuantityOutput" style="display: ' + none + '; background: rgba(18, 23, 36, 0.2);opacity: 0.75;">' + product.currentQuantity + '</output>'
                + '</div>'
                + '</div>'
                + '<div class="col" style="40px">'
                + '<p class="planPackageTableSubtotal ' + product.Product.Id + 'subtotal" data-product-subtotal="' + product.Product.Name + '" data-amount="' + product.Product.Name + '">' + formatMoney(product.subtotal) + '</p>'
                + '</div>'
                + '</div>';
            } else {
                var rowData = '<div id="' + product.Product.Id + '" class="row ' + product.Product.Name + '" style="display: table-row;border-bottom: 1px solid rgba(18, 23, 36, 0.2);">'
                + '<div class="col" style="text-align: center;vertical-align: middle;padding-left: 17px;">'
                + '<input type="checkbox" html-data-id="' + product.Product.Id + '" data-product="' + product.Product.Name + '" style="Height: 13px;margin-left: 12px;" id="actionPlanTable" class="' + product.Product.Id + '" onchange="addRemoveProduct(&apos;' + product.Product.Id + '&apos;);" checked="checked" value="true"'+(product.enabled ? '' : 'disabled= "disabled"')+'/>'
                + '</div>'
                + '<div class="col" style="padding-left: 0px;">'
                + '<p class="planPackageTableProd">' + product.Product.Name + '</p>'
                + '</div>'
                + '<div class="col" style="padding-left: 195px;">'
                + '<p class="planPackageTableCost" data-product-cost="' + product.Product.Name + '" data-amount="' + product.Product.Name + '">' + formatMoney(product.adjustedPrice) + '</p>'
                + '</div>'
                + '<div class="col" style="width: 160px;">'                
                + '<div class="radio-group">'
                + '<output type="checkbox" class="radiobtn" id="' + product.Product.Id + 'yearly" name="selector" disabled="disabled">' + pAnnualOne + '</output>'
                + '<label for="' + product.Product.Id + 'yearly" class="radioLabel ' + product.Product.Id + 'yearlylabel" id="' + product.Product.Id + 'yearlylabel">Yearly</label>'
                + '<output type="checkbox" class="radiobtn" id="' + product.Product.Id + 'monthly" name="selector" disabled="disabled">' + pMonthly + '</output>'
                + '<label for="' + product.Product.Id + 'monthly" class="radioLabel ' + product.Product.Id + 'monthlylabel" id="' + product.Product.Id + 'monthlylabel">Monthly</label>'
                + '</div>'
                + '</div>'
                + '<div class="col" style="width: 110px;">'
                + '<div class="form-floating">'
                + '<input type="tel" data-product-qty="' + product.Product.Name + '" class="form-control ' + product.Product.Id + 'qty" id="planPackageTableQuantity" style="display: ' + flex + '" value="' + product.currentQuantity + '" oninput="calcQuantityChange(this, &apos;' + product.Product.Name + '&apos;);"/>'
                + '<output type="tel" data-product-qty="' + product.Product.Name + '" class="form-control" id="planPackageTableQuantityOutput" style="display: ' + none + '; background: rgba(18, 23, 36, 0.2);opacity: 0.75;">' + product.currentQuantity + '</output>'
                + '</div>'
                + '</div>'
                + '<div class="col" style="40px">'
                + '<p class="planPackageTableSubtotal ' + product.Product.Id + 'subtotal" data-product-subtotal="' + product.Product.Name + '" data-amount="' + product.Product.Name + '">' + formatMoney(product.subtotal) + '</p>'
                + '</div>'
                + '</div>';
            }
            
            tBody.innerHTML = tBody.innerHTML + rowData;
            var qtyList = document.querySelectorAll("[data-product-qty]");
            for(var i=0; i < 20; i+=2){
                qtyList[i].value = qtyList[i+1].value;
            }
            document.getElementById(product.Product.Id + 'yearly').checked = pAnnualOne;
            document.getElementById(product.Product.Id + 'monthly').checked = pMonthly;
            autoChecks(product.Product.Name, {checked: true});
        } else {
            var checkboxList = document.querySelectorAll("[data-product='"+product.Product.Name+"']");
            for(var i=0; i<checkboxList.length; i++){
                checkboxList[i].checked = false;
                checkboxList[i].value = false;
            }
            selectedProductsMap.get(prodId).selected = false;
            selectedProductsMap.delete(prodId);
            finalProductsMap.get(prodId).selected = false;
            tempSelectedProducts = Array.from(selectedProductsMap.values());

            //document.getElementById(prodId).childNodes[0].childNodes[0].value = false;
            //document.getElementById(prodId).childNodes[0].childNodes[0].checked = false;
            var rowToDelete = document.getElementById(prodId);
            rowToDelete.remove();

            //deletedProducts.push(pId);
            autoChecks(product.Product.Name, {checked: false});
        }

        if(productsRelatedToAccess.includes(product.Product.Name)){
            autoAmount1800Acc();
        }
        if(productsRelatedToAdvisory.includes(product.Product.Name)){
            autoAmountAdvisory();
        }
        if(productsRelatedToLoanAgreement.includes(product.Product.Name)){
            autoAmountLoan();
        }
        updateQuoteTotals();
        //syncProdToClient(product);
        syncProdsToClient();     
    }

    function syncProdToClient(product){
        //this only uses the qty at time of adding the product; to-do to fix this?
        socket.connect();
            content = {
                page: "Prepared Packages",
                showProgress: false, //determines whether to change to the packages page
                checked: product.selected, //determines whether to add or remove line item
                productName: product.Product.Name, //used to determine which products to display
                productCant: product.currentQuantity, //included in the line item displayed if >1
                question: null, //not currently in use
                quoteTotal: formatMoney(getTotalAmountDue())  //used to display the real amount and calculate the fake amount
            }
            socket.emit("private message", {
                content
            }); 
    }

    function syncProdsToClient(){
        //this only uses the qty at time of adding the product; to-do to fix this?
        socket.connect();
            content = {
                page: "Prepared Packages",
                showProgress: false, //determines whether to change to the packages page
                checked: true, //determines whether to add or remove line item
                productListString: JSON.stringify(tempSelectedProducts),
                quoteTotal: formatMoney(getTotalAmountDue())
            }
            socket.emit("private message", {
                content
            }); 
    }
    function getTotalsDebug(){
        console.log('{!quoteTotalMonthly}');
        console.log('{!quoteTotalAnnual}');
        console.log('{!quoteTotal}');
        console.log(tempSelectedProducts);
    }
    
    function formatMoney(amount){
        if(amount == null){
            return '';
        } else if(amount == 0){
            return '$0.00';
        }
        return '$'+parseFloat(amount).toFixed(2).replace(/\d(?=(\d{3})+\.)/g, '$&,');
    }
    function updateQuoteTotals(){
        console.log('updateQuoteTotals');
        var splittableTotal = 0;
        var nonsplittableTotal = 0;
        var annualAndOneTimeTotal = 0;
        var monthlyTotal = 0;

        for(var prod of tempSelectedProducts){
            if(prod.currentBillingFrequency == 'Monthly' || (prod.Product.Billing_Frequency__c == 'One-Time' && prod.Product.No_Split_Allowed__c)){
                nonsplittableTotal += prod.subtotal;
                if(prod.currentBillingFrequency == 'Monthly' && prod.Product.Billing_Frequency__c != 'Monthly'){
                    prod.numOfPayments = 12;
                    finalProductsMap.get(prod.Id).numOfPayments = 12;
                } else {
                    prod.numOfPayments = 1;
                    finalProductsMap.get(prod.Id).numOfPayments = 1;
                }
            } else {
                splittableTotal += prod.subtotal;
                prod.numOfPayments = numberOfPayments;
                finalProductsMap.get(prod.Id).numOfPayments = numberOfPayments;
            }  
            
            if(prod.currentBillingFrequency == 'Monthly') {
                monthlyTotal += prod.subtotal;
            } else {
                annualAndOneTimeTotal += prod.subtotal;
            }
        }
        splittableProductsTotal = splittableTotal;
        nonsplittableProductsTotal = nonsplittableTotal;

        //create strings for: Annual+OneTime, Monthly, Total Due, Due Today, and Installment Amount(?)
        var dueTodayString = formatMoney(getDueToday());
        var totalDueString = formatMoney(getTotalAmountDue());
        var annualAndOneTimeString = formatMoney(annualAndOneTimeTotal);
        var monthlyString = formatMoney(monthlyTotal);
        var installString = formatMoney(getInstallmentAmount());
        var quoteTotalSeparatedString = annualAndOneTimeString + ' + ' + monthlyString + '/Mo';
        
        document.getElementById('quoteTotal').innerHTML = quoteTotalSeparatedString;
        document.getElementById('quoteText').innerHTML = quoteTotalSeparatedString;
        document.getElementById('totalAnualCost').innerHTML = annualAndOneTimeString;
        document.getElementById('payAmountDue').innerHTML = totalDueString;
        document.getElementById('payAmountToday').innerHTML = dueTodayString;
        document.getElementById('paymentAmount').innerHTML = installString; //financing?

        document.getElementById('finalAmount').innerHTML = dueTodayString;
        document.getElementById('finalAmou').innerHTML = dueTodayString;

        if(monthlyTotal > 0) {
            document.getElementById('finalMonthAmount').innerHTML = monthlyString; 
            document.getElementById('finalMonthAmou').innerHTML = monthlyString;
        } else {
            document.getElementById('finalMonthAmount').innerHTML = ''; 
            document.getElementById('finalMonthAmou').innerHTML = '';
        }

        const date = new Date();
        let day = date.getDate();
        document.getElementById('numDay').innerHTML = day;

        socket.connect();
        content = {
            showProgress:false,
            page: "Payment Details",
            name: "{!businessOwner.First_Name__c} {!businessOwner.Last_Name__c}",
            total: totalDueString, //sets element with id=balanceSectionAmount
            due: dueTodayString, //sets element with id=balanceSectionTitle
            installAmount: installString //sets element with id=monthlyDue
        }
        socket.emit("private message", {
            content
        });
        //Visualforce.remoting.Manager.invokeAction('GuidedSellingControllerExtension.updateQuoteTotals', quoteTotalMonthly, quoteTotalAnnual, function (a,b){console.log(a);console.log(b);});
    }

    //to-do: factor in no split allowed field?
    function calcFinance(payte, showClient) {
        console.log('calcFinance '+showClient+','+payte);
        //var payTe = document.getElementById('payTerms').value;
        switch (payte) {
            case 'No Financing':
                payTerms = 'yrl';
                numberOfPayments = 1;
                document.getElementById('financingScript').style.display = "none";
            break;
            case '2 Pay':
                payTerms = '2pay';
                numberOfPayments = 2;
                document.getElementById('financingScript').style.display = "block";
                document.getElementById('planLength').innerHTML = '2';
            break;
            case '3 Pay':
                payTerms = '3pay';
                numberOfPayments = 3;
                document.getElementById('financingScript').style.display = "block";
                document.getElementById('planLength').innerHTML = '3';
            break;
            case '4 Pay':
                payTerms = '4pay';
                numberOfPayments = 4;
                document.getElementById('financingScript').style.display = "block";
                document.getElementById('planLength').innerHTML = '4';
            break;
            case '6 Pay':
                payTerms = '6pay';
                numberOfPayments = 6;
                document.getElementById('financingScript').style.display = "block";
                document.getElementById('planLength').innerHTML = '5';
            break;
            case 'Apply for Monthly Installments':
                payTerms = 'mon';
                numberOfPayments = 12;
                document.getElementById('financingScript').style.display = "block";
                document.getElementById('planLength').innerHTML = '12';
            break;
        }
        document.getElementById('planTerms').innerHTML = payte;
        updateQuoteTotals();

        if(showClient == true) {
            socket.connect();
            content = {
                showProgress: true,
                page: "Payment Details",
                name: "{!businessOwner.First_Name__c} {!businessOwner.Last_Name__c}",
                total: formatMoney(getTotalAmountDue()), //sets element with id=balanceSectionAmount
                due: formatMoney(getDueToday()), //sets element with id=balanceSectionTitle
                installAmount: formatMoney(getInstallmentAmount()) //sets element with id=monthlyDue
            }
            socket.emit("private message", {
                content
            });
        }
        return;
        

        var month = document.getElementById('quoteTotal').innerHTML;
        var monthData = month.split("+");
        var monthly = monthData[1];
        monthly = monthly.replace(' $','');
        monthly = monthly.replace('/Mo','');

        var oneTime = document.getElementById('onTime').innerHTML;

        var total = document.getElementById('originalValue').innerHTML; //psuedo variable for annual + one time totals
        total = total.replace('$','');
        total = total.replace(',','');

        var tTotal = total - oneTime; //pretty sure this is just the annual price
        var newTotal = tTotal - monthly; //annual minus monthly ???
        var today = 0; 
        var newToday = 0; 
        var t = total; //annual + one time totals

        
        //today = (annual - monthly) / number of payments

        newToday = parseFloat(today) + parseFloat(monthly) + parseFloat(oneTime);
        monthly = parseFloat(monthly);
        var quoteTotal = parseFloat(newToday).toFixed(2);
        quoteTotal = '$' + quoteTotal.replace(/\d(?=(\d{3})+\.)/g, '$&,');
        t = '$' + t.replace(/\d(?=(\d{3})+\.)/g, '$&,');
        today = parseFloat(today).toFixed(2);
        today = '$' + today.replace(/\d(?=(\d{3})+\.)/g, '$&,');

        document.getElementById('payAmountDue').innerHTML = t;
        document.getElementById('quoteTotal').innerHTML = t + ' + $' + monthly + '/Mo'; 
        document.getElementById('quoteText').innerHTML = t + ' + $' + monthly + '/Mo'; 

        document.getElementById('planTerms').innerHTML = payTe;
        document.getElementById('payAmountToday').innerHTML = quoteTotal;
        document.getElementById('finalAmou').innerHTML = quoteTotal;
        document.getElementById('finalMonthAmou').innerHTML = '';
        document.getElementById('finalAmount').innerHTML = quoteTotal;
        document.getElementById('finalMonthAmount').innerHTML = '';
        document.getElementById('paymentAmount').innerHTML = today;

        if(showClient == true) {
            socket.connect();
            content = {
                showProgress: true,
                page: "Payment Details",
                name: "{!businessOwner.First_Name__c} {!businessOwner.Last_Name__c}",
                total: t, //sets element with id=balanceSectionAmount
                due: quoteTotal, //sets element with id=balanceSectionTitle
                installAmount: formatMoney(getInstallmentAmount()) //sets element with id=monthlyDue
            }
            socket.emit("private message", {
                content
            });
        }
    }

    function saveBusinessName() {
        document.getElementById('waitingScreen').style.display = "flex";
        var name = document.getElementById('businessName').value;
        var type = $('[data-id="entityIntro"]').val();
        
        if(name != '' && name != null) {
            Visualforce.remoting.Manager.invokeAction('GuidedSellingControllerExtension.saveBusinessData', name, businessId, type, accId, function(r,e) {
                if(e.status) {
                    nextSection(1, '1-800Accountant Blast', 'formBody', 'blastBody');
                    goToBlast();
                    //CallApexMethod();

                    $('[data-id="entity"]').val(type);
                    entitySelected = type;
                    document.getElementById('waitingScreen').style.display = "none";
                } else if(e.type === 'exception') {
                    alert(e.message);
                } else {
                    alert(e.message);
                }
            });
        }
    }

    function saveClientInfo(infoType) {
        var businessOwnerId = "{!businessOwner.Id}";
        var email = '';
        var phone = '';
        var address = '';
        var city = '';
        var state = '';
        var zip = '';
        var country = '';

        if(infoType == 'personal') {
            email = document.getElementById('emailModalEditClientInfo').value;
            phone = document.getElementById('phoneModalEditClientInfo').value;
            address = '';
            city = '';
            state = '';
            zip = '';
            country = '';
        } 

        if(infoType == 'billing') {
            email = '';
            phone = '';
            address = document.getElementById('streetAddress').value;
            city = document.getElementById('cityAddress').value;
            state = $('[data-id="stateAddress"]').val();
            zip = document.getElementById('zipAddress').value;
            country = $('[data-id="countryAddress"]').val();
        }

        if(businessOwnerId != '' && businessOwnerId != null) {
            Visualforce.remoting.Manager.invokeAction('GuidedSellingControllerExtension.saveClientInfo', infoType, businessId, businessOwnerId, accId, email, phone, address, city, state, zip, country, function(r,e) {
                if(e.status) {
                    if(infoType == 'personal') {
                        document.getElementById('busOwnerPhone').innerHTML = phone;
                        document.getElementById('busOwnerEmail').innerHTML = email;
                        closeModalEditClientInfo();
                    } 
                    if(infoType == 'billing') {
                        document.getElementById('busOwnerAddress').innerHTML = address;
                        document.getElementById('busOwnerCity').innerHTML = city + ',';
                        document.getElementById('busOwnerState').innerHTML = state;
                        document.getElementById('busOwnerZip').innerHTML = zip;
                        document.getElementById('busOwnerCountry').innerHTML = country;
                        closeModalEditBillingAdd();
                    }
                } else if(e.type === 'exception') {
                    if(infoType == 'personal') {
                        document.getElementById("modalEditClientInfoErrors").innerHTML = e.message + "<br/>\n<pre>" + e.where + "</pre>";
                    } 
                    if(infoType == 'billing') {
                        document.getElementById("modalEditBillingAddErrors").innerHTML = e.message + "<br/>\n<pre>" + e.where + "</pre>";
                    }
                } else {
                    if(infoType == 'personal') {
                        document.getElementById("modalEditClientInfoErrors").innerHTML = e.message + "<br/>\n<pre>" + e.where + "</pre>";
                    } 
                    if(infoType == 'billing') {
                        document.getElementById("modalEditBillingAddErrors").innerHTML = e.message + "<br/>\n<pre>" + e.where + "</pre>";
                    }
                }
            });
        }
    }
    
    function savePayTerms() {
        lastPayTerms = document.getElementById("payTerms").value;
        closeModalEditPayTerms(false);
        //calcFinance(true);
    }

    function skipToSale() {
        hideAll();
        closeModalOptions();
        document.getElementById('features').style.display = "block";
        nextSection(14, '1-800Accountant Introduction', 'postPurchase', 'features');
    }

    function skipDoNotSave() {
        hideAll();
        closeModalOptions();
        confimCloseModalEditPackage();
        document.getElementById('features').style.display = "block";
        nextSection(14, '1-800Accountant Introduction', 'postPurchase', 'features');
    }

    function updateStates() {
        var stateResi = $('[data-id="state"]').val();
        stateBilli = "{!businessOwner.State__c}";

        if (stateBilli == '' || stateBilli == null) { 
            stateBilli = stateResi;
        }
        document.getElementById("busOwnerState").innerHTML = stateBilli;
        $('[data-id="stateAddress"]').val(stateBilli);
    }

    function updateEntity(entity) {
        entitySelected = entity.value;
    }

    function searchProds(name) {
console.log('searchProds '+name);
        const rowList = document.getElementById("AllPlan").childNodes[0].childNodes;
        for (let i = 1; i < rowList.length; i++) {
            var className = rowList[i].className;
            if(!className){
                continue;
            }
            className = className.replace('row ','');
            if(name != 'all' && name.value != '' && name.value != null) {
                if(className != null && className != '' && className != undefined) { 
                    className = className.toLowerCase();
                    if(!className.includes(name.value)) {
                        rowList[i].style.display = 'none';
                    }
                }
            } else {
                if(className != null && className != '' && className != undefined) { 
                    if(entity != 'Personal Only' && className == 'Personal Tax Advisory') {
                        rowList[i].style.display = 'none';
                    } else {
                        rowList[i].style.display = 'table-row';
                    }
                }
            }
        }
    }

    var oppId = "{!opportunity.Id}";
    function doSubmit() {
        var environment = "{!environment}";
        //var oppId = "{!opportunity.Id}"; //generateQuoteButton
        document.getElementById('generateQuoteButton').textContent = "Next Section";
        var selectedProducts = '{!tempSelectedProducts}';

        if(flagDoSubmit == false) {
            document.getElementById('waitingScreen').style.display = "flex";
            console.log('doSubmit');
            Visualforce.remoting.Manager.invokeAction('GuidedSellingControllerExtension.doSubmit', environment, JSON.stringify(tempSelectedProducts), oppId, accId, payTerms, bookkeepingStartDate, bookkeepingEndDate, useStaticPackage, getTotalAmountDue(), function(r,e) {
                if(e.status) {
                    var data = e.result;
                    const dataList = data.split(",");
                    if(dataList[1] == 'VIP') {
                        schedulerURL = dataList[0] + '?TID=DiscoveryVIP' + '&WID=' + dataList[2] + '&EmailCampaignID=' + dataList[3];
                    } else {
                        schedulerURL = dataList[0] + '?TID=' + dataList[1] + '&WID=' + dataList[2] + '&EmailCampaignID=' + dataList[3];
                    }
                    
                    document.getElementById('waitingScreen').style.display = "none";
                    flagDoSubmit = true;
                } else {
                    console.log('e.exception: ' + e.type);
                }
            });  
        }  
    }

    function getChargeOverURL() {

        var oppId = "{!opportunity.Id}";

        Visualforce.remoting.Manager.invokeAction('GuidedSellingControllerExtension.getChargeOverURL', oppId, function(r,e) {
            if(e.status) {
                //var coURL = e.result + '?utm_source=Sales&utm_term=Sales&utm_medium=Pricing+Calculator';
                var coURL = e.result + '?utm_source=Sales&utm_term=Sales&utm_medium=Guided+Selling';
                document.getElementById('Changeover').src = coURL;

                secondaryDisp = 'Sale';  
                whenDisposition = 'beforePayment';

            } else {
                console.log('e.exception: ' + e.type);
            }
        });    

    }

    function endPresentation() {
        whenDisposition = 'sale';
        saveNoteEditor();
        dispositionCall();
    }

    function optionEnd(reason) {
        document.getElementById('stopPres').style.opacity = 1;
        document.getElementById('stopPres').removeAttribute('disabled'); 

        if(reason.value == 'notLLC') {
            notEntityType = 'noLLC';
        } else if(reason.value == 'incomplete') {
            secondaryDisp = 'Cancelled';
        } else if(reason.value == 'notInterested') {
            secondaryDisp = 'Not Interested'; 
        }        
    }

    function closePresentation() {
        saveNoteEditor();
        dispositionCall();
    }

    function dispositionCall() {

        socket.connect();
        var id = '{!$CurrentPage.parameters.rId}';
        var siteToShow = '';
        console.log('Id of the record to open the event: ' + id);

        if(whenDisposition == 'early' || whenDisposition == 'beforePayment') {
            siteToShow = 'notSale';
        } else if(whenDisposition == 'afterPayment' || whenDisposition == 'sale') {
            siteToShow = 'sale';
        }  

        Visualforce.remoting.Manager.invokeAction('GuidedSellingControllerExtension.dispositionEvent', id, secondaryDisp, primaryDisp, accId, function(r,e) {
            if(e.status) {
                content = {
                    page: siteToShow, 
                }
                socket.emit("private message", {
                    content
                });

                //window.open('https://1800accountant--staging.sandbox.lightning.force.com/' + id + '');
                window.open('{!sfBaseUrl}'+'/' + id + '');
                window.close();
            } else {
                console.log('e.exception: ' + e.type);
            }
        });
    }

    function showFicaExample() {
        document.getElementById('ficaBtns').style.display = "none";
        scrollToDiv('#verticalSectLine3', '#selfEmploymentTaxLLC', 1100);
        getSlideTwo();
    }

    function scrollToDiv(divToScroll, mainDiv, num) {
        var container = $(mainDiv);
        var scrollTo = $(divToScroll);
        var position = scrollTo.offset().top - (container.offset().top + container.scrollTop()) + num;
        container.animate({
            scrollTop: position
        });
    }

    function changePaperlossSalaryAmount(selection) {
        var selectedValue = selection.value;
        document.getElementById("amountforExample").innerHTML = selectedValue;
        var selectValue = selectedValue.replace(',','');

        var optOne = '';
        var optTwo = '';
        var optThree = '';
        var optFour = '';

        if(selectedValue == '30,000') {
            optOne = '5,000';
            optTwo = '10,000';
            optThree = '15,000';
            optFour = '20,000';
        } else if(selectedValue == '50,000') {
            optOne = '5,000';
            optTwo = '10,000';
            optThree = '20,000';
            optFour = '30,000';
        } else if(selectedValue == '75,000') {
            optOne = '10,000';
            optTwo = '20,000';
            optThree = '35,000';
            optFour = '50,000';
        } else if(selectedValue == '100,000') {
            optOne = '10,000';
            optTwo = '25,000';
            optThree = '50,000';
            optFour = '75,000';
        }

        var options = document.getElementById("businessLossAmount").options;
        options[1].innerHTML = optOne;
        options[2].innerHTML = optTwo;
        options[3].innerHTML = optThree;
        options[4].innerHTML = optFour;

        var res = '';
        var loss = '';
        var businessLossAmount = document.getElementById("businessLossAmount").value;
        if(null != businessLossAmount && '' != businessLossAmount && undefined != businessLossAmount && 'Select an Amount' != businessLossAmount) {
            loss = businessLossAmount;
            businessLossAmount = businessLossAmount.replace(',','');
            res = parseInt(selectValue) - parseInt(businessLossAmount);
            res = res.toLocaleString('en-US');
            document.getElementById("incomeforExample").innerHTML = res;
        }

        socket.connect();
        content = {
            salaryAmount: selectedValue,
            businessLossAmount: loss, 
            agi: res
        }
        socket.emit("private message", {
            content
        });
    }

    function changePaperlossbusinessLossAmount(selection) {
        var selectedValue = selection.value;
        var selectValue = selectedValue.replace(',','');
        var incomeValue = document.getElementById("amountforExample").innerHTML;
        incomeValue = incomeValue.replace(',','');
        var res = parseInt(incomeValue) - parseInt(selectValue);

        res = res.toLocaleString('en-US');

        document.getElementById("incomeforExample").innerHTML = res;

        socket.connect();
        content = {
            businessLossAmount: selectedValue, 
            agi: res
        }
        socket.emit("private message", {
            content
        });
    }

    function showAllAnswers(show) {

        if(requiredFields.includes("firstBusiness") && !document.getElementById('firstBusiness').childNodes[1].childNodes[3].childNodes[0].checked) {
            hideQuestion(show, 'Is this your first business?');
        }
        if(requiredFields.includes("years") && !document.getElementById('years').childNodes[1].childNodes[3].childNodes[0].checked) {
            hideQuestion(show, 'How many years have you been in business?');
        }
        if(requiredFields.includes("entity") && !document.getElementById('entity').childNodes[1].childNodes[3].childNodes[0].checked) {
            hideQuestion(show, 'What entity type is your business?');
        }
        if(requiredFields.includes("industry") && !document.getElementById('industry').childNodes[1].childNodes[3].childNodes[0].checked) {
            hideQuestion(show, 'What industry is your business in?');
        }
        if(requiredFields.includes("domState") && !document.getElementById('domState').childNodes[1].childNodes[3].childNodes[0].checked) {
            hideQuestion(show, 'What is your state of incorporation?');
        }
        // if(requiredFields.includes("state") && !document.getElementById('state').childNodes[1].childNodes[3].childNodes[0].checked) {
        //     hideQuestion(show, 'What is your state of residence?');
        // }
        if(requiredFields.includes("foreignState") && !document.getElementById('foreignState').childNodes[1].childNodes[3].childNodes[0].checked) {
            hideQuestion(show, 'What is your foreign state of incorporation?');
        }
        if(requiredFields.includes("startup") && !document.getElementById('startup').childNodes[1].childNodes[3].childNodes[0].checked) {
            hideQuestion(show, 'How much have you invested so far in start-up costs?');
        }
        if(requiredFields.includes("revenue") && !document.getElementById('revenue').childNodes[1].childNodes[3].childNodes[0].checked) {
            hideQuestion(show, 'What do you anticipate your revenue to be over the next 12 months?');
        }
        if(requiredFields.includes("profit") && !document.getElementById('profit').childNodes[1].childNodes[3].childNodes[0].checked) {
            hideQuestion(show, 'What do you project your 1st year profit to be over the next 12 months?');
        }
        // if(requiredFields.includes("investor") && !document.getElementById('investor').childNodes[1].childNodes[3].childNodes[0].checked) {
        //     hideQuestion(show, 'What is your total investor funding?');
        // }
        if(requiredFields.includes("transactions") && !document.getElementById('transactions').childNodes[1].childNodes[3].childNodes[0].checked) {
            hideQuestion(show, 'How many monthly bookkeeping transactions do you have?');
        }
        if(requiredFields.includes("owners") && !document.getElementById('owners').childNodes[1].childNodes[3].childNodes[0].checked) {
            hideQuestion(show, 'How many owners does your business have?');
        }
        // if(requiredFields.includes("foreignOwners") && !document.getElementById('foreignOwners').childNodes[1].childNodes[3].childNodes[0].checked) {
        //     hideQuestion(show, 'How many owners are outside the USA?');
        // }
        if(requiredFields.includes("runPayroll") && !document.getElementById('runPayroll').childNodes[1].childNodes[3].childNodes[0].checked) {
            hideQuestion(show, 'Have you run payroll before?');
        }
        if(requiredFields.includes("hasEmpContractors") && !document.getElementById('hasEmpContractors').childNodes[1].childNodes[3].childNodes[0].checked) {
            hideQuestion(show, 'Do you currently have any employees?');
        }
        if(requiredFields.includes("employees") && !document.getElementById('employees').childNodes[1].childNodes[3].childNodes[0].checked) {
            hideQuestion(show, 'How many employees do you have?');
        }
        // if(requiredFields.includes("contractors") && !document.getElementById('contractors').childNodes[1].childNodes[3].childNodes[0].checked) {
        //     hideQuestion(show, 'How many contractors do you have?');
        // }
        if(requiredFields.includes("filingStatus") && !document.getElementById('filingStatus').childNodes[1].childNodes[3].childNodes[0].checked) {
            hideQuestion(show, 'What is your tax filing status?');
        }
        if(requiredFields.includes("household") && !document.getElementById('household').childNodes[1].childNodes[3].childNodes[0].checked) {
            hideQuestion(show, 'What was your household W-2 income last year?');
        }
        // if(requiredFields.includes("foreignIncome") && !document.getElementById('foreignIncome').childNodes[1].childNodes[3].childNodes[0].checked) {
        //     hideQuestion(show, 'Do you have any foreign sourced income?');
        // }
        if(requiredFields.includes("hasRentals") && !document.getElementById('hasRentals').childNodes[1].childNodes[3].childNodes[0].checked) {
            hideQuestion(show, 'Do you currently have any rental properties?');
        }
        if(requiredFields.includes("rental") && !document.getElementById('rental').childNodes[1].childNodes[3].childNodes[0].checked) {
            hideQuestion(show, 'How many rental properties do you have?');
        }
        // if(requiredFields.includes("k1s") && !document.getElementById('k1s').childNodes[1].childNodes[3].childNodes[0].checked) {
        //     hideQuestion(show, 'How many K-1s are from other investments?');
        // }
        if(requiredFields.includes("workingHome") && !document.getElementById('workingHome').childNodes[1].childNodes[3].childNodes[0].checked) {
            hideQuestion(show, 'Will you be working from home?');
        }
        if(requiredFields.includes("footage") && !document.getElementById('footage').childNodes[1].childNodes[3].childNodes[0].checked) {
            hideQuestion(show, 'What is the approximate square footage of your home office?');
        }
        if(requiredFields.includes("drive") && !document.getElementById('drive').childNodes[1].childNodes[3].childNodes[0].checked) {
            hideQuestion(show, 'Will you use your personal vehicle for business purposes?');
        }
        if(requiredFields.includes("miles") && !document.getElementById('miles').childNodes[1].childNodes[3].childNodes[0].checked) {
            hideQuestion(show, 'How many business-related miles do you estimate you’ll drive per year?');
        }
        // if(requiredFields.includes("website") && !document.getElementById('website').childNodes[1].childNodes[3].childNodes[0].checked) {
        //     hideQuestion(show, 'Will your business have a web or e-commerce presence?');
        // }
    }

    function sendQuoteByEmail() {
        var oppId = "{!opportunity.Id}";

        Visualforce.remoting.Manager.invokeAction('GuidedSellingControllerExtension.sentEmail', oppId, function(r,e) {
            if(e.status) {
                document.getElementById('emailSent').style.display = "flex";
            } else {
                console.log('e.exception: ' + e.type);
            }
        });    
    }

    function followUpCall() {
        var conId = "{!opportunity.Account.Primary_Contact__c}";
        var userName = "{!opportunity.Account.Owner.Name}";
        var userId = "{!opportunity.Account.Owner.Id}";
        //window.open('https://1800accountant.com/sfapi/schedule/index_stage.php?WID=' + conId + '&Setter=' + userName + '&SetterID=' + userId + '');
        window.open('{!schedulerBaseUrl}'+'?WID=' + conId + '&Setter=' + userName + '&SetterID=' + userId + '');

        isfinalScreen = true;
        secondaryDisp = 'Follow-Up';  
        whenDisposition = 'beforePayment';
    }

    function openNoteEditor() {
        document.getElementById('addNoteBtn').style.display = "none";
        document.getElementById('modalNotes').style.display = "block";
    }

    function closeNoteEditor() {
        document.getElementById('addNoteBtn').style.display = "block";
        document.getElementById('modalNotes').style.display = "none";
    }

    function saveNoteEditor() {
        var title = document.getElementById("noteTitle").value; 
        var body = document.getElementById("noteBody").value;
        var accId = '{!opportunity.Account.Primary_Contact__c}';

        if(title != '' && body != '') {
            Visualforce.remoting.Manager.invokeAction('GuidedSellingControllerExtension.saveNote', accId, title, body, function(r,e) {
                if(e.status) {
                    // document.getElementById("noteTitle").value = ''; 
                    // document.getElementById("noteBody").value = '';
                } else {
                    console.log('e.exception: ' + e.type);
                }
            });
        }
    }

    function isOpportunityPaid() {
        var oppId = "{!opportunity.Id}";
        Visualforce.remoting.Manager.invokeAction('GuidedSellingControllerExtension.isOpportunityPaid', oppId, function(r,e) {
            if(e.status) {
                if(e.result == 'Closed Won') {
                    nextSection(31, 'Post Purchase', 'paymentDetails', 'postPurchase');
                } else {
                    document.getElementById("PostPurchaseError").innerHTML = 'Please finish the payment in order to continue with the follow up.';
                }
            } else {
                console.log('e.exception: ' + e.type);
            }
        });          
    }

        </script>
</apex:outputPanel>
<body class="body" id="body" onload="loadingPage()">
    <div class="se-pre-con"></div>
    <p id="onTime" style="display: none;"></p>
    <p id="originalValue" style="display: none;"></p>
    <div id="waitingScreen">
        <div id="whiteWaiting">
            <div id="loading" style="margin-left: 46%; margin-top: 17%;">
                <img id="waiting" src="{!$Resource.waiting}" />
            </div>
        </div>
    </div>
    <div class="slds-scope">
        <div class="myapp">
            <div class="slds-grid slds-wrap">
                <div class="slds-grid_vertical">
                    <!-- Section 1 Screen divided: Client details / What client sees -->
                    <div class="slds-col slds-size--1-of-1 slds-small-size--2-of-2 slds-medium-size--4-of-4">
                        <!-- Client details -->
                        <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="formClientDet">
                            <div class="quote" id="quoteEdit">
                                <table id="quoteTable">
                                    <tr>
                                        <td>
                                            <p class="quoteTitle">Current Quote</p>
                                        </td>
                                        <td>
                                            <!-- <p class="quoteText" id="quoteText" >${!quoteTotalAnnual} + ${!quoteTotalMonthly}/Mo</p> -->
                                            <p class="quoteText" id="quoteText">$0 + $0/Mo</p>
                                        </td>
                                        <td>
                                            <button class="start" style="color: white;" id="quoteEdit" onclick="showModalEditPackage();">Edit</button>
                                        </td>
                                    </tr>
                                </table>
                            </div>
                            <div class="title">
                                <p class="titleTxt">
                                    Client Details
                                </p>
                            </div>
                            <div class="accInfo">
                                <p class="AccName">
                                    {!opportunity.Account.Name}
                                </p>
                                <p class="leadSource">
                                    Lead from {!opportunity.Account.Lead_Source__c}
                                </p>
                            </div>
                            <div class="accContacts">
                                <table id="contTable">
                                    <thead></thead>
                                    <tbody id="tableBody">
                                        <tr>
                                            <td>
                                                <spam class="contIni">
                                                    <apex:outputText value="{!LEFT(businessOwner.First_Name__c,1)}"></apex:outputText>
                                                </spam>
                                            </td>
                                            <td>
                                                <div class="contInfo">
                                                    <p class="contName">{!businessOwner.First_Name__c} {!businessOwner.Last_Name__c}</p>
                                                    <p class="contRole">Primary Contact</p>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="contContaInfo">
                                                    <p class="contPhone" id="contphone">{!businessOwner.Phone__c}</p>
                                                    <p class="contEmail">{!businessOwner.Email__c}</p>
                                                    <p class="contContactId" style="display: none;">{!businessOwner.Id}</p>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="contMore">
                                                    <span class="material-icons" onClick="prinrowMenu0();" id="btnSubMenu">more_vert</span>
                                                    <div id="prinmenu0" class="dropdown-content">
                                                        <a onclick="editPrimary(this);"><span class="material-icons" id="icon">edit</span>&nbsp;Edit Partner</a>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <!-- What client sees -->
                        <div class="slds-box slds-box_x-small slds-text-align_center slds-m-around--x-small" id="formClientView">
                            <button class="openClientView" onclick="showModalClientScreen();"><span class="material-icons" style="vertical-align: middle; color: rgba(18, 23, 36, 0.65);">open_in_full</span></button>
                            <iframe
                                id="inlineFrameExample"
                                title="Inline Frame Example"
                                height="100%"
                                width="100%"
                                class="dims"
                                scrolling="yes"
                                src="{!siteBaseUrl}/Client?rId={!$CurrentPage.parameters.rId}&session={!$CurrentPage.parameters.sessionId}&token={!$CurrentPage.parameters.pToken}"
                            >
                            </iframe>
                            <p class="noteClientView">What <span id="additionalName0">{!opportunity.Account.Primary_Contact__r.FirstName} {!opportunity.Account.Primary_Contact__r.LastName}</span> is seeing</p>
                        </div>
                    </div>
                </div>
                <!-- Section 2 Introduccion/Script -->
                <div class="slds-col slds-size--1-of-1 slds-small-size--1-of-2 slds-medium-size--2-of-4">
                    <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="menuBody">
                        <table class="menu">
                            <tr>
                                <td>
                                    <div class="form-floating">
                                        <select class="form-select" id="menuOpts" onchange="goToPage()">
                                            <option>Introduction</option>
                                            <!--0-->
                                            <option>1-800Accountant Blast</option>
                                            <!--1-->
                                            <option>Business Discovery Intro</option>
                                            <!--2-->
                                            <option>Discovery Questions</option>
                                            <!--3-->
                                            <option>Review Business Discovery</option>
                                            <!--4-->
                                            <option>Proper Entity Structuring</option>
                                            <!--5-->
                                            <option>Flow Through Entity</option>
                                            <!--6-->
                                            <option>Start-up Costs</option>
                                            <!--7-->
                                            <option>Medical Deduction</option>
                                            <!--8-->
                                            <option>Vehicle Deduction</option>
                                            <!--9-->
                                            <option>Home Office Deduction</option>
                                            <!--10-->
                                            <option>Code Section 199A Deduction</option>
                                            <!--11-->
                                            <option>Review Deductions</option>
                                            <!--12-->
                                            <option>Paperloss</option>
                                            <!--13-->
                                            <option>1-800Accountant Introduction</option>
                                            <!--14-->
                                            <option>Your Expert Accountant Team</option>
                                            <!--15-->
                                            <option>Features - 1-800Accountant Portal</option>
                                            <!--16-->
                                            <option>Features - Appointment Scheduler</option>
                                            <!--17-->
                                            <option>Features - Message Center</option>
                                            <!--18-->
                                            <option>Features - Tax Planner</option>
                                            <!--19-->
                                            <option>Features - Bookkeeping</option>
                                            <!--20-->
                                            <option>Features - Document Center</option>
                                            <!--21-->
                                            <option>Features - Invoices</option>
                                            <!--22-->
                                            <option>Features - Mobile App</option>
                                            <!--23-->
                                            <option>Features - Summary</option>
                                            <!--24-->
                                            <option>Features - Business &#38; Personal...</option>
                                            <!--25-->
                                            <option>Features - Filing ECE</option>
                                            <!--26-->
                                            <option>Features - Wrap Up</option>
                                            <!--27-->
                                            <option>Prepared Packages</option>
                                            <!--28-->
                                            <option>Verify Information</option>
                                            <!--29-->
                                            <!--<option>Schedule Discovery Meeting</option>-->
                                            <!--////30-->
                                            <option>Payment Details</option>
                                            <!--30-->
                                            <option>Post Purchase</option>
                                            <!--31-->
                                        </select>
                                    </div>
                                </td>
                                <td>
                                    <div class="form-btn">
                                        <button class="btnStop" onclick="showModalCancel();"><i class="fas fa-times">&nbsp;&nbsp;</i>End Presentation</button>
                                    </div>
                                </td>
                            </tr>
                        </table>
                        <hr />
                        <div class="modal" id="modalClientScreenn">
                            <div id="modalClientScreen">
                                <div id="modalHeader" style="padding-top: 1%; position: relative; background: white;">
                                    <p class="modalHeaderTitle" style="display: inline-flex; padding: 0px 0px 13px 55px;">
                                        Example of what &nbsp;<span id="additionalName0">{!opportunity.Account.Primary_Contact__r.FirstName} {!opportunity.Account.Primary_Contact__r.LastName}</span>&nbsp; should be seeing
                                    </p>
                                    <button class="modalHeaderClose" style="margin-top: 0%; padding: 0px 55px 15px 0px; color: rgba(18, 23, 36, 0.91);" onclick="closeModalClientScreen();"><i class="fas fa-times"></i></button>
                                </div>
                                <div class="clientContent">
                                    <div id="modalBody">
                                        <iframe
                                            id="inlineFrameExampleClient"
                                            title="Inline Frame Example"
                                            height="100%"
                                            width="100%"
                                            class="dimss"
                                            scrolling="yes"
                                            src="{!siteBaseUrl}/Client?rId={!$CurrentPage.parameters.rId}&session={!$CurrentPage.parameters.sessionId}&token={!$CurrentPage.parameters.pToken}"
                                        >
                                        </iframe>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal" id="modalSkip">
                            <div class="content">
                                <div id="modalBody">
                                    <p class="modalTitle">
                                        Do you want to skip the rest of the presentation and go to the available packages?
                                    </p>
                                    <br />
                                    <p class="modalDesc">
                                        You’ll still be able to adjust the packages.
                                    </p>
                                </div>
                                <div id="modalFooter">
                                    <button class="btnCloseModal" onclick="closeModalSkip();">Cancel</button>
                                    <button class="start" style="color: white;" id="skiptoSalee" onclick=""><i class="fas fa-forward">&nbsp;&nbsp;</i>Skip to Quote</button>
                                </div>
                            </div>
                        </div>
                        <div class="modal" id="modalCancel">
                            <div class="content">
                                <div id="modalBody">
                                    <p class="modalTitle">
                                        Why are you ending the presentation?
                                    </p>
                                    <br />
                                    <p class="modalOption">
                                        Select an option (Required)
                                    </p>
                                    <input type="radio" id="notLLC" name="reasonEnding" value="notLLC" onchange="optionEnd(this);" />
                                    <label for="notLLC" style="font-weight: 400; font-size: 16px; line-height: 24px; letter-spacing: 0.01em; color: rgba(18, 23, 36, 0.91);">The client’s business entity is not an LLC</label>
                                    <br />
                                    <input type="radio" id="incomplete" name="reasonEnding" value="incomplete" onchange="optionEnd(this);" />
                                    <label for="incomplete" style="font-weight: 400; font-size: 16px; line-height: 24px; letter-spacing: 0.01em; color: rgba(18, 23, 36, 0.91);">The consultation is incomplete</label>
                                    <br />
                                    <input type="radio" id="notInterested" name="reasonEnding" value="notInterested" onchange="optionEnd(this);" />
                                    <label for="notInterested" style="font-weight: 400; font-size: 16px; line-height: 24px; letter-spacing: 0.01em; color: rgba(18, 23, 36, 0.91);">The client is not interested</label>
                                    <div id="errorMess" style="display: inline-flex;">
                                        <span class="material-icons" id="errorMessageIcon" style="padding-left: 2%; padding-top: 3%;">warning_amber</span>
                                        <p id="errorMessageText">
                                            Ending the presentation will not hang up your phone call. You will need to return to your phone application to disconnect the call with the client.
                                        </p>
                                    </div>
                                </div>
                                <div id="modalFooter">
                                    <button class="btnCloseModal" onclick="closeModalCancel();">Cancel</button>
                                    <button class="start" style="color: white;" disabled="disabled" id="stopPres" onclick="closePresentation();"><i class="fas fa-times">&nbsp;&nbsp;</i>Stop Presentation</button>
                                </div>
                            </div>
                        </div>
                        <div class="modal" id="modal">
                            <div class="content">
                                <div id="modalHeader">
                                    <table id="modalHeaderTable">
                                        <tr>
                                            <td>
                                                <p class="modalHeaderTitle">Add a Partner</p>
                                            </td>
                                            <td>
                                                <button class="modalHeaderClose" onclick="closeModal();"><i class="fas fa-times"></i></button>
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                                <div id="modalBody">
                                    <div class="form-floating">
                                        <input type="text" class="form-control" id="firstName" name="firstName" placeholder="Partner’s First Name (Required)" required="required" onkeyup="disableButton();" />
                                        <label for="firstName">Partner’s First Name (Required)</label>
                                    </div>
                                    <div class="form-floating">
                                        <input type="text" class="form-control" id="lastName" name="lastName" placeholder="Partner’s Last Name (Required)" required="required" onkeyup="disableButton();" />
                                        <label for="lastName">Partner’s Last Name (Required)</label>
                                    </div>
                                    <div class="form-floating">
                                        <input type="text" class="form-control" id="role" placeholder="Role (Optional)" onkeyup="disableButton();" />
                                        <label for="role">Role (Optional)</label>
                                    </div>
                                    <div class="form-floating">
                                        <input type="email" class="form-control" id="email" name="email" placeholder="Email (Required)" required="required" onkeyup="disableButton();" style="width: 360px;" />
                                        <label for="email">Email (Required)</label>
                                        <p id="emailFormatError" style="color: red;"></p>
                                    </div>
                                    <div class="form-floating">
                                        <input type="tel" class="form-control" id="phone" name="phone" placeholder="Phone (Required)" required="required" onkeyup="disableButton();" style="width: 240px;" />
                                        <label for="phone">Phone (Required)</label>
                                    </div>
                                    <p id="contactId" style="display: none;"></p>
                                    <p id="partnerResponseErrors" style="color: red;"></p>
                                </div>
                                <div id="modalFooter">
                                    <button class="btnCloseModal" onclick="closeModal();">Cancel</button>
                                    <button class="btnAddRow" id="btnAddRow" onclick="addRow(this); return false;">Add Partner</button>
                                </div>
                            </div>
                        </div>
                        <div class="modal" id="confirmQuoteModal">
                            <div class="content" style="padding-top: 2%; width: 500px; transform: translateY(100%);">
                                <div id="modalHeader">
                                    <table id="modalHeaderTable">
                                        <tr>
                                            <td>
                                                <p class="modalHeaderTitle">Do you want to generate the quote?</p>
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                                <div id="modalBody" style="padding-top: 7px; padding-bottom: 50px;">
                                    <div class="form-floating">
                                        <label style="padding: 0;">After generating the quote you will only be able to make edits (such as payment terms and adding/removing products) by going to the Opportunity in Salesforce.</label>
                                    </div>
                                </div>
                                <div id="modalFooter">
                                    <button class="btnCloseModal" onclick="closeModalConfirmQuote();" style="padding: 10px 16px;">Keep Editing</button>
                                    <button
                                        type="button"
                                        class="start"
                                        id="generateQuoteButtonModal"
                                        style="color: white; opacity: 1;"
                                        onclick="closeModalConfirmQuote();doSubmit();nextSection(30, 'Payment Details', 'verifyInformation', 'paymentDetails');getChargeOverURL();"
                                    >
                                        Generate the Quote
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div class="modal" id="modalEditPackage">
                            <div class="content" style="width: 980px; padding-bottom: 10px; height: 570px; transform: translateY(15%);">
                                <div id="modalHeader">
                                    <table id="modalHeaderTable">
                                        <tr>
                                            <td>
                                                <p class="modalHeaderTitle">Edit Package</p>
                                            </td>
                                            <td>
                                                <button class="modalHeaderClose" id="closeOptions" onclick="closeModalEditPackage();"><i class="fas fa-times"></i></button>
                                                <button class="btnmodal" id="skiptoSale" style="float: right; margin-right: 4%;" onclick="showOptionsToClose();"><i class="fas fa-forward">&nbsp;&nbsp;</i>Skip to Quote</button>
                                                <button class="start" style="color: white; opacity: 1; float: right; margin-right: 4%;" id="discardEditing" onclick="confimCloseModalEditPackage();">
                                                    <i class="fas fa-times">&nbsp;&nbsp;</i>Discard Changes
                                                </button>
                                                <button class="start" style="float: right; margin-right: 4%;" id="keepEditing" onclick="backToEditing();">
                                                    <span class="material-icons" style="vertical-align: middle;">keyboard_return&nbsp;&nbsp;</span>Keep Editing
                                                </button>
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                                <div id="modalBodyPackage">
                                    <div class="tabs">
                                        <div class="tab-2">
                                            <label for="tab2-1" id="tab2-1label">Current Plan</label>
                                            <input id="tab2-1" name="tabs-two" type="radio" checked="checked" onchange="displayTablePlan('currentPlan', this, false);" />
                                            <div></div>
                                        </div>
                                        <div class="tab-2">
                                            <label for="tab2-2" id="tab2-2label">All</label>
                                            <input id="tab2-2" name="tabs-two" type="radio" onchange="displayTablePlan('AllPlan', this, false);" />
                                            <div></div>
                                        </div>
                                        <div class="tab-2">
                                            <label for="tab2-3" id="tab2-3label">Frequent</label>
                                            <input id="tab2-3" name="tabs-two" type="radio" onchange="displayTablePlan('frequentPlan', this, false);" />
                                            <div></div>
                                        </div>
                                        <div class="tab-2">
                                            <label for="tab2-4" id="tab2-4label">Business</label>
                                            <input id="tab2-4" name="tabs-two" type="radio" onchange="displayTablePlan('businessPlan', this, false);" />
                                            <div></div>
                                        </div>
                                        <div class="tab-2">
                                            <label for="tab2-5" id="tab2-5label">Personal</label>
                                            <input id="tab2-5" name="tabs-two" type="radio" onchange="displayTablePlan('personalPlan', this, false);" />
                                            <div></div>
                                        </div>
                                        <div class="tab-2">
                                            <label for="tab2-6" id="tab2-6label">Payroll</label>
                                            <input id="tab2-6" name="tabs-two" type="radio" onchange="displayTablePlan('payrollPlan', this, false);" />
                                            <div></div>
                                        </div>
                                        <div class="tab-2">
                                            <label for="tab2-7" id="tab2-7label">Bookkeeping</label>
                                            <input id="tab2-7" name="tabs-two" type="radio" onchange="displayTablePlan('bookkeepingPlan', this, false);" />
                                            <div></div>
                                        </div>
                                        <div class="tab-2">
                                            <label for="tab2-8" id="tab2-8label">Entity Formation</label>
                                            <input id="tab2-8" name="tabs-two" type="radio" onchange="displayTablePlan('entityFormationPlan', this, false);" />
                                            <div></div>
                                        </div>
                                    </div>
                                    <table id="modalBodyTitleTable">
                                        <tr>
                                            <td>
                                                <div class="form-floating" style="margin-bottom: 2%; width: 55%;">
                                                    <input
                                                        type="text"
                                                        placeholder="Search products"
                                                        class="form-control"
                                                        id="searchProd"
                                                        style="margin-bottom: 5%; padding-left: 40px; padding-top: 9px; width: 300%;"
                                                        onkeyup="searchProds(this)"
                                                    />
                                                    <label for="searchProd" id="searchProd">
                                                        <span class="material-icons" style="color: rgba(18, 23, 36, 0.65);">
                                                            <span class="material-icons">search</span>
                                                        </span>
                                                    </label>
                                                </div>
                                            </td>
                                        </tr>
                                    </table>
                                    <apex:outputpanel id="dProds">
                                        <div data-checkbox-group="data-checkbox-group" id="currentPlan">
                                            <div class="planPackageTable" id="selectedPlan">
                                                <div class="row" style="border-bottom: 1px solid rgba(18, 23, 36, 0.2);">
                                                    <div class="col" style="text-align: center; vertical-align: middle; padding-left: 24px;">
                                                        <input
                                                            data-master-checkbox="data-master-checkbox"
                                                            type="checkbox"
                                                            id="master-currentPlan"
                                                            name="master-currentPlan"
                                                            class="master"
                                                            checked="checked"
                                                            value="true"
                                                            onchange="checkAll(this);"
                                                        />
                                                    </div>
                                                    <div class="col" style="padding-left: 30px;">
                                                        <p class="planPackageTableTitle" style="text-align: left;">Product</p>
                                                    </div>
                                                    <div class="col" style="padding-left: 315px;">
                                                        <p class="planPackageTableTitle" style="text-align: left;">Cost</p>
                                                    </div>
                                                    <div class="col" style="padding-left: 62px;">
                                                        <p class="planPackageTableTitle" style="width: 160px; text-align: left;">Frequency</p>
                                                    </div>
                                                    <div class="col" style="padding-left: 0px;">
                                                        <p class="planPackageTableTitle" style="text-align: left; width: 110px;">Quantity</p>
                                                    </div>
                                                    <div class="col" style="padding-left: 16px;">
                                                        <p class="planPackageTableTitle" style="text-align: right;">Subtotal</p>
                                                    </div>
                                                </div>
                                                <!-- <apex:repeat value="{!defaultProducts}" var="prod"> -->
                                                <apex:repeat value="{!tempSelectedProducts}" var="prod">
                                                    <c:GuidedSellingProductLine p="{!prod}" tab="dProds" />
                                                </apex:repeat>
                                            </div>
                                        </div>
                                    </apex:outputpanel>
                                    <apex:outputpanel id="fProds">
                                        <div data-checkbox-group="data-checkbox-group" id="AllPlan" style="display: none;">
                                            <div class="planPackageTable">
                                                <div class="row" style="border-bottom: 1px solid rgba(18, 23, 36, 0.2);">
                                                    <div class="col" style="text-align: center; vertical-align: middle; padding-left: 24px;">
                                                        <input data-master-checkbox="data-master-checkbox" type="checkbox" id="master-AllPlan" name="master-AllPlan" class="master" onchange="checkAll(this);" />
                                                    </div>
                                                    <div class="col" style="padding-left: 30px;">
                                                        <p class="planPackageTableTitle" style="text-align: left;">Product</p>
                                                    </div>
                                                    <div class="col" style="padding-left: 315px;">
                                                        <p class="planPackageTableTitle" style="text-align: left;">Cost</p>
                                                    </div>
                                                    <div class="col" style="padding-left: 62px;">
                                                        <p class="planPackageTableTitle" style="width: 160px; text-align: left;">Frequency</p>
                                                    </div>
                                                    <div class="col" style="padding-left: 0px;">
                                                        <p class="planPackageTableTitle" style="text-align: left; width: 110px;">Quantity</p>
                                                    </div>
                                                    <div class="col" style="padding-left: 16px;">
                                                        <p class="planPackageTableTitle" style="text-align: right;">Subtotal</p>
                                                    </div>
                                                </div>
                                                <apex:repeat value="{!finalProducts}" var="prod">
                                                    <c:GuidedSellingProductLine p="{!prod}" tab="fProds" />
                                                </apex:repeat>
                                            </div>
                                        </div>
                                    </apex:outputpanel>
                                    <apex:outputpanel id="frProds">
                                        <div data-checkbox-group="data-checkbox-group" id="frequentPlan">
                                            <div class="planPackageTable">
                                                <div class="row" style="border-bottom: 1px solid rgba(18, 23, 36, 0.2);">
                                                    <div class="col" style="text-align: center; vertical-align: middle; padding-left: 24px;">
                                                        <input data-master-checkbox="data-master-checkbox" type="checkbox" id="master-frequentPlan" name="master-frequentPlan" class="master" onchange="checkAll(this);" />
                                                    </div>
                                                    <div class="col" style="padding-left: 30px;">
                                                        <p class="planPackageTableTitle" style="text-align: left;">Product</p>
                                                    </div>
                                                    <div class="col" style="padding-left: 315px;">
                                                        <p class="planPackageTableTitle" style="text-align: left;">Cost</p>
                                                    </div>
                                                    <div class="col" style="padding-left: 62px;">
                                                        <p class="planPackageTableTitle" style="width: 160px; text-align: left;">Frequency</p>
                                                    </div>
                                                    <div class="col" style="padding-left: 0px;">
                                                        <p class="planPackageTableTitle" style="text-align: left; width: 110px;">Quantity</p>
                                                    </div>
                                                    <div class="col" style="padding-left: 16px;">
                                                        <p class="planPackageTableTitle" style="text-align: right;">Subtotal</p>
                                                    </div>
                                                </div>
                                                <apex:repeat value="{!frequentProducts}" var="prod">
                                                    <c:GuidedSellingProductLine p="{!prod}" tab="frProds" />
                                                </apex:repeat>
                                            </div>
                                        </div>
                                    </apex:outputpanel>
                                    <apex:outputpanel id="bProds">
                                        <div data-checkbox-group="data-checkbox-group" id="businessPlan" style="display: none;">
                                            <div class="planPackageTable">
                                                <div class="row" style="border-bottom: 1px solid rgba(18, 23, 36, 0.2);">
                                                    <div class="col" style="text-align: center; vertical-align: middle; padding-left: 24px;">
                                                        <input data-master-checkbox="data-master-checkbox" type="checkbox" id="master-businessPlan" name="master-businessPlan" class="master" onchange="checkAll(this);" />
                                                    </div>
                                                    <div class="col" style="padding-left: 30px;">
                                                        <p class="planPackageTableTitle" style="text-align: left;">Product</p>
                                                    </div>
                                                    <div class="col" style="padding-left: 315px;">
                                                        <p class="planPackageTableTitle" style="text-align: left;">Cost</p>
                                                    </div>
                                                    <div class="col" style="padding-left: 62px;">
                                                        <p class="planPackageTableTitle" style="width: 160px; text-align: left;">Frequency</p>
                                                    </div>
                                                    <div class="col" style="padding-left: 0px;">
                                                        <p class="planPackageTableTitle" style="text-align: left; width: 110px;">Quantity</p>
                                                    </div>
                                                    <div class="col" style="padding-left: 16px;">
                                                        <p class="planPackageTableTitle" style="text-align: right;">Subtotal</p>
                                                    </div>
                                                </div>
                                                <apex:repeat value="{!businessProducts}" var="prod">
                                                    <c:GuidedSellingProductLine p="{!prod}" tab="bProds" />
                                                </apex:repeat>
                                            </div>
                                        </div>
                                    </apex:outputpanel>
                                    <apex:outputpanel id="pProds">
                                        <div data-checkbox-group="data-checkbox-group" id="personalPlan" style="display: none;">
                                            <div class="planPackageTable">
                                                <div class="row" style="border-bottom: 1px solid rgba(18, 23, 36, 0.2);">
                                                    <div class="col" style="text-align: center; vertical-align: middle; padding-left: 24px;">
                                                        <input data-master-checkbox="data-master-checkbox" type="checkbox" id="master-personalPlan" name="master-personalPlan" class="master" onchange="checkAll(this);" />
                                                    </div>
                                                    <div class="col" style="padding-left: 30px;">
                                                        <p class="planPackageTableTitle" style="text-align: left;">Product</p>
                                                    </div>
                                                    <div class="col" style="padding-left: 315px;">
                                                        <p class="planPackageTableTitle" style="text-align: left;">Cost</p>
                                                    </div>
                                                    <div class="col" style="padding-left: 62px;">
                                                        <p class="planPackageTableTitle" style="width: 160px; text-align: left;">Frequency</p>
                                                    </div>
                                                    <div class="col" style="padding-left: 0px;">
                                                        <p class="planPackageTableTitle" style="text-align: left; width: 110px;">Quantity</p>
                                                    </div>
                                                    <div class="col" style="padding-left: 16px;">
                                                        <p class="planPackageTableTitle" style="text-align: right;">Subtotal</p>
                                                    </div>
                                                </div>
                                                <apex:repeat value="{!personalProducts}" var="prod">
                                                    <c:GuidedSellingProductLine p="{!prod}" tab="pProds" />
                                                </apex:repeat>
                                            </div>
                                        </div>
                                    </apex:outputpanel>
                                    <apex:outputpanel id="payProds">
                                        <div data-checkbox-group="data-checkbox-group" id="payrollPlan" style="display: none;">
                                            <div class="planPackageTable">
                                                <div class="row" style="border-bottom: 1px solid rgba(18, 23, 36, 0.2);">
                                                    <div class="col" style="text-align: center; vertical-align: middle; padding-left: 24px;">
                                                        <input data-master-checkbox="data-master-checkbox" type="checkbox" id="master-payrollPlan" name="master-payrollPlan" class="master" onchange="checkAll(this);" />
                                                    </div>
                                                    <div class="col" style="padding-left: 30px;">
                                                        <p class="planPackageTableTitle" style="text-align: left;">Product</p>
                                                    </div>
                                                    <div class="col" style="padding-left: 315px;">
                                                        <p class="planPackageTableTitle" style="text-align: left;">Cost</p>
                                                    </div>
                                                    <div class="col" style="padding-left: 62px;">
                                                        <p class="planPackageTableTitle" style="width: 160px; text-align: left;">Frequency</p>
                                                    </div>
                                                    <div class="col" style="padding-left: 0px;">
                                                        <p class="planPackageTableTitle" style="text-align: left; width: 110px;">Quantity</p>
                                                    </div>
                                                    <div class="col" style="padding-left: 16px;">
                                                        <p class="planPackageTableTitle" style="text-align: right;">Subtotal</p>
                                                    </div>
                                                </div>
                                                <apex:repeat value="{!payrollProducts}" var="prod">
                                                    <c:GuidedSellingProductLine p="{!prod}" tab="payProds" />
                                                </apex:repeat>
                                            </div>
                                        </div>
                                    </apex:outputpanel>
                                    <apex:outputpanel id="bkkProds">
                                        <div data-checkbox-group="data-checkbox-group" id="bookkeepingPlan" style="display: none;">
                                            <div class="planPackageTable">
                                                <div class="row" style="border-bottom: 1px solid rgba(18, 23, 36, 0.2);">
                                                    <div class="col" style="text-align: center; vertical-align: middle; padding-left: 24px;">
                                                        <input data-master-checkbox="data-master-checkbox" type="checkbox" id="master-bookkeepingPlan" name="master-bookkeepingPlan" class="master" onchange="checkAll(this);" />
                                                    </div>
                                                    <div class="col" style="padding-left: 30px;">
                                                        <p class="planPackageTableTitle" style="text-align: left;">Product</p>
                                                    </div>
                                                    <div class="col" style="padding-left: 315px;">
                                                        <p class="planPackageTableTitle" style="text-align: left;">Cost</p>
                                                    </div>
                                                    <div class="col" style="padding-left: 62px;">
                                                        <p class="planPackageTableTitle" style="width: 160px; text-align: left;">Frequency</p>
                                                    </div>
                                                    <div class="col" style="padding-left: 0px;">
                                                        <p class="planPackageTableTitle" style="text-align: left; width: 110px;">Quantity</p>
                                                    </div>
                                                    <div class="col" style="padding-left: 16px;">
                                                        <p class="planPackageTableTitle" style="text-align: right;">Subtotal</p>
                                                    </div>
                                                </div>
                                                <apex:repeat value="{!bookkeepingProducts}" var="prod">
                                                    <c:GuidedSellingProductLine p="{!prod}" tab="bkkProds" />
                                                </apex:repeat>
                                            </div>
                                        </div>
                                    </apex:outputpanel>
                                    <apex:outputpanel id="eProds">
                                        <div data-checkbox-group="data-checkbox-group" id="entityFormationPlan" style="display: none;">
                                            <div class="planPackageTable">
                                                <div class="row" style="border-bottom: 1px solid rgba(18, 23, 36, 0.2);">
                                                    <div class="col" style="text-align: center; vertical-align: middle; padding-left: 24px;">
                                                        <input data-master-checkbox="data-master-checkbox" type="checkbox" id="master-entityFormationPlan" name="master-entityFormationPlan" class="master" onchange="checkAll(this);" />
                                                    </div>
                                                    <div class="col" style="padding-left: 30px;">
                                                        <p class="planPackageTableTitle" style="text-align: left;">Product</p>
                                                    </div>
                                                    <div class="col" style="padding-left: 315px;">
                                                        <p class="planPackageTableTitle" style="text-align: left;">Cost</p>
                                                    </div>
                                                    <div class="col" style="padding-left: 62px;">
                                                        <p class="planPackageTableTitle" style="width: 160px; text-align: left;">Frequency</p>
                                                    </div>
                                                    <div class="col" style="padding-left: 0px;">
                                                        <p class="planPackageTableTitle" style="text-align: left; width: 110px;">Quantity</p>
                                                    </div>
                                                    <div class="col" style="padding-left: 16px;">
                                                        <p class="planPackageTableTitle" style="text-align: right;">Subtotal</p>
                                                    </div>
                                                </div>
                                                <apex:repeat value="{!entityFormationProducts}" var="prod">
                                                    <c:GuidedSellingProductLine p="{!prod}" tab="eProds" />
                                                </apex:repeat>
                                            </div>
                                        </div>
                                    </apex:outputpanel>
                                </div>
                                <div id="modalFooter" style="padding-top: 10px; padding-bottom: 10px; border-top: 1px solid rgba(18, 23, 36, 0.2); bottom: 0; position: fixed; width: 100%; display: inline;">
                                    <button class="btnSaveEditPackage btnmodal" id="saveEditPackage" onclick="closeAndSave();" style="float: left;">Save Changes</button>
                                    <span id="switchText">Show the draft to the client</span>
                                    <label class="switch" id="showPackagelabel" style="float: left;">
                                        <apex:inputCheckbox html-data-id="showPackage" id="showPackage" onchange="showWaitingScreen(this);" />
                                        <span class="slider round" id="showPackageBtn"></span>
                                    </label>
                                    <p class="modalNote">Current Quote</p>
                                    <p class="modalAmount" id="quoteTotal">$0 + $0/Mo</p>
                                </div>
                            </div>
                        </div>
                        <div class="modal" id="modalOptionCloseEditing">
                            <div class="content">
                                <div id="modalHeader">
                                    <button type="button" class="backBtn" id="optionBack" onclick="backToEdit();">
                                        <span class="material-icons" style="vertical-align: middle; color: rgba(18, 23, 36, 0.65);">arrow_back</span>&nbsp;&nbsp;Skip to Quote
                                    </button>
                                </div>
                                <div id="modalBody">
                                    <p class="modalTitle">
                                        This package has unsaved changes.
                                    </p>
                                    <button type="button" class="start" id="optionSkipSave" style="color: #ffffff; opacity: 1; margin-top: 2%; padding: 8px 16px;" onclick="skipToSale();">
                                        <span class="material-icons" style="vertical-align: middle;">fast_forward</span>&nbsp;&nbsp;Save and Skip to the Sale
                                    </button>
                                    <button
                                        type="button"
                                        class="start"
                                        id="optionSkipNotSave"
                                        style="color: rgba(18, 23, 36, 0.91); opacity: 1; margin-top: 2%; background-color: #ffffff; border: 1px solid rgba(18, 23, 36, 0.2); padding: 8px 16px;"
                                        onclick="skipDoNotSave();"
                                    >
                                        <span class="material-icons" style="vertical-align: middle;">fast_forward</span>&nbsp;&nbsp;Skip to the Sale Without Saving
                                    </button>
                                    <button
                                        type="button"
                                        class="start"
                                        id="optionBackk"
                                        style="color: #1776b6; opacity: 1; margin-top: 2%; background-color: #ffffff; border: 1px solid rgba(18, 23, 36, 0.2); padding: 8px 16px;"
                                        onclick="backToEdit();"
                                    >
                                        <span class="material-icons" style="vertical-align: middle;">keyboard_return</span>&nbsp;&nbsp;Keep Editing the Package
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div id="contextMenu" class="context-menu" style="display: none;">
                            <ul>
                                <li onmouseover="highlight();"><a>Highlight</a></li>
                                <li onmouseover="unhighlight();" id="edit"><a>Un-Highlight</a></li>
                            </ul>
                        </div>
                        <button type="button" class="" id="addNoteBtn" onclick="openNoteEditor();">Appointment Notes&nbsp;&nbsp;<span class="material-icons" style="vertical-align: middle;">keyboard_arrow_up</span></button>
                        <div id="modalNotes">
                            <div id="modalNotesHeader">
                                <p>
                                    Appointment Notes
                                </p>
                                <button type="button" class="" id="modalNotesHeaderBtn" onclick="closeNoteEditor();saveNoteEditor()"><span class="material-icons" style="vertical-align: middle;">keyboard_arrow_down</span></button>
                            </div>
                            <div id="modalNotesContent">
                                <p id="modalNoteNote"><span class="material-icons" style="vertical-align: middle; color: #3b7a80;">task_alt</span>&nbsp;This note is saved to the contact.</p>
                                <div class="form-floating">
                                    <input type="text" class="form-control" id="noteTitle" name="noteTitle" placeholder="Note Title" />
                                    <label for="noteTitle" style="color: rgba(18, 23, 36, 0.65);">Note Title</label>
                                </div>
                                <div class="form-floating">
                                    <textarea class="form-control" id="noteBody" placeholder="Enter a note" name="noteBody" rows="4" cols="50"></textarea>
                                    <label for="noteBody" style="color: rgba(18, 23, 36, 0.65);">Enter a note</label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="formBody">
                        <div class="title">
                            <p class="titleTxt">
                                Introduction
                            </p>
                        </div>
                        <div class="formTxt">
                            <p class="normalTxt" id="script">
                                Good day, <span id="additionalFirstName0">{!opportunity.Account.Primary_Contact__r.FirstName}</span>.
                                <br />
                                <br />
                                This is {!opportunity.Account.Owner.FirstName} with 1-800Accountant
                                <span style="display: {!IF(opportunity.Account.Lead_Source__c == '1-800Accountant', 'none', 'inline')}">, {!opportunity.Account.Lead_Source__c} accounting and tax partner</span>. We have your tax savings
                                analysis scheduled for this time. Ready to get started? Great!
                            </p>
                            <div id="proceed">
                                <p id="proceedTxt">
                                    ✋ Make sure you have already mentioned that this call will be monitored or recorded for quality and training purposes.
                                </p>
                            </div>
                            <p class="normalTxt" id="script">
                                <spam id="txtRequiredOrange">(Required) </spam>
                                <br />
                                What is your business name?
                            </p>
                            <div class="form-floating">
                                <input type="text" class="form-control" id="businessName" placeholder="Business Name" required="required" value="{!opportunity.Account.Name}" />
                                <label for="businessName">Business Name</label>
                            </div>
                            <br />
                            <p class="normalTxt" id="script">
                                <spam id="txtRequiredOrange">(Required) </spam>
                                <br />
                                What entity type is your business?
                            </p>
                            <div class="form-floating">
                                <apex:selectList styleClass="form-select"
                                    style="padding-top: 14px; width: 40%; height: 52px; margin-top: 2%;"
                                    id="entityIntro"
                                    html-data-id="entityIntro"
                                    value="{!defaultEntity}"
                                    onchange="getNextBtn('Entity Type');populateAnswer('What entity type is your business?', this, true, true);updateEntity(this)"
                                    size="1"
                                >
                                    <apex:selectOptions value="{!entityType}"></apex:selectOptions>
                                </apex:selectList>
                            </div>
                            <!--<div Id="proceed">
      <p Id="proceedTxt">
         ✋ Only proceed with the Guided Selling experience if the entity type is an LLC.
      </p>
      </div>-->
                            <br />
                            <p class="normalTxt" id="script">
                                <spam id="txtRequiredOrange">(Required) </spam>
                                <br />
                                Do you have any business partners?
                            </p>
                            <div id="buttons">
                                <button type="button" class="yesBtn" id="yesBtn1" style="color: black;" onclick="getJoinCall();">Yes</button>
                                <div class="divider" />
                                <button type="button" class="noBtn" html-data-id="noBtn1" id="noBtn1" style="color: black;" onclick="NoBusiPart();">No</button>
                            </div>
                        </div>
                        <div class="formTxt" id="joinCall">
                            <p class="normalTxt" id="script">
                                <spam id="txtRequiredOrange">(Required) </spam>
                                <br />
                                Will they be joining us on the call today?
                            </p>
                            <div id="buttons">
                                <button type="button" class="yesBtn" id="yesBtn2" style="color: black;" onclick="addPartners();">Yes</button>
                                <div class="divider" />
                                <button type="button" class="noBtn" id="noBtn2" style="color: black;" onclick="NoDecisionTwo();">No</button>
                            </div>
                        </div>
                        <div class="formTxt" id="partnersTable">
                            <table id="headerTable">
                                <tr>
                                    <td>
                                        <p class="subTitleTxt">Client’s Partners</p>
                                    </td>
                                    <td>
                                        <div id="btnAdd">
                                            <a class="addPartnerstwo" onclick="broadcastChannel();"><i class="fas fa-plus"></i>&nbsp;Add a Partner</a>
                                        </div>
                                    </td>
                                </tr>
                            </table>
                            <div class="partTable">
                                <table id="addPartTable1">
                                    <tr>
                                        <td>
                                            <center>
                                                <p class="blast">No partners added yet</p>
                                            </center>
                                        </td>
                                    </tr>
                                </table>
                                <table id="addPartTable2">
                                    <thead></thead>
                                    <tbody id="tBody"></tbody>
                                </table>
                            </div>
                        </div>
                        <div class="formTxt">
                            <p class="normalTxt" id="script">
                                <apex:outputText rendered="{!useBTPLegalZoomScript}">
                                    So, it looks like you purchased through LegalZoom their Compliance Package. Our part in this package includes us, 1-800ACCOUNTANT, completing the preparation and filing of your business income tax return.
                                    So, congratulations, you’ve made a great choice in becoming a 1-800ACCOUNTANT client!
                                </apex:outputText>
                                <apex:outputText rendered="{!useBAPLegalZoomScript}">
                                    So, it looks like you purchased through LegalZoom their Business Advantage Pro Package. Through this package, you have access to our Tax Hotline for Q&amp;A on a new topic each time, of your choosing.
                                </apex:outputText>
                                OK, let’s get started.
                                <br />
                                <br />
                            </p>
                            <div id="buttons">
                                <button type="button" class="start" id="start" style="color: white;" onclick="saveBusinessName();"><i class="fas fa-arrow-right">&nbsp;</i>Next Section</button>
                                <div class="divider" />
                                <p class="blast">1-800Accountant Blast</p>
                                <!-- <button class="btnmodal" id="btnDissolution" style="display: block;margin-top: 7%;" onclick="">Start Business Dissolution</button> -->
                            </div>
                        </div>
                    </div>
                    <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="blastBody">
                        <div class="backMenu">
                            <button type="button" class="backBtn" onclick="backSection('Introduction', 'formBody', 'blastBody');">
                                <table id="backTable">
                                    <tr>
                                        <td>
                                            <span class="material-icons" id="backArrow">arrow_back</span>
                                        </td>
                                        <td>
                                            <p class="backTitle">Previous section</p>
                                            <p class="backDesc">Introduction</p>
                                        </td>
                                    </tr>
                                </table>
                            </button>
                        </div>
                        <div class="title">
                            <p class="titleTxt">
                                1-800Accountant Blast
                            </p>
                        </div>
                        <div class="formTxt">
                            <p class="normalTxt" id="script">
                                <span id="additionalFirstName2">{!opportunity.Account.Primary_Contact__r.FirstName}</span>, a quick background on 1-800Accountant before we get started. We are a nationwide accounting firm specializing in
                                start-up businesses. We realize accounting and taxes can cause a certain amount of anxiety for a new business owner, but like most things in today’s digital world these anxieties can be overcome with the help
                                of education, advice, and technology. That said, our next steps are to teach you. Getting educated will prepare you to move forward with confidence.
                                <br />
                                <br />
                                Great, let’s get started.
                                <br />
                                <br />
                            </p>
                            <div id="buttons">
                                <button type="button" class="start" id="secondStart" style="color: white;" onclick="nextSection(2, 'Business Discovery Intro','blastBody','businessDisc')">
                                    <i class="fas fa-arrow-right">&nbsp;</i>Next Section
                                </button>
                                <div class="divider" />
                                <p class="blast">Start Business Discovery</p>
                            </div>
                        </div>
                    </div>
                    <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="businessDisc">
                        <div class="backMenu">
                            <button type="button" class="backBtn" onclick="backSection('1-800Accountant Blast', 'blastBody', 'businessDisc');">
                                <table id="backTable">
                                    <tr>
                                        <td>
                                            <span class="material-icons" id="backArrow">arrow_back</span>
                                        </td>
                                        <td>
                                            <p class="backTitle">Previous section</p>
                                            <p class="backDesc">1-800Accountant Blast</p>
                                        </td>
                                    </tr>
                                </table>
                            </button>
                        </div>
                        <div class="title">
                            <p class="titleTxt">
                                Business Discovery Intro
                            </p>
                        </div>
                        <div class="formTxt">
                            <p class="normalTxt" id="script">
                                First, <span id="additionalFirstName3">{!opportunity.Account.Primary_Contact__r.FirstName}</span>, we are going to do some Discovery to find out exactly where you and the business are today.
                                <br />
                                <br />
                                The answers to all these questions will give us a baseline on where to begin educating you on potential deductions that are available to you now, as well as, what deductions may be available to you in the
                                future and tax strategies you can pursue that may dramatically reduce your taxes. The main goal here is to ensure you are going down a path that gives you and your business the best chance for success.
                                <br />
                                <br />
                                So, are we ready to hop into the Discovery portion of the consultation,
                                <span id="additionalFirstName4">{!opportunity.Account.Primary_Contact__r.FirstName}</span>?
                                <br />
                                <br />
                            </p>
                            <div id="engage">
                                <p id="engageTxt">
                                    ✋ Engage with a congratulatory response
                                </p>
                            </div>
                            <div id="buttons">
                                <button type="button" class="start" id="secondStart" style="color: white;" onclick="nextSection(3, 'Discovery Questions', 'businessDisc', 'businessDiscParts')">
                                    <i class="fas fa-arrow-right">&nbsp;</i>Next Section
                                </button>
                                <div class="divider" />
                                <p class="blast">Discovery Questions</p>
                            </div>
                        </div>
                    </div>
                    <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="businessDiscParts">
                        <div class="backMenu">
                            <button type="button" class="backBtn discoveryBackButton" onclick="backThirdSection();">
                                <table id="backTable">
                                    <tr>
                                        <td>
                                            <span class="material-icons" id="backArrow">arrow_back</span>
                                        </td>
                                        <td>
                                            <p class="backTitle">Previous section</p>
                                            <p class="backDesc" id="busiDisc">Business Discovery Intro</p>
                                        </td>
                                    </tr>
                                </table>
                            </button>
                        </div>
                        <div class="title">
                            <p class="titleTxt" id="discoveryQuestionTitle">
                                Business Discovery
                            </p>
                        </div>
                        <div id="engagee">
                            <p id="engageTxt">
                                ✋ Review all answers with the client before proceeding.
                            </p>
                        </div>
                        <div class="formTxt">
                            <div id="mainCategoryDivAnchor"></div>
                            <div class="form-floating" id="mainCategoryDiv">
                                <select class="form-select" id="mainCategory" onchange="filterQuestions(this.value)">
                                    <option class="placeHold" selected="selected" disabled="disabled" hidden="hidden" style="color: #ce0b74;">Show All Questions</option>
                                    <option>Show All Questions</option>
                                    <option>Required Questions</option>
                                    <option>Unanswered Required Questions</option>
                                    <option>Years</option>
                                    <option>Entity &amp; Industry</option>
                                    <option>State</option>
                                    <option>Business Income</option>
                                    <option>Bookkeeping</option>
                                    <option>Owners</option>
                                    <option>Payroll</option>
                                    <option>Filing</option>
                                    <option>Personal Income</option>
                                    <option>Deductions</option>
                                </select>
                                <div id="showAllAnswer" style="margin: 10px 0px 10px 20px;">
                                    <label class="switch">
                                        <apex:inputCheckbox html-data-id="showAllAnswers" onchange="showAllAnswers(this.checked);" />
                                        <span class="slider round"></span>
                                    </label>
                                    <spam id="showtxt" style="display: inline-flex; vertical-align: super; color: #000000;">Show all answered questions to the client</spam>
                                </div>
                            </div>
                            <table id="quetionsTable">
                                <tr id="firstBusiness">
                                    <td class="actionRow">
                                        <spam id="showtxt">Show</spam>
                                        <label class="switch">
                                            <!-- <input type="checkbox" id="firstBusiness" style="opacity: 0.25;" disabled="disabled" checked="checked"/> -->
                                            <apex:inputCheckbox html-data-id="checkboxEmployees" onchange="hideQuestion(this.checked, 'Is this your first business?');" />
                                            <span class="slider round"></span>
                                        </label>
                                    </td>
                                    <td class="questionRow">
                                        <p class="normalTxt" id="script">
                                            <!-- <spam id="txtRequiredOrange">(Required)</spam> -->
                                            <apex:outputPanel rendered="{!CONTAINS(requiredFields, 'First Business')}">
                                                <spam id="txtRequiredOrange">(Required) </spam>
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!!CONTAINS(requiredFields, 'First Business')}">
                                                <spam id="txtRequired">(Optional)</spam>
                                            </apex:outputPanel>
                                            <br />
                                            Is this your first business?
                                        </p>
                                        <div id="buttonsDisc">
                                            <button type="button" class="yesBtn" id="yesBtn1.1" style="color: black;" onclick="YesDecision(1.1);getNextBtn('First Business');populateAnswer('Is this your first business?', 'Yes', false);">
                                                Yes
                                            </button>
                                            <div class="divider" />
                                            <button type="button" class="noBtn" id="noBtn1.1" style="color: black;" onclick="NoDecision(1.1);getNextBtn('First Business');populateAnswer('Is this your first business?', 'No', false);">
                                                No
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                                <tr id="years">
                                    <td class="actionRow">
                                        <spam id="showtxt">Show</spam>
                                        <label class="switch">
                                            <!-- <input type="checkbox" id="yearsBusiness" style="opacity: 0.25;" disabled="disabled" checked="checked"/> -->
                                            <apex:inputCheckbox html-data-id="checkboxYears" onchange="hideQuestion(this.checked, 'How many years have you been in business?');" />
                                            <span class="slider round"></span>
                                        </label>
                                    </td>
                                    <td class="questionRow">
                                        <p class="normalTxt" id="script">
                                            <apex:outputPanel rendered="{!CONTAINS(requiredFields, 'Years In Business')}">
                                                <spam id="txtRequiredOrange">(Required) </spam>
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!!CONTAINS(requiredFields, 'Years In Business')}">
                                                <spam id="txtRequired">(Optional)</spam>
                                            </apex:outputPanel>
                                            <br />
                                            How many years have you been in business?
                                        </p>
                                        <div class="form-floating" id="buttonsDisc">
                                            <!-- <input type="text" class="form-control" id="years" style="padding-top: 11px;height: 53px;" placeholder="0" onchange="getNextBtn();populateAnswer('2', this);"/> -->
                                            <apex:selectList styleClass="form-select"
                                                style="height: auto; padding-top: 5%; padding-bottom: 5%;"
                                                id="years"
                                                html-data-id="years"
                                                value="{!defaultYearsInBusiness}"
                                                onchange="getNextBtn('Years In Business');populateAnswer('How many years have you been in business?', this, true);"
                                                size="1"
                                            >
                                                <apex:selectOptions value="{!yearsInBusiness}"></apex:selectOptions>
                                            </apex:selectList>
                                        </div>
                                    </td>
                                </tr>
                                <tr id="entity">
                                    <td class="actionRow">
                                        <spam id="showtxt">Show</spam>
                                        <label class="switch">
                                            <apex:inputCheckbox html-data-id="checkboxEntity" onchange="hideQuestion(this.checked, 'What entity type is your business?');" />
                                            <span class="slider round"></span>
                                        </label>
                                    </td>
                                    <td class="questionRow">
                                        <p class="normalTxt" id="script">
                                            <apex:outputPanel rendered="{!CONTAINS(requiredFields, 'Entity Type')}">
                                                <spam id="txtRequiredOrange">(Required) </spam>
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!!CONTAINS(requiredFields, 'Entity Type')}">
                                                <spam id="txtRequired">(Optional)</spam>
                                            </apex:outputPanel>
                                            <br />
                                            What entity type is your business?
                                        </p>
                                        <div class="form-floating" id="buttonsDisc">
                                            <apex:selectList styleClass="form-select"
                                                style="height: auto; padding-top: 5%; padding-bottom: 5%;"
                                                html-data-id="entity"
                                                value="{!defaultEntity}"
                                                onchange="getNextBtn('Entity Type');populateAnswer('What entity type is your business?', this, true);updateEntity(this)"
                                                size="1"
                                            >
                                                <apex:selectOptions value="{!entityType}"></apex:selectOptions>
                                            </apex:selectList>
                                            <!-- <select class="form-select" style="height: auto;padding-top: 5%;padding-bottom: 5%;" id="domesticState" onchange="getNextBtn('Entity Type');populateAnswer('3', this);">
                  <option class="placeHold" selected="selected" disabled="disabled" hidden="hidden">Select a State</option>
                  <option >State 1</option>
                  </select> -->
                                        </div>
                                    </td>
                                </tr>
                                <tr id="industry">
                                    <td class="actionRow">
                                        <spam id="showtxt">Show</spam>
                                        <label class="switch">
                                            <apex:inputCheckbox html-data-id="checkboxIndustry" onchange="hideQuestion(this.checked, 'What industry is your business in?');" />
                                            <span class="slider round"></span>
                                        </label>
                                    </td>
                                    <td class="questionRow">
                                        <p class="normalTxt" id="script">
                                            <apex:outputPanel rendered="{!CONTAINS(requiredFields, 'Industry Type')}">
                                                <spam id="txtRequiredOrange">(Required) </spam>
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!!CONTAINS(requiredFields, 'Industry Type')}">
                                                <spam id="txtRequired">(Optional)</spam>
                                            </apex:outputPanel>
                                            <br />
                                            What industry is your business in?
                                        </p>
                                        <div class="form-floating" id="buttonsDisc">
                                            <apex:selectList styleClass="form-select"
                                                style="height: auto; padding-top: 5%; padding-bottom: 5%;"
                                                id="industry"
                                                html-data-id="industry"
                                                value="{!defaultIndustry}"
                                                onchange="getNextBtn('Industry Type');populateAnswer('What industry is your business in?', this, true);"
                                                size="1"
                                            >
                                                <apex:selectOptions value="{!industryType}"></apex:selectOptions>
                                            </apex:selectList>
                                        </div>
                                    </td>
                                </tr>
                                <tr id="domState">
                                    <td class="actionRow">
                                        <spam id="showtxt">Show</spam>
                                        <label class="switch">
                                            <apex:inputCheckbox html-data-id="checkboxDomState" onchange="hideQuestion(this.checked, 'What is your state of incorporation?');" />
                                            <span class="slider round"></span>
                                        </label>
                                    </td>
                                    <td class="questionRow">
                                        <p class="normalTxt" id="script">
                                            <apex:outputPanel rendered="{!CONTAINS(requiredFields, 'State of Incorporation')}">
                                                <spam id="txtRequiredOrange">(Required) </spam>
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!!CONTAINS(requiredFields, 'State of Incorporation')}">
                                                <spam id="txtRequired">(Optional)</spam>
                                            </apex:outputPanel>
                                            <br />
                                            What is your state of incorporation?
                                        </p>
                                        <div class="form-floating" id="buttonsDisc">
                                            <apex:selectList styleClass="form-select"
                                                style="height: auto; padding-top: 5%; padding-bottom: 5%;"
                                                id="domState"
                                                html-data-id="domState"
                                                value="{!defaultDomesticState}"
                                                onchange="getNextBtn('State of Incorporation');populateAnswer('What is your state of incorporation?', this, true);"
                                                size="1"
                                            >
                                                <apex:selectOptions value="{!stateOfIncorporation}"></apex:selectOptions>
                                            </apex:selectList>
                                        </div>
                                    </td>
                                </tr>
                                <!-- <tr id="state">
         <td class="actionRow">
             <spam id="showtxt">Show</spam>
             <label class="switch">
                 <apex:inputCheckbox html-data-id="checkboxState" onchange="hideQuestion(this.checked, 'What is your state of residence?');"/>
                 <span class="slider round"></span>
             </label>
         </td>
         <td class="questionRow">
             <p class="normalTxt" id="script">
                 <apex:outputPanel rendered="{!CONTAINS(requiredFields, 'State of Residence')}">  <spam id="txtRequiredOrange">(Required) </spam></apex:outputPanel> 
                 <apex:outputPanel rendered="{!!CONTAINS(requiredFields, 'State of Residence')}"> <spam id="txtRequired">(Optional)</spam> </apex:outputPanel>
                 <br/>
                 What is your state of residence?
             </p>
             <div class="form-floating" id="buttonsDisc">
                 <apex:selectList styleClass="form-select" style="height: auto;padding-top: 5%;padding-bottom: 5%;" id="state" html-data-id="state" value="{defaultPersonalState}" onchange="getNextBtn('State of Residence');populateAnswer('What is your state of residence?', this, true);updateStates();" size="1">
                     <apex:selectOptions value="{stateOfIncorporation}"></apex:selectOptions>
                 </apex:selectList>
             </div>
         </td>
         </tr> -->
                                <tr id="foreignState">
                                    <td class="actionRow">
                                        <spam id="showtxt">Show</spam>
                                        <label class="switch">
                                            <apex:inputCheckbox html-data-id="checkboxForeignState" onchange="hideQuestion(this.checked, 'What is your foreign state of incorporation?');" />
                                            <span class="slider round"></span>
                                        </label>
                                    </td>
                                    <td class="questionRow">
                                        <p class="normalTxt" id="script">
                                            <apex:outputPanel rendered="{!CONTAINS(requiredFields, 'Foreign State')}">
                                                <spam id="txtRequiredOrange">(Required) </spam>
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!!CONTAINS(requiredFields, 'Foreign State')}">
                                                <spam id="txtRequired">(Optional)</spam>
                                            </apex:outputPanel>
                                            <br />
                                            What is your foreign state of incorporation?
                                        </p>
                                        <div class="form-floating" id="buttonsDisc">
                                            <apex:selectList styleClass="form-select"
                                                style="height: auto; padding-top: 5%; padding-bottom: 5%;"
                                                id="foreignState"
                                                html-data-id="foreignState"
                                                value="{!defaultForeignState}"
                                                onchange="getNextBtn('Foreign State');populateAnswer('What is your foreign state of incorporation?', this, true);"
                                                size="1"
                                            >
                                                <apex:selectOptions value="{!stateOfIncorporation}"></apex:selectOptions>
                                            </apex:selectList>
                                        </div>
                                    </td>
                                </tr>
                                <tr id="startup">
                                    <td class="actionRow">
                                        <spam id="showtxt">Show</spam>
                                        <label class="switch">
                                            <apex:inputCheckbox html-data-id="checkboxStartup" onchange="hideQuestion(this.checked, 'How much have you invested so far in start-up costs?');" />
                                            <span class="slider round"></span>
                                        </label>
                                    </td>
                                    <td class="questionRow">
                                        <p class="normalTxt" id="script">
                                            <apex:outputPanel rendered="{!CONTAINS(requiredFields, 'Total Startup Cost')}">
                                                <spam id="txtRequiredOrange">(Required) </spam>
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!!CONTAINS(requiredFields, 'Total Startup Cost')}">
                                                <spam id="txtRequired">(Optional)</spam>
                                            </apex:outputPanel>
                                            <br />
                                            How much have you invested so far in start-up costs?
                                        </p>
                                        <div class="form-floating" id="buttonsDisc">
                                            <apex:selectList styleClass="form-select"
                                                style="height: auto; padding-top: 5%; padding-bottom: 5%;"
                                                id="startup"
                                                html-data-id="startup"
                                                value="{!defaultStartupCosts}"
                                                onchange="getNextBtn('Total Startup Cost');populateAnswer('How much have you invested so far in start-up costs?', this, true);calculateTaxSavings();"
                                                size="1"
                                            >
                                                <apex:selectOptions value="{!moneyAmount}"></apex:selectOptions>
                                            </apex:selectList>
                                        </div>
                                    </td>
                                </tr>
                                <tr id="revenue">
                                    <td class="actionRow">
                                        <spam id="showtxt">Show</spam>
                                        <label class="switch">
                                            <apex:inputCheckbox html-data-id="checkboxRevenue" onchange="hideQuestion(this.checked, 'What do you anticipate your revenue to be over the next 12 months?');" />
                                            <span class="slider round"></span>
                                        </label>
                                    </td>
                                    <td class="questionRow">
                                        <p class="normalTxt" id="script">
                                            <apex:outputPanel rendered="{!CONTAINS(requiredFields, 'Projected 1st Year Revenue')}">
                                                <spam id="txtRequiredOrange">(Required) </spam>
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!!CONTAINS(requiredFields, 'Projected 1st Year Revenue')}">
                                                <spam id="txtRequired">(Optional)</spam>
                                            </apex:outputPanel>
                                            <br />
                                            What do you anticipate your revenue to be over the next 12 months?
                                        </p>
                                        <div class="form-floating" id="buttonsDisc">
                                            <apex:selectList styleClass="form-select"
                                                style="height: auto; padding-top: 5%; padding-bottom: 5%;"
                                                id="revenue"
                                                html-data-id="revenue"
                                                value="{!defaultRevenue}"
                                                onchange="getNextBtn('Projected 1st Year Revenue');populateAnswer('What do you anticipate your revenue to be over the next 12 months?', this, true);"
                                                size="1"
                                            >
                                                <apex:selectOptions value="{!moneyAmount}"></apex:selectOptions>
                                            </apex:selectList>
                                        </div>
                                    </td>
                                </tr>
                                <tr id="profit">
                                    <td class="actionRow">
                                        <spam id="showtxt">Show</spam>
                                        <label class="switch">
                                            <apex:inputCheckbox html-data-id="checkboxProfit" onchange="hideQuestion(this.checked, 'What do you project your 1st year profit to be over the next 12 months?');" />
                                            <span class="slider round"></span>
                                        </label>
                                    </td>
                                    <td class="questionRow">
                                        <p class="normalTxt" id="script">
                                            <apex:outputPanel rendered="{!CONTAINS(requiredFields, 'Projected 1st Year Profit')}">
                                                <spam id="txtRequiredOrange">(Required) </spam>
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!!CONTAINS(requiredFields, 'Projected 1st Year Profit')}">
                                                <spam id="txtRequired">(Optional)</spam>
                                            </apex:outputPanel>
                                            <br />
                                            What do you project your 1st year profit to be over the next 12 months?
                                        </p>
                                        <div class="form-floating" id="buttonsDisc">
                                            <apex:selectList styleClass="form-select"
                                                style="height: auto; padding-top: 5%; padding-bottom: 5%;"
                                                id="profit"
                                                html-data-id="profit"
                                                value="{!defaultFirstYearProfit}"
                                                onchange="getNextBtn('Projected 1st Year Profit');populateAnswer('What do you project your 1st year profit to be over the next 12 months?', this, true);calculateTaxSavings();"
                                                size="1"
                                            >
                                                <apex:selectOptions value="{!moneyAmount}"></apex:selectOptions>
                                            </apex:selectList>
                                        </div>
                                    </td>
                                </tr>
                                <!-- <tr id="investor">
         <td class="actionRow">
             <spam id="showtxt">Show</spam>
             <label class="switch">
                 <apex:inputCheckbox html-data-id="checkboxInvestors" onchange="hideQuestion(this.checked, 'What is your total investor funding?');"/>
                 <span class="slider round"></span>
             </label>
         </td>
         <td class="questionRow">
             <p class="normalTxt" id="script">
                 <apex:outputPanel rendered="{!CONTAINS(requiredFields, 'Investor Funding')}">  <spam id="txtRequiredOrange">(Required) </spam></apex:outputPanel> 
                 <apex:outputPanel rendered="{!!CONTAINS(requiredFields, 'Investor Funding')}"> <spam id="txtRequired">(Optional)</spam> </apex:outputPanel>
                 <br/>
                 What is your total investor funding?
             </p>
             <div class="form-floating" id="buttonsDisc">
                 <apex:selectList styleClass="form-select" style="height: auto;padding-top: 5%;padding-bottom: 5%;" id="investor" html-data-id="investor" value="{defaultInvestorFunding}" onchange="getNextBtn('Investor Funding');populateAnswer('What is your total investor funding?', this, true);" size="1">
                     <apex:selectOptions value="{moneyAmount}"></apex:selectOptions>
                 </apex:selectList>
             </div>
         </td>
         </tr> -->
                                <tr id="transactions">
                                    <td class="actionRow">
                                        <spam id="showtxt">Show</spam>
                                        <label class="switch">
                                            <apex:inputCheckbox html-data-id="checkboxTransactions" onchange="hideQuestion(this.checked, 'How many monthly bookkeeping transactions do you have?');" />
                                            <span class="slider round"></span>
                                        </label>
                                    </td>
                                    <td class="questionRow">
                                        <p class="normalTxt" id="script">
                                            <apex:outputPanel rendered="{!CONTAINS(requiredFields, 'Number of Transactions')}">
                                                <spam id="txtRequiredOrange">(Required) </spam>
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!!CONTAINS(requiredFields, 'Number of Transactions')}">
                                                <spam id="txtRequired">(Optional)</spam>
                                            </apex:outputPanel>
                                            <br />
                                            How many monthly bookkeeping transactions do you have?
                                        </p>
                                        <div class="form-floating" id="buttonsDisc">
                                            <apex:selectList styleClass="form-select"
                                                style="height: auto; padding-top: 5%; padding-bottom: 5%;"
                                                id="transactions"
                                                html-data-id="transactions"
                                                value="{!defaultNumTransactions}"
                                                onchange="getNextBtn('Number of Transactions');populateAnswer('How many monthly bookkeeping transactions do you have?', this, true);"
                                                size="1"
                                            >
                                                <apex:selectOptions value="{!numberOfTransactions}"></apex:selectOptions>
                                            </apex:selectList>
                                        </div>
                                    </td>
                                </tr>
                                <tr id="bookkeepingStart">
                                    <td class="actionRow">
                                        <spam id="showtxt">Show</spam>
                                        <label class="switch">
                                            <apex:inputCheckbox html-data-id="checkboxBookkeepingStart" onchange="hideQuestion(this.checked, 'What transaction date should your bookkeeper start on?');" />
                                            <span class="slider round"></span>
                                        </label>
                                    </td>
                                    <td class="questionRow">
                                        <p class="normalTxt" id="script">
                                            <apex:outputPanel rendered="{!CONTAINS(requiredFields, 'Bookkeeping Start Date')}">
                                                <spam id="txtRequiredOrange">(Required) </spam>
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!!CONTAINS(requiredFields, 'Bookkeeping Start Date')}">
                                                <spam id="txtRequired">(Optional)</spam>
                                            </apex:outputPanel>
                                            <br />
                                            What transaction date should your bookkeeper start on?
                                        </p>
                                        <div class="form-floating" id="buttonsDisc">
                                            <apex:input type="date"
                                                value="{!bookkeepingStartDate}"
                                                styleClass="date-select start-date"
                                                style="height: auto; padding-top: 5%; padding-bottom: 5%;"
                                                id="bookkeepingStart"
                                                html-data-id="bookkeepingStart"
                                                onchange="getNextBtn('Bookkeeping Start Date');populateAnswer('What transaction date should your bookkeeper start on?', this, true);"
                                                size="1"
                                            ></apex:input>
                                        </div>
                                    </td>
                                </tr>
                                <tr id="bookkeepingEnd">
                                    <td class="actionRow">
                                        <spam id="showtxt">Show</spam>
                                        <label class="switch">
                                            <apex:inputCheckbox html-data-id="checkboxBookkeepingEnd" onchange="hideQuestion(this.checked, 'What transaction date should your bookkeeper end on?');" />
                                            <span class="slider round"></span>
                                        </label>
                                    </td>
                                    <td class="questionRow">
                                        <p class="normalTxt" id="script">
                                            <apex:outputPanel rendered="{!CONTAINS(requiredFields, 'Bookkeeping End Date')}">
                                                <spam id="txtRequiredOrange">(Required) </spam>
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!!CONTAINS(requiredFields, 'Bookkeeping End Date')}">
                                                <spam id="txtRequired">(Optional)</spam>
                                            </apex:outputPanel>
                                            <br />
                                            What transaction date should your bookkeeper end on?
                                        </p>
                                        <div class="form-floating" id="buttonsDisc">
                                            <apex:input type="date"
                                                value="{!bookkeepingEndDate}"
                                                styleClass="date-select end-date"
                                                style="height: auto; padding-top: 5%; padding-bottom: 5%;"
                                                id="bookkeepingEnd"
                                                html-data-id="bookkeepingEnd"
                                                onchange="getNextBtn('Bookkeeping End Date');populateAnswer('What transaction date should your bookkeeper end on?', this, true);"
                                                size="1"
                                            ></apex:input>
                                        </div>
                                    </td>
                                </tr>
                                <tr id="owners">
                                    <td class="actionRow">
                                        <spam id="showtxt">Show</spam>
                                        <label class="switch">
                                            <apex:inputCheckbox html-data-id="checkboxOwners" onchange="hideQuestion(this.checked, 'How many owners does your business have?');" />
                                            <span class="slider round"></span>
                                        </label>
                                    </td>
                                    <td class="questionRow">
                                        <p class="normalTxt" id="script">
                                            <apex:outputPanel rendered="{!CONTAINS(requiredFields, 'Number of Owners')}">
                                                <spam id="txtRequiredOrange">(Required) </spam>
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!!CONTAINS(requiredFields, 'Number of Owners')}">
                                                <spam id="txtRequired">(Optional)</spam>
                                            </apex:outputPanel>
                                            <br />
                                            How many owners does your business have?
                                        </p>
                                        <div class="form-floating" id="buttonsDisc">
                                            <apex:selectList styleClass="form-select"
                                                style="height: auto; padding-top: 5%; padding-bottom: 5%;"
                                                id="owners"
                                                html-data-id="owners"
                                                value="{!defaultNumOwners}"
                                                onchange="getNextBtn('Number of Owners');populateAnswer('How many owners does your business have?', this, true);"
                                                size="1"
                                            >
                                                <apex:selectOptions value="{!numberOf}"></apex:selectOptions>
                                            </apex:selectList>
                                        </div>
                                    </td>
                                </tr>
                                <!-- <tr id="foreignOwners">
         <td class="actionRow">
             <spam id="showtxt">Show</spam>
             <label class="switch">
                 <apex:inputCheckbox html-data-id="checkboxForeignOwners" onchange="hideQuestion(this.checked, 'How many owners are outside the USA?');"/>
                 <span class="slider round"></span>
             </label>
         </td>
         <td class="questionRow">
             <p class="normalTxt" id="script">
                 <apex:outputPanel rendered="{!CONTAINS(requiredFields, 'Foreign Owners')}">  <spam id="txtRequiredOrange">(Required) </spam></apex:outputPanel> 
                 <apex:outputPanel rendered="{!!CONTAINS(requiredFields, 'Foreign Owners')}"> <spam id="txtRequired">(Optional)</spam> </apex:outputPanel>
                 <br/>
                 How many owners are outside the USA?
             </p>
         
             <div class="form-floating" id="buttonsDisc">
                 <apex:selectList styleClass="form-select" style="height: auto;padding-top: 5%;padding-bottom: 5%;" id="foreignowners" html-data-id="foreignowners" value="{defaultNumForeignOwners}" onchange="getNextBtn('Foreign Owners');populateAnswer('How many owners are outside the USA?', this, true);" size="1">
                     <apex:selectOptions value="{numberOf}"></apex:selectOptions>
                 </apex:selectList>
             </div>
         </td>
         </tr> -->
                                <tr id="runPayroll">
                                    <td class="actionRow">
                                        <spam id="showtxt">Show</spam>
                                        <label class="switch">
                                            <apex:inputCheckbox html-data-id="checkboxRunPayroll" onchange="hideQuestion(this.checked, 'Have you run payroll before?');" />
                                            <span class="slider round"></span>
                                        </label>
                                    </td>
                                    <td class="questionRow">
                                        <p class="normalTxt" id="script">
                                            <apex:outputPanel rendered="{!CONTAINS(requiredFields, 'Run Payroll Before')}">
                                                <spam id="txtRequiredOrange">(Required) </spam>
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!!CONTAINS(requiredFields, 'Run Payroll Before')}">
                                                <spam id="txtRequired">(Optional)</spam>
                                            </apex:outputPanel>
                                            <br />
                                            Have you run payroll before?
                                        </p>
                                        <div id="buttonsDisc">
                                            <button type="button" class="yesBtn" id="yesBtn1.2" style="color: black;" onclick="YesDecision(1.2);getNextBtn('Run Payroll Before');populateAnswer('Have you run payroll before?', 'Yes', false);">
                                                Yes
                                            </button>
                                            <div class="divider" />
                                            <button type="button" class="noBtn" id="noBtn1.2" style="color: black;" onclick="NoDecision(1.2);getNextBtn('Run Payroll Before');populateAnswer('Have you run payroll before?', 'No', false);">
                                                No
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                                <tr id="hasEmpContractors">
                                    <td class="actionRow">
                                        <spam id="showtxt">Show</spam>
                                        <label class="switch">
                                            <apex:inputCheckbox html-data-id="checkboxHasEmpContractors" onchange="hideQuestion(this.checked, 'Do you currently have any employees?');" />
                                            <span class="slider round"></span>
                                        </label>
                                    </td>
                                    <td class="questionRow">
                                        <p class="normalTxt" id="script">
                                            <apex:outputPanel rendered="{!OR(CONTAINS(requiredFields, 'Number of Employees'), CONTAINS(requiredFields, 'Number of Contractors'))}">
                                                <spam id="txtRequiredOrange">(Required) </spam>
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!!OR(CONTAINS(requiredFields, 'Number of Employees'), CONTAINS(requiredFields, 'Number of Contractors'))}">
                                                <spam id="txtRequired">(Optional)</spam>
                                            </apex:outputPanel>
                                            <br />
                                            Excluding yourself, do you currently have any additional employees or contractors?
                                        </p>
                                        <div id="buttonsDisc">
                                            <button
                                                type="button"
                                                class="yesBtn"
                                                id="yesBtn1.3"
                                                style="color: black;"
                                                onclick="YesDecision(1.3);populateAnswer('Do you currently have any employees?', 'Yes', false);linkedYesNo('Employees and Contractors');"
                                            >
                                                Yes
                                            </button>
                                            <div class="divider" />
                                            <button
                                                type="button"
                                                class="noBtn"
                                                id="noBtn1.3"
                                                style="color: black;"
                                                onclick="NoDecision(1.3);getNextBtn('Number of Employees');getNextBtn('Number of Contractors');populateAnswer('Do you currently have any employees?', 'No', false);linkedYesNo('Employees and Contractors');"
                                            >
                                                No
                                            </button>
                                        </div>
                                        <!-- <div class="form-floating" id="buttonsDisc">
               <input type="text" class="form-control" id="contractors" style="padding-top: 11px;height: 53px;" placeholder="0" onchange="getNextBtn();populateAnswer('16', this);"/>
               </div> -->
                                    </td>
                                </tr>
                                <tr id="employees">
                                    <td class="actionRow">
                                        <spam id="showtxt">Show</spam>
                                        <label class="switch">
                                            <apex:inputCheckbox html-data-id="checkboxEmployees" onchange="hideQuestion(this.checked, 'How many employees do you have?');" />
                                            <span class="slider round"></span>
                                        </label>
                                    </td>
                                    <td class="questionRow">
                                        <p class="normalTxt" id="script">
                                            <apex:outputPanel rendered="{!CONTAINS(requiredFields, 'Number of Employees')}">
                                                <spam id="txtRequiredOrange">(Required) </spam>
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!!CONTAINS(requiredFields, 'Number of Employees')}">
                                                <spam id="txtRequired">(Optional)</spam>
                                            </apex:outputPanel>
                                            <br />
                                            How many additional employees do you have?
                                        </p>
                                        <div class="form-floating" id="buttonsDisc">
                                            <apex:selectList styleClass="form-select"
                                                style="height: auto; padding-top: 5%; padding-bottom: 5%;"
                                                id="employees"
                                                html-data-id="employees"
                                                value="{!defaultNumEmployees}"
                                                onchange="getNextBtn('Number of Employees');populateAnswer('How many employees do you have?', this, true);linkedFields('Employees and Contractors');"
                                                size="1"
                                            >
                                                <apex:selectOptions value="{!numberOfEmployeeContractors}"></apex:selectOptions>
                                            </apex:selectList>
                                        </div>
                                    </td>
                                </tr>
                                <!-- <tr id="contractors">
         <td class="actionRow">
             <spam id="showtxt">Show</spam>
             <label class="switch">
                 <apex:inputCheckbox html-data-id="checkboxContractors" onchange="hideQuestion(this.checked, 'How many contractors do you have?');"/>
                 <span class="slider round"></span>
             </label>
         </td>
         <td class="questionRow">
             <p class="normalTxt" id="script">
                 <apex:outputPanel rendered="{!CONTAINS(requiredFields, 'Number of Contractors')}">  <spam id="txtRequiredOrange">(Required) </spam></apex:outputPanel> 
                 <apex:outputPanel rendered="{!!CONTAINS(requiredFields, 'Number of Contractors')}"> <spam id="txtRequired">(Optional)</spam> </apex:outputPanel>
                 <br/>
                 How many contractors do you have?
             </p>
             <div class="form-floating" id="buttonsDisc">
                 <apex:selectList styleClass="form-select" style="height: auto;padding-top: 5%;padding-bottom: 5%;" id="contractors" html-data-id="contractors" value="{defaultNumContractors}" onchange="getNextBtn('Number of Contractors');populateAnswer('How many contractors do you have?', this, true);linkedFields('Employees and Contractors');" size="1">
                     <apex:selectOptions value="{numberOfEmployeeContractors}"></apex:selectOptions>
                 </apex:selectList>
             </div>
         </td>
         </tr> -->
                                <tr id="filingStatus">
                                    <td class="actionRow">
                                        <spam id="showtxt">Show</spam>
                                        <label class="switch">
                                            <apex:inputCheckbox html-data-id="checkboxFilingStatus" onchange="hideQuestion(this.checked, 'What is your tax filing status?');" />
                                            <span class="slider round"></span>
                                        </label>
                                    </td>
                                    <td class="questionRow">
                                        <p class="normalTxt" id="script">
                                            <apex:outputPanel rendered="{!CONTAINS(requiredFields, 'Filing Status')}">
                                                <spam id="txtRequiredOrange">(Required) </spam>
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!!CONTAINS(requiredFields, 'Filing Status')}">
                                                <spam id="txtRequired">(Optional)</spam>
                                            </apex:outputPanel>
                                            <br />
                                            What is your tax filing status?
                                        </p>
                                        <div class="form-floating" id="buttonsDisc">
                                            <apex:selectList styleClass="form-select"
                                                style="height: auto; padding-top: 5%; padding-bottom: 5%;"
                                                id="filingStatus"
                                                html-data-id="filingStatus"
                                                value="{!defaultFilingStatus}"
                                                onchange="getNextBtn('Filing Status');populateAnswer('What is your tax filing status?', this, true);calculateTaxSavings();"
                                                size="1"
                                            >
                                                <apex:selectOptions value="{!filingStatus}"></apex:selectOptions>
                                            </apex:selectList>
                                        </div>
                                    </td>
                                </tr>
                                <tr id="household">
                                    <td class="actionRow">
                                        <spam id="showtxt">Show</spam>
                                        <label class="switch">
                                            <apex:inputCheckbox html-data-id="checkboxHousehold" onchange="hideQuestion(this.checked, 'What was your household W-2 income last year?');" />
                                            <span class="slider round"></span>
                                        </label>
                                    </td>
                                    <td class="questionRow">
                                        <p class="normalTxt" id="script">
                                            <apex:outputPanel rendered="{!CONTAINS(requiredFields, 'Personal Income')}">
                                                <spam id="txtRequiredOrange">(Required) </spam>
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!!CONTAINS(requiredFields, 'Personal Income')}">
                                                <spam id="txtRequired">(Optional)</spam>
                                            </apex:outputPanel>
                                            <br />
                                            What was your household W-2 income last year?
                                        </p>
                                        <div class="form-floating" id="buttonsDisc">
                                            <apex:selectList styleClass="form-select"
                                                style="height: auto; padding-top: 5%; padding-bottom: 5%;"
                                                id="household"
                                                html-data-id="household"
                                                value="{!defaultPersonalIncome}"
                                                onchange="getNextBtn('Personal Income');populateAnswer('What was your household W-2 income last year?', this, true);calculateTaxSavings();"
                                                size="1"
                                            >
                                                <apex:selectOptions value="{!moneyAmount}"></apex:selectOptions>
                                            </apex:selectList>
                                        </div>
                                    </td>
                                </tr>
                                <!-- <tr id="foreignIncome">
         <td class="actionRow">
             <spam id="showtxt">Show</spam>
             <label class="switch">
                 <apex:inputCheckbox html-data-id="checkboxForeignIncome" onchange="hideQuestion(this.checked, 'Do you have any foreign sourced income?');"/>
                 <span class="slider round"></span>
             </label>
         </td>
         <td class="questionRow">
             <p class="normalTxt" id="script">
                 <apex:outputPanel rendered="{!CONTAINS(requiredFields, 'Foreign Income')}">  <spam id="txtRequiredOrange">(Required) </spam></apex:outputPanel> 
                 <apex:outputPanel rendered="{!!CONTAINS(requiredFields, 'Foreign Income')}"> <spam id="txtRequired">(Optional)</spam> </apex:outputPanel>
                 <br/>
                 Do you have any foreign sourced income?
             </p>
             <div id="buttonsDisc">
                 <button type="button" class="yesBtn" id="yesBtn1.5" style="color: black;" onclick="YesDecision(1.5);populateAnswer('Do you have any foreign sourced income?', 'Yes', false);">Yes</button>
                 <div class="divider"/>
                 <button type="button" class="noBtn" id="noBtn1.5" style="color: black;" onclick="NoDecision(1.5);getNextBtn('Foreign Income');populateAnswer('Do you have any foreign sourced income?', 'No', false);">No</button>
             </div>
             <!- <div class="form-floating" id="buttonsDisc">
                 <input type="text" class="form-control" id="manyK-1s" style="padding-top: 11px;height: 53px;" placeholder="0" onchange="getNextBtn();populateAnswer('22', this);"/>
             </div> ->
         </td>
         </tr> -->
                                <tr id="hasRentals">
                                    <td class="actionRow">
                                        <spam id="showtxt">Show</spam>
                                        <label class="switch">
                                            <apex:inputCheckbox html-data-id="checkboxHasRentals" onchange="hideQuestion(this.checked, 'Do you currently have any rental properties?');" />
                                            <span class="slider round"></span>
                                        </label>
                                    </td>
                                    <td class="questionRow">
                                        <p class="normalTxt" id="script">
                                            <apex:outputPanel rendered="{!CONTAINS(requiredFields, 'Number of Rental Properties')}">
                                                <spam id="txtRequiredOrange">(Required) </spam>
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!!CONTAINS(requiredFields, 'Number of Rental Properties')}">
                                                <spam id="txtRequired">(Optional)</spam>
                                            </apex:outputPanel>
                                            <br />
                                            Do you currently have any rental properties?
                                        </p>
                                        <div id="buttonsDisc">
                                            <button
                                                type="button"
                                                class="yesBtn"
                                                id="yesBtn1.6"
                                                style="color: black;"
                                                onclick="YesDecision(1.6);populateAnswer('Do you currently have any rental properties?', 'Yes', false);linkedYesNo('Number of Rental Properties');"
                                            >
                                                Yes
                                            </button>
                                            <div class="divider" />
                                            <button
                                                type="button"
                                                class="noBtn"
                                                id="noBtn1.6"
                                                style="color: black;"
                                                onclick="NoDecision(1.6);getNextBtn('Number of Rental Properties');populateAnswer('Do you currently have any rental properties?', 'No', false);linkedYesNo('Number of Rental Properties');"
                                            >
                                                No
                                            </button>
                                        </div>
                                        <!-- <div id="buttonsDisc">
               <button type="button" class="yesBtn" id="yesBtn1.5" style="color: black;" onclick="YesDecision(1.5);getNextBtn();populateAnswer('23', 'Yes');">Yes</button>
               <div class="divider"/>
               <button type="button" class="noBtn" id="noBtn1.5" style="color: black;" onclick="NoDecision(1.5);getNextBtn();populateAnswer('23', 'No');">No</button>
               </div> -->
                                    </td>
                                </tr>
                                <tr id="rental">
                                    <td class="actionRow">
                                        <spam id="showtxt">Show</spam>
                                        <label class="switch">
                                            <apex:inputCheckbox html-data-id="checkboxRental" onchange="hideQuestion(this.checked, 'How many rental properties do you have?');" />
                                            <span class="slider round"></span>
                                        </label>
                                    </td>
                                    <td class="questionRow">
                                        <p class="normalTxt" id="script">
                                            <apex:outputPanel rendered="{!CONTAINS(requiredFields, 'Number of Rental Properties')}">
                                                <spam id="txtRequiredOrange">(Required) </spam>
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!!CONTAINS(requiredFields, 'Number of Rental Properties')}">
                                                <spam id="txtRequired">(Optional)</spam>
                                            </apex:outputPanel>
                                            <br />
                                            How many rental properties do you have?
                                        </p>
                                        <div class="form-floating" id="buttonsDisc">
                                            <apex:selectList styleClass="form-select"
                                                style="height: auto; padding-top: 5%; padding-bottom: 5%;"
                                                id="rental"
                                                html-data-id="rental"
                                                value="{!defaultNumberOfRentalProperties}"
                                                onchange="getNextBtn('Number of Rental Properties');populateAnswer('How many rental properties do you have?', this, true);linkedFields('Number of Rental Properties');"
                                                size="1"
                                            >
                                                <apex:selectOptions value="{!numberOfRentalProperties}"></apex:selectOptions>
                                            </apex:selectList>
                                        </div>
                                        <!-- <div id="buttonsDisc">
               <button type="button" class="yesBtn" id="yesBtn1.6" style="color: black;" onclick="YesDecision(1.6);getNextBtn();populateAnswer('24', 'Yes');">Yes</button>
               <div class="divider"/>
               <button type="button" class="noBtn" id="noBtn1.6" style="color: black;" onclick="NoDecision(1.6);getNextBtn();populateAnswer('24', 'No');">No</button>
               </div> -->
                                    </td>
                                </tr>
                                <!-- <tr id="k1s">
         <td class="actionRow">
             <spam id="showtxt">Show</spam>
             <label class="switch">
                 <apex:inputCheckbox html-data-id="checkboxK1s" onchange="hideQuestion(this.checked, 'How many K-1s are from other investments?');"/>
                 <span class="slider round"></span>
             </label>
         </td>
         <td class="questionRow">
             <p class="normalTxt" id="script">
                 <apex:outputPanel rendered="{!CONTAINS(requiredFields, 'Number of K1s')}">  <spam id="txtRequiredOrange">(Required) </spam></apex:outputPanel> 
                 <apex:outputPanel rendered="{!!CONTAINS(requiredFields, 'Number of K1s')}"> <spam id="txtRequired">(Optional)</spam> </apex:outputPanel>
                 <br/>
                 How many K-1s are from other investments?
             </p>
             <div class="form-floating" id="buttonsDisc">
                 <apex:selectList styleClass="form-select" style="height: auto;padding-top: 5%;padding-bottom: 5%;" id="k1s" html-data-id="k1s" value="{defaultOtherInvestments}" onchange="getNextBtn('Number of K1s');populateAnswer('How many K-1s are from other investments?', this, true);" size="1">
                     <apex:selectOptions value="{numberOfRentalProperties}"></apex:selectOptions>
                 </apex:selectList>
             </div>
         </td>
         </tr> -->
                                <tr id="workingHome">
                                    <td class="actionRow">
                                        <spam id="showtxt">Show</spam>
                                        <label class="switch">
                                            <apex:inputCheckbox html-data-id="checkboxWorkingHome" onchange="hideQuestion(this.checked, 'Will you be working from home?');" />
                                            <span class="slider round"></span>
                                        </label>
                                    </td>
                                    <td class="questionRow">
                                        <p class="normalTxt" id="script">
                                            <apex:outputPanel rendered="{!CONTAINS(requiredFields, 'Office Square Footage')}">
                                                <spam id="txtRequiredOrange">(Required) </spam>
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!!CONTAINS(requiredFields, 'Office Square Footage')}">
                                                <spam id="txtRequired">(Optional)</spam>
                                            </apex:outputPanel>
                                            <br />
                                            Will you be working from home?
                                        </p>
                                        <div id="buttonsDisc">
                                            <button
                                                type="button"
                                                class="yesBtn"
                                                id="yesBtn1.7"
                                                style="color: black;"
                                                onclick="YesDecision(1.7);populateAnswer('Will you be working from home?', 'Yes', false);linkedYesNo('Working from Home');"
                                            >
                                                Yes
                                            </button>
                                            <div class="divider" />
                                            <button
                                                type="button"
                                                class="noBtn"
                                                id="noBtn1.7"
                                                style="color: black;"
                                                onclick="NoDecision(1.7);getNextBtn('Office Square Footage');populateAnswer('Will you be working from home?', 'No', false);linkedYesNo('Working from Home');"
                                            >
                                                No
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                                <tr id="footage">
                                    <td class="actionRow">
                                        <spam id="showtxt">Show</spam>
                                        <label class="switch">
                                            <apex:inputCheckbox html-data-id="checkboxFootage" onchange="hideQuestion(this.checked, 'What is the approximate square footage of your home office?');" />
                                            <span class="slider round"></span>
                                        </label>
                                    </td>
                                    <td class="questionRow">
                                        <p class="normalTxt" id="script">
                                            <apex:outputPanel rendered="{!CONTAINS(requiredFields, 'Office Square Footage')}">
                                                <spam id="txtRequiredOrange">(Required) </spam>
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!!CONTAINS(requiredFields, 'Office Square Footage')}">
                                                <spam id="txtRequired">(Optional)</spam>
                                            </apex:outputPanel>
                                            <br />
                                            What is the approximate square footage of your home office?
                                        </p>
                                        <div class="form-floating" id="buttonsDisc">
                                            <apex:selectList styleClass="form-select"
                                                style="height: auto; padding-top: 5%; padding-bottom: 5%;"
                                                id="footage"
                                                html-data-id="footage"
                                                value="{!defaultOffice}"
                                                onchange="getNextBtn('Office Square Footage');populateAnswer('What is the approximate square footage of your home office?', this, true);linkedFields('Working from Home');calculateTaxSavings();"
                                                size="1"
                                            >
                                                <apex:selectOptions value="{!office}"></apex:selectOptions>
                                            </apex:selectList>
                                        </div>
                                    </td>
                                </tr>
                                <tr id="drive">
                                    <td class="actionRow">
                                        <spam id="showtxt">Show</spam>
                                        <label class="switch">
                                            <apex:inputCheckbox html-data-id="checkboxDrive" onchange="hideQuestion(this.checked, 'Will you use your personal vehicle for business purposes?');" />
                                            <span class="slider round"></span>
                                        </label>
                                    </td>
                                    <td class="questionRow">
                                        <p class="normalTxt" id="script">
                                            <apex:outputPanel rendered="{!CONTAINS(requiredFields, 'Business Miles')}">
                                                <spam id="txtRequiredOrange">(Required) </spam>
                                            </apex:outputPanel>
                                            <apex:outputPanel rendered="{!!CONTAINS(requiredFields, 'Business Miles')}">
                                                <spam id="txtRequired">(Optional)</spam>
                                            </apex:outputPanel>
                                            <br />
                                            Will you use your personal vehicle for business purposes?
                                        </p>
                                        <div id="buttonsDisc">
                                            <button
                                                type="button"
                                                class="yesBtn"
                                                id="yesBtn1.8"
                                                style="color: black;"
                                                onclick="YesDecision(1.8);populateAnswer('Will you use your personal vehicle for business purposes?', 'Yes', false);linkedYesNo('Driving');"
                                            >
                                                Yes
                                            </button>
                                            <div class="divider" />
                                            <button
                                                type="button"
                                                class="noBtn"
                                                id="noBtn1.8"
                                                style="color: black;"
                                                onclick="NoDecision(1.8);getNextBtn('Business Miles');populateAnswer('Will you use your personal vehicle for business purposes?', 'No', false);linkedYesNo('Driving');"
                                            >
                                                No
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                                <tr id="miles">
                                    <td class="actionRow">
                                        <spam id="showtxt">Show</spam>
                                        <label class="switch">
                                            <apex:inputCheckbox html-data-id="checkboxMiles" onchange="hideQuestion(this.checked, 'How many business-related miles do you estimate you’ll drive per year?');" />
                                            <span class="slider round"></span>
                                        </label>
                                    </td>
                                    <td class="questionRow">
                                        <p class="normalTxt" id="script">
                                            <apex:outputPanel rendered="{!CONTAINS(requiredFields, 'Business Miles')}"> <spam id="txtRequiredOrange">(Required) </spam></apex:outputPanel>
                                            <apex:outputPanel rendered="{!!CONTAINS(requiredFields, 'Business Miles')}"> <spam id="txtRequired">(Optional)</spam> </apex:outputPanel>
                                            <br />
                                            How many business-related miles do you estimate you’ll drive per year?
                                        </p>
                                        <div class="form-floating" id="buttonsDisc">
                                            <apex:selectList styleClass="form-select"
                                                style="height: auto; padding-top: 5%; padding-bottom: 5%;"
                                                id="miles"
                                                html-data-id="miles"
                                                value="{!defaultMileage}"
                                                onchange="getNextBtn('Business Miles');populateAnswer('How many business-related miles do you estimate you’ll drive per year?', this, true);linkedFields('Driving');calculateTaxSavings();"
                                                size="1"
                                            >
                                                <apex:selectOptions value="{!mileage}"></apex:selectOptions>
                                            </apex:selectList>
                                        </div>
                                    </td>
                                </tr>
                                <!-- <tr id="website">
         <td class="actionRow">
             <spam id="showtxt">Show</spam>
             <label class="switch">
                 <apex:inputCheckbox html-data-id="checkboxWebsite" onchange="hideQuestion(this.checked, 'Will your business have a web or e-commerce presence?');"/>
                 <span class="slider round"></span>
             </label>
         </td>
         <td class="questionRow">
             <p class="normalTxt" id="script">
                 <apex:outputPanel rendered="{!CONTAINS(requiredFields, 'Website Selling Goods')}">  <spam id="txtRequiredOrange">(Required) </spam></apex:outputPanel> 
                 <apex:outputPanel rendered="{!!CONTAINS(requiredFields, 'Website Selling Goods')}"> <spam id="txtRequired">(Optional)</spam> </apex:outputPanel>
                 <br/>
                 Will your business have a web or e-commerce presence?
             </p>
             <div id="buttonsDisc">
                 <button type="button" class="yesBtn" id="yesBtn1.9" style="color: black;" onclick="YesDecision(1.9);populateAnswer('Will your business have a web or e-commerce presence?', 'Yes', false);">Yes</button>
                 <div class="divider"/>
                 <button type="button" class="noBtn" id="noBtn1.9" style="color: black;" onclick="NoDecision(1.9);getNextBtn('Website Selling Goods');populateAnswer('Will your business have a web or e-commerce presence?', 'No', false);">No</button>
             </div>
         </td>
         </tr> -->
                            </table>
                        </div>
                        <div id="errorMessage" style="display: inline-flex;">
                            <p id="errorMessageText"><span class="material-icons" id="errorMessageIcon">warning_amber</span>&nbsp;Not all required questions have been answered.</p>
                            <button type="button" class="" id="errorMessageBtn" style="color: black;" onclick="filterQuestions('Unanswered Required Questions')">Show Unanswered Required Questions</button>
                        </div>
                        <div class="formTxt">
                            <div id="buttons">
                                <button type="button" class="start" id="thirdStart" style="color: white;" onclick="whatToDo();"><i class="fas fa-arrow-right">&nbsp;</i>Next Section</button>
                                <apex:actionFunction name="CallApexMethod"
                                    action="{!getProductData}"
                                    oncomplete="processProductData();enableEditButton(true)"
                                    reRender="functionPanel, dProds, fProds, frProds, bProds, pProds, payProds, bkkProds, eProds"
                                >
                                    <!-- <apex:param assignTo="{!quoteId}" name="getProductParam" value=""/>     -->
                                </apex:actionFunction>
                                <apex:actionFunction name="RerenderSelectedProducts" reRender="dProds" />
                                <div class="divider" />
                                <p class="blast" id="endNote">Review Business Discovery</p>
                            </div>
                        </div>
                    </div>
                    <div id="pesForLLC">
                        <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="properEstityStrugleLLC">
                            <div class="backMenu">
                                <button type="button" class="backBtn" onclick="backSection('Review Business Discovery', 'businessDiscParts', 'properEstityStrugleLLC');">
                                    <table id="backTable">
                                        <tr>
                                            <td>
                                                <span class="material-icons" id="backArrow">arrow_back</span>
                                            </td>
                                            <td>
                                                <p class="backTitle">Previous section</p>
                                                <p class="backDesc">Review Discovery Questions</p>
                                            </td>
                                        </tr>
                                    </table>
                                </button>
                            </div>
                            <div class="title">
                                <p class="titleTxt">
                                    Proper Entity Structuring Introduction
                                </p>
                            </div>
                            <div class="formTxt">
                                <p class="normalTxt formTxtbottom" id="script">
                                    Great, now that we know where you are today, let’s start arming you with knowledge and education you can use to manage and grow your business.
                                    <br />
                                    <br />
                                    I’m going to start with four terms you need to be familiar with in the immediate future and I’ll need you to write these down.
                                </p>
                                <div id="buttons">
                                    <button type="button" class="start" id="secondStart" style="color: white;" onclick="nextSection(6, 'Flow Through Entity', 'properEstityStrugleLLC', 'flowThroughEntityLLC')">
                                        <i class="fas fa-arrow-right">&nbsp;</i>Next Section
                                    </button>
                                    <div class="divider" />
                                    <p class="blast">Flow Through Entity</p>
                                </div>
                            </div>
                        </div>
                        <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="flowThroughEntityLLC">
                            <div class="backMenu">
                                <button type="button" class="backBtn" onclick="backSection('Proper Entity Structuring', 'properEstityStrugleLLC', 'flowThroughEntityLLC')">
                                    <table id="backTable">
                                        <tr>
                                            <td>
                                                <span class="material-icons" id="backArrow">arrow_back</span>
                                            </td>
                                            <td>
                                                <p class="backTitle">Previous section</p>
                                                <p class="backDesc">Proper Entity Structuring Intro</p>
                                            </td>
                                        </tr>
                                    </table>
                                </button>
                            </div>
                            <div class="title">
                                <p class="titleTxt">
                                    Flow Through Entity
                                </p>
                            </div>
                            <div class="formTxt">
                                <p class="normalTxt formTxtbottom" id="script">
                                    First, let’s talk about “Flow Through Entity.”
                                    <br />
                                    <br />
                                    Are you familiar with that term?
                                    <br />
                                    <br />
                                    Simply put, the profits or losses of this business flow through to your personal tax return. If a person is getting W-2 wages and they own a flow through entity and that entity had a loss due to start up
                                    or organizational costs; that loss can be subtracted from you and your spouse’s W-2 income. That may dramatically reduce both your taxable income or your individual tax rate.
                                    <br />
                                    <br />
                                    We will get into specifics on deductions later, but for now let’s move on to the next important term.
                                </p>
                                <div id="buttons">
                                    <button type="button" class="start" id="secondStart" style="color: white;" onclick="nextSection(null, null, 'flowThroughEntityLLC', 'entityClassificationElec')">
                                        <i class="fas fa-arrow-right">&nbsp;</i>Next Section
                                    </button>
                                    <div class="divider" />
                                    <p class="blast">Entity Classification Election (ECE)</p>
                                </div>
                            </div>
                        </div>
                        <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="entityClassificationElec">
                            <div class="backMenu">
                                <button type="button" class="backBtn" onclick="backSection('Flow Through Entity', 'flowThroughEntityLLC', 'entityClassificationElec');">
                                    <table id="backTable">
                                        <tr>
                                            <td>
                                                <span class="material-icons" id="backArrow">arrow_back</span>
                                            </td>
                                            <td>
                                                <p class="backTitle">Previous section</p>
                                                <p class="backDesc">Flow Through Entity</p>
                                            </td>
                                        </tr>
                                    </table>
                                </button>
                            </div>
                            <div class="title">
                                <p class="titleTxt">
                                    Entity Classification Election (ECE)
                                </p>
                            </div>
                            <div class="formTxt">
                                <p class="normalTxt formTxtbottom" id="script">
                                    Next, “Entity Classification Election” or ECE, is a process through which you elect and notify the IRS how you wish to have your business taxed.
                                    <br />
                                    <br />
                                    The IRS recommends that this be done within 75 days of the date the business is formed. If you do not elect how you wish your business to be taxed, then the IRS will choose for you. We shouldn’t allow the
                                    IRS to determine your filing status. It is essential to the success of your business that we choose one that is in your best interest.
                                    <br />
                                    <br />
                                    If the IRS chooses your Entity’s filing status, do you think they will choose one that is in your best interest
                                    <span id="additionalFirstName5">{!opportunity.Account.Primary_Contact__r.FirstName}</span> or theirs?
                                </p>
                                <div id="engage">
                                    <p id="engageTxt">
                                        ✋ Wait for an answer
                                    </p>
                                </div>
                                <p class="normalTxt formTxtbottom" id="script">
                                    Exactly, let’s move to term number three, “Self-Employment Tax.”
                                </p>
                                <div id="buttons">
                                    <button type="button" class="start" id="secondStart" style="color: white;" onclick="nextSection(null, null, 'entityClassificationElec', 'selfEmploymentTaxLLC');">
                                        <i class="fas fa-arrow-right">&nbsp;</i>Next Section
                                    </button>
                                    <div class="divider" />
                                    <p class="blast">Self Employment Tax (FICA)</p>
                                </div>
                            </div>
                        </div>
                        <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="selfEmploymentTaxLLC">
                            <div class="backMenu">
                                <button type="button" class="backBtn" onclick="backSection('Flow Through Entity', 'entityClassificationElec', 'selfEmploymentTaxLLC');">
                                    <table id="backTable">
                                        <tr>
                                            <td>
                                                <span class="material-icons" id="backArrow">arrow_back</span>
                                            </td>
                                            <td>
                                                <p class="backTitle">Previous section</p>
                                                <p class="backDesc" id="busiDisc">Entity Classification Election (ECE)</p>
                                            </td>
                                        </tr>
                                    </table>
                                </button>
                            </div>
                            <div class="title">
                                <p class="titleTxt">
                                    Self Employment Tax (FICA)
                                </p>
                            </div>
                            <!-- Introduction -->
                            <div class="formTxt" id="verticalSectLine1">
                                <p class="normalTxt discoTitle2" id="script">
                                    <button type="button" id="currentSlide1" onclick="getSlideOne();">Current Slide</button>
                                    <spam id="part1">Introduction</spam>
                                </p>
                                <div class="formTxt">
                                    <p class="normalTxt formTxtbottom" id="script">
                                        Letting the IRS choose your entity classification for you may result in a 15.3% "Self-Employment Tax" aka FICA. FICA covers your Social Security and Medicare and this tax is ON TOP of any other
                                        Federal, State, and Local taxes you are already paying. By making sure you elect your entity classification properly, you will have the opportunity to reduce your self-employment tax by up to 50%.
                                        <br />
                                        <br />
                                        <span id="additionalFirstName6">{!opportunity.Account.Primary_Contact__r.FirstName}</span>, if we could reduce your self-employment tax by up to 50%, how do you think that could benefit your business
                                        specifically?
                                    </p>
                                    <div id="engage">
                                        <p id="engageTxt">
                                            ✋ Engage with a congratulatory response
                                        </p>
                                    </div>
                                </div>
                            </div>
                            <!-- Extra btns -->
                            <div id="ficaBtns">
                                <button type="button" id="showficaexample" onclick="showFicaExample();">Give FICA Example</button>
                                <button type="button" id="skipficaexample" style="opacity: 1;" onclick="nextSection(null, 'Beneficial Ownership Information (BOI)', 'selfEmploymentTaxLLC', 'boiIntroLLC');">
                                    <span style="vertical-align: middle;" class="material-icons">skip_next</span>&nbsp;Skip FICA Example &amp; Tax Savings
                                </button>
                                <!-- <button type="button" id="skipficaexample" style="opacity: 1;" onclick="nextSection(null, null, 'selfEmploymentTaxLLC', 'properEntityStrugReviewLLC');"><span style="vertical-align: middle;" class="material-icons">skip_next</span>&nbsp;Skip FICA Example &amp; Tax Savings</button> -->
                            </div>
                            <!-- FICA Example -->
                            <div class="formTxt" id="verticalSectLine2">
                                <p class="normalTxt discoTitle2" id="script">
                                    <button type="button" id="currentSlide2" onclick="getSlideTwo();">Current Slide</button>
                                    <spam id="part2">FICA Example</spam>
                                </p>
                                <div class="formTxt" id="FICA-Example">
                                    <p class="normalTxt formTxtbottom" id="script">
                                        I want to make sure my last point is crystal clear. For the sake of simple math, here is an example:
                                        <br />
                                        <br />
                                        Let’s say you earn $100,000 over the next year through your business. If you fail to elect how your business is taxed, you will pay 15.3% or $15,300 just in self-employment taxes alone.
                                    </p>
                                </div>
                            </div>
                            <!-- Tax Savings -->
                            <div class="formTxt" id="verticalSectLine3">
                                <p class="normalTxt discoTitle2" id="script">
                                    <button type="button" id="currentSlide3" onclick="getSlideThree();"><i class="fas fa-arrow-right">&nbsp;</i>Next Section</button>
                                    <spam id="part3">Tax Savings</spam>
                                </p>
                                <div class="formTxt" id="Tax-Savings">
                                    <p class="normalTxt formTxtbottom" id="script">
                                        On the other hand, if you file your entity classification and you take all the necessary steps to ensure your business is structured in the most tax efficient way possible, in this same example you
                                        will save around 50%, or approximately $7,650 dollars in just that first year.
                                        <br />
                                        <br />
                                        Hold onto that thought for a second. That isn’t a tax deduction, it is a $7,650 dollar ANNUAL tax savings that you can reinvest into your business instead of sending it to the IRS.
                                        <br />
                                        <br />
                                        <span id="additionalFirstName7">{!opportunity.Account.Primary_Contact__r.FirstName}</span>, which would you rather do, fund the IRS or grow your business?
                                    </p>
                                    <div id="engage">
                                        <p id="engageTxt">
                                            ✋ Wait for an answer
                                        </p>
                                    </div>
                                    <p class="normalTxt formTxtbottom" id="script">
                                        I couldn’t agree more.
                                    </p>
                                </div>
                            </div>
                            <div class="formTxt" id="btn-fica">
                                <div id="buttons">
                                    <button type="button" class="start" id="secondStart" style="color: white;" onclick="nextSection(null, 'Beneficial Ownership Information (BOI)', 'selfEmploymentTaxLLC', 'boiIntroLLC');">
                                        <i class="fas fa-arrow-right">&nbsp;</i>Next Section
                                    </button>
                                    <div class="divider" />
                                    <p class="blast" id="endNote">Beneficial Ownership Information (BOI)</p>
                                </div>
                            </div>
                        </div>

                        <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="boiIntroLLC">
                            <div class="backMenu">
                                <button type="button" class="backBtn" onclick="backSection('Flow Through Entity', 'selfEmploymentTaxLLC', 'boiIntroLLC');">
                                    <table id="backTable">
                                        <tr>
                                            <td>
                                                <span class="material-icons" id="backArrow">arrow_back</span>
                                            </td>
                                            <td>
                                                <p class="backTitle">Previous section</p>
                                                <p class="backDesc">Self Employment Tax (FICA)</p>
                                            </td>
                                        </tr>
                                    </table>
                                </button>
                            </div>
                            <div class="title">
                                <p class="titleTxt">
                                    Beneficial Ownership Information (BOI)
                                </p>
                            </div>
                            <div class="formTxt">
                                <p class="normalTxt formTxtbottom" id="script">
                                    The final term is "Beneficial Ownership Information" or BOI. This impacts business owners differently depending on when your business was formed.
                                </p>
                                <div class="questionRow">
                                    <p class="normalTxt" id="script">
                                        <apex:outputPanel >
                                            <spam id="txtRequiredOrange">(Required) </spam>
                                        </apex:outputPanel>
                                        <br />
                                        When did you form your business?
                                    </p>
                                    <div class="form-floating" id="buttonsDisc" style="margin-bottom: 5px;">
                                        <apex:input type="date"
                                            value="{!formationDate}"
                                            styleClass="date-select start-date"
                                            style="height: auto; padding-top: 5%; padding-bottom: 5%;"
                                            id="formationDateLLC"
                                            html-data-id="formationDate"
                                            onchange="saveFormationDate(this);"
                                            size="1"
                                        ></apex:input>
                                    </div>
                                    <p class="backTitle" style="margin-bottom: 50px;">This can be a general guess</p>
                                </div>
                                <div
                                    class="businessFormationAlert"
                                    style="
                                        width: fit-content;
                                        height: fit-content;
                                        padding-left: 16px;
                                        padding-right: 16px;
                                        padding-top: 5px;
                                        padding-bottom: 5px;
                                        background: rgba(23, 118, 182, 0.12);
                                        border-radius: 4px;
                                        justify-content: flex-start;
                                        align-items: center;
                                        gap: 12px;
                                        display: none;
                                        margin-bottom: 30px;
                                    "
                                >
                                    <div style="padding-top: 8px; padding-bottom: 8px; border-radius: 4px; flex-direction: row; justify-content: flex-start; align-items: center; gap: 4px; display: inline-flex;">
                                        <svg aria-hidden="true" class="slds-icon" style="fill: rgb(23, 118, 182, 1); width: 1.7rem; height: 1.7rem;">
                                            <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#info_alt')}"></use>
                                        </svg>
                                        <div
                                            class="businessFormationAlertText"
                                            style="color: rgba(17.7, 22.61, 36.12, 0.91); font-size: 17px; font-family: Poppins; font-weight: 400; line-height: 20px; letter-spacing: 0.14px; word-wrap: break-word;"
                                        >
                                            The client’s business was formed {{x}} days ago.
                                        </div>
                                    </div>
                                </div>
                                <div id="engage">
                                    <p id="engageTxt">
                                        ✋ Acknowledge the client's answer
                                    </p>
                                </div>
                                <p class="normalTxt formTxtbottom boiIntro2024Text" style="display: none;" id="script">
                                    As a result of the Corporate Transparency Act, the Financial Crimes Enforcement Network is requiring 97% of companies to submit the Beneficial Ownership Information (BOI) forms within 90 days to the US
                                    Government about who ultimately owns and controls your company in an effort to combat financial crimes.
                                    <br />
                                    <br />
                                    Filing this properly is a significant concern because providing false information or failing to report or update beneficial ownership information may result in significant penalties.
                                    <br />
                                    <br />
                                    The civil penalty for failure to file by the deadline is $500 per day up to $10,000.
                                    <br />
                                    <br />
                                    Were you already aware of this?
                                </p>
                                <p class="normalTxt formTxtbottom boiIntro2023Text" style="display: none;" id="script">
                                    As a result of the Corporate Transparency Act, the Financial Crimes Enforcement Network is requiring 97% of existing companies to submit the Beneficial Ownership Information (BOI) form to the US
                                    Government about who ultimately owns and controls your company in an effort to combat financial crimes.
                                    <br />
                                    <br />
                                    Filing this properly is a significant concern because providing false information or failing to report or update beneficial ownership information may result in significant penalties. The civil penalty for
                                    failure to file is $500 per day up to $10,000.
                                    <br />
                                    <br />
                                    When it comes to a filing this important, would you agree it’s better to file sooner and be done with it or later and run the risk of forgetting?
                                </p>
                                <div id="engage" class="boiIntroEngageText" style="display: none;">
                                    <p id="engageTxt">
                                        ✋ Get an answer
                                    </p>
                                </div>
                                <div id="buttons">
                                    <button type="button" class="start" id="secondStart" style="color: white;" onclick="nextSection(null, null, 'boiIntroLLC', 'properEntityStrugReviewLLC');">
                                        <i class="fas fa-arrow-right">&nbsp;</i>Next Section
                                    </button>
                                    <div class="divider" />
                                    <p class="blast">Review Proper Entity Structuring</p>
                                </div>
                            </div>
                        </div>
                        <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="properEntityStrugReviewLLC">
                            <div class="backMenu">
                                <button type="button" class="backBtn" onclick="backSection('Flow Through Entity', 'boiIntroLLC', 'properEntityStrugReviewLLC');">
                                    <table id="backTable">
                                        <tr>
                                            <td>
                                                <span class="material-icons" id="backArrow">arrow_back</span>
                                            </td>
                                            <td>
                                                <p class="backTitle">Previous section</p>
                                                <p class="backDesc">Beneficial Ownership Information (BOI)</p>
                                            </td>
                                        </tr>
                                    </table>
                                </button>
                            </div>
                            <div class="title">
                                <p class="titleTxt">
                                    Review Proper Entity Structuring
                                </p>
                            </div>
                            <div class="formTxt">
                                <p class="normalTxt formTxtbottom" id="script">
                                    Passing this type of knowledge to you through this consultation is what we pride ourselves on here at 1-800ACCOUNTANT.  
                                    <br />
                                    <br />
                                    So, how am I doing so far {!opportunity.Account.Primary_Contact__r.FirstName}?
                                </p>
                                <div id="buttons">
                                    <button type="button" class="start" id="secondStart" style="color: white;" onclick="nextSection(null, null, 'properEntityStrugReviewLLC', 'deductionsIntro');">
                                        <i class="fas fa-arrow-right">&nbsp;</i>Next Section
                                    </button>
                                    <div class="divider" />
                                    <p class="blast">Deductions Introduction</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="pesForSCorp">
                        <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="properEstityStrugleSCorp">
                            <div class="backMenu">
                                <button type="button" class="backBtn" onclick="backSection('Review Business Discovery', 'businessDiscParts', 'properEstityStrugleSCorp');">
                                    <table id="backTable">
                                        <tr>
                                            <td>
                                                <span class="material-icons" id="backArrow">arrow_back</span>
                                            </td>
                                            <td>
                                                <p class="backTitle">Previous section</p>
                                                <p class="backDesc">Review Discover Questions</p>
                                            </td>
                                        </tr>
                                    </table>
                                </button>
                            </div>
                            <div class="title">
                                <p class="titleTxt">
                                    Proper Entity Structuring Introduction
                                </p>
                            </div>
                            <div class="formTxt">
                                <p class="normalTxt formTxtbottom" id="script">
                                    Great, now that we know where you are today, let’s start arming you with knowledge and education you can use to manage and grow your business.
                                    <br />
                                    <br />
                                    I’m going to start with three terms you need to be familiar with in the immediate future.
                                </p>
                                <div id="buttons">
                                    <button type="button" class="start" id="secondStart" style="color: white;" onclick="nextSection(6, 'Flow Through Entity', 'properEstityStrugleSCorp', 'flowThroughEntitySCorp')">
                                        <i class="fas fa-arrow-right">&nbsp;</i>Next Section
                                    </button>
                                    <div class="divider" />
                                    <p class="blast">Flow Through Entity</p>
                                </div>
                            </div>
                        </div>
                        <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="flowThroughEntitySCorp">
                            <div class="backMenu">
                                <button type="button" class="backBtn" onclick="backSection('Proper Entity Structuring', 'properEstityStrugleSCorp', 'flowThroughEntitySCorp')">
                                    <table id="backTable">
                                        <tr>
                                            <td>
                                                <span class="material-icons" id="backArrow">arrow_back</span>
                                            </td>
                                            <td>
                                                <p class="backTitle">Previous section</p>
                                                <p class="backDesc">Proper Entity Structuring Intro</p>
                                            </td>
                                        </tr>
                                    </table>
                                </button>
                            </div>
                            <div class="title">
                                <p class="titleTxt">
                                    Flow Through Entity
                                </p>
                            </div>
                            <div class="formTxt">
                                <p class="normalTxt formTxtbottom" id="script">
                                    First, let’s talk about “Flow Through Entity.”
                                    <br />
                                    <br />
                                    Are you familiar with that term?
                                    <br />
                                    <br />
                                    Simply put, the profits or losses of this business flow through to your personal tax return. If a person is getting W-2 wages and they own a flow through entity and that entity had a loss due to start up
                                    or organizational costs; that loss can be subtracted from you and your spouse’s W-2 income. That may dramatically reduce both your taxable income or your individual tax rate.
                                    <br />
                                    <br />
                                    We will get into specifics on deductions later, but for now let’s move on to the next important term.
                                </p>
                                <div id="buttons">
                                    <button type="button" class="start" id="secondStart" style="color: white;" onclick="nextSection(null, null, 'flowThroughEntitySCorp', 'selfEmploymentTaxSCorp')">
                                        <i class="fas fa-arrow-right">&nbsp;</i>Next Section
                                    </button>
                                    <div class="divider" />
                                    <p class="blast">Self Employment Tax (FICA)</p>
                                </div>
                            </div>
                        </div>
                        <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="selfEmploymentTaxSCorp">
                            <div class="backMenu">
                                <button type="button" class="backBtn" onclick="backSection('Flow Through Entity', 'flowThroughEntitySCorp', 'selfEmploymentTaxSCorp');">
                                    <table id="backTable">
                                        <tr>
                                            <td>
                                                <span class="material-icons" id="backArrow">arrow_back</span>
                                            </td>
                                            <td>
                                                <p class="backTitle">Previous section</p>
                                                <p class="backDesc">Flow Through Entity</p>
                                            </td>
                                        </tr>
                                    </table>
                                </button>
                            </div>
                            <div class="title">
                                <p class="titleTxt">
                                    Self Employment Tax (FICA)
                                </p>
                            </div>
                            <div class="formTxt">
                                <p class="normalTxt formTxtbottom" id="script">
                                    Let’s move to term number two, “Self-Employment Tax.” Self-Employment Tax is the social security and medicare tax that you may have seen come out of your paychecks as a W-2 employee. As an employee, the
                                    company you work(ed) for is/was matching 100% of your contributions to this tax. That said, now that you own a corporation, you are responsible for the full 15.3% in self-employment tax which will be
                                    taken away from your business income which is ON TOP of any other income, payroll, or sales and use taxes you are already paying.
                                    <br />
                                    <br />
                                    Now, there is a possibility we could reduce your self-employment tax by up to 50% if it is determined that you would need to pay yourself a “Reasonable Salary.”
                                    <span id="additionalFirstName8">{!opportunity.Account.Primary_Contact__r.FirstName}</span>, if we could reduce your self-employment tax by up to 50%, how do you think that could benefit your business
                                    specifically?
                                </p>
                                <div id="engage">
                                    <p id="engageTxt">
                                        ✋ Wait for an answer
                                    </p>
                                </div>
                                <div id="buttons">
                                    <button type="button" class="start" id="secondStart" style="color: white;" onclick="nextSection(null, null, 'selfEmploymentTaxSCorp', 'reasonableSalarySCorp');">
                                        <i class="fas fa-arrow-right">&nbsp;</i>Next Section
                                    </button>
                                    <div class="divider" />
                                    <p class="blast">Reasonable Salary</p>
                                </div>
                            </div>
                        </div>
                        <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="reasonableSalarySCorp">
                            <div class="backMenu">
                                <button type="button" class="backBtn" onclick="backSection('Flow Through Entity', 'selfEmploymentTaxSCorp', 'reasonableSalarySCorp');">
                                    <table id="backTable">
                                        <tr>
                                            <td>
                                                <span class="material-icons" id="backArrow">arrow_back</span>
                                            </td>
                                            <td>
                                                <p class="backTitle">Previous section</p>
                                                <p class="backDesc" id="busiDisc">Self Employment Tax (FICA)</p>
                                            </td>
                                        </tr>
                                    </table>
                                </button>
                            </div>
                            <div class="title">
                                <p class="titleTxt">
                                    Reasonable Salary
                                </p>
                            </div>
                            <div class="formTxt">
                                <p class="normalTxt formTxtbottom" id="script">
                                    <span>{!opportunity.Account.Primary_Contact__r.FirstName}</span>, in regards to a “Reasonable Salary” and what the IRS views as “reasonable” there are three criteria that need to be taken into
                                    consideration for determining what the shareholder/you did for the corporation by looking at the source of the gross receipts of the corporation.
                                    <br />
                                    <br />
                                    The three major sources outlined by the IRS are:
                                    <br />
                                    <br />
                                    &nbsp;1. Services of shareholders
                                    <br />
                                    &nbsp;2. Services of non-shareholder employees
                                    <br />
                                    &nbsp;3. Capital and equipment
                                    <br />
                                    <br />
                                    This can be incredibly confusing as every business is different and every business owner plays a unique role in the business. Finding the solution to a reasonable salary in the eyes of the IRS is going to
                                    be a very important part of your tax strategy and will definitely be crucial to your long term success.
                                    <br />
                                    <br />
                                    While you are in the early stages of your business, this may not seem like a major factor, but as you begin to meet your goals and the business grows, this should be on your radar and should always be
                                    included in a Tax Strategy year over year.
                                </p>
                                <div id="engage">
                                    <p id="engageTxt">
                                        ✋ Wait for an answer
                                    </p>
                                </div>
                            </div>
                            <div id="buttons">
                                <button type="button" class="start" id="secondStart" style="color: white;" onclick="nextSection(null, 'Beneficial Ownership Information (BOI)', 'reasonableSalarySCorp', 'boiIntroSCorp');">
                                    <i class="fas fa-arrow-right">&nbsp;</i>Next Section
                                </button>
                                <div class="divider" />
                                <p class="blast" id="endNote">Beneficial Ownership Information (BOI)</p>
                            </div>
                        </div>
                        
                        <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="boiIntroSCorp">
                            <div class="backMenu">
                                <button type="button" class="backBtn" onclick="backSection('Flow Through Entity', 'reasonableSalarySCorp', 'boiIntroSCorp');">
                                    <table id="backTable">
                                        <tr>
                                            <td>
                                                <span class="material-icons" id="backArrow">arrow_back</span>
                                            </td>
                                            <td>
                                                <p class="backTitle">Previous section</p>
                                                <p class="backDesc">Reasonable Salary</p>
                                            </td>
                                        </tr>
                                    </table>
                                </button>
                            </div>
                            <div class="title">
                                <p class="titleTxt">
                                    Beneficial Ownership Information (BOI)
                                </p>
                            </div>
                            <div class="formTxt">
                                <p class="normalTxt formTxtbottom" id="script">
                                    The final term is "Beneficial Ownership Information" or BOI. This impacts business owners differently depending on when your business was formed.
                                </p>
                                <div class="questionRow">
                                    <p class="normalTxt" id="script">
                                        <apex:outputPanel >
                                            <spam id="txtRequiredOrange">(Required) </spam>
                                        </apex:outputPanel>
                                        <br />
                                        When did you form your business?
                                    </p>
                                    <div class="form-floating" id="buttonsDisc" style="margin-bottom: 5px;">
                                        <apex:input type="date"
                                            value="{!formationDate}"
                                            styleClass="date-select start-date"
                                            style="height: auto; padding-top: 5%; padding-bottom: 5%;"
                                            id="formationDateSCorp"
                                            html-data-id="formationDate"
                                            onchange="saveFormationDate(this);"
                                            size="1"
                                        ></apex:input>
                                    </div>
                                    <p class="backTitle" style="margin-bottom: 50px;">This can be a general guess</p>
                                </div>
                                <div
                                    class="businessFormationAlert"
                                    style="
                                        width: fit-content;
                                        height: fit-content;
                                        padding-left: 16px;
                                        padding-right: 16px;
                                        padding-top: 5px;
                                        padding-bottom: 5px;
                                        background: rgba(23, 118, 182, 0.12);
                                        border-radius: 4px;
                                        justify-content: flex-start;
                                        align-items: center;
                                        gap: 12px;
                                        display: none;
                                        margin-bottom: 30px;
                                    "
                                >
                                    <div style="padding-top: 8px; padding-bottom: 8px; border-radius: 4px; flex-direction: row; justify-content: flex-start; align-items: center; gap: 4px; display: inline-flex;">
                                        <svg aria-hidden="true" class="slds-icon" style="fill: rgb(23, 118, 182, 1); width: 1.7rem; height: 1.7rem;">
                                            <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#info_alt')}"></use>
                                        </svg>
                                        <div
                                            class="businessFormationAlertText"
                                            style="color: rgba(17.7, 22.61, 36.12, 0.91); font-size: 17px; font-family: Poppins; font-weight: 400; line-height: 20px; letter-spacing: 0.14px; word-wrap: break-word;"
                                        >
                                            The client’s business was formed {{x}} days ago.
                                        </div>
                                    </div>
                                </div>
                                <div id="engage">
                                    <p id="engageTxt">
                                        ✋ Acknowledge the client's answer
                                    </p>
                                </div>
                                <p class="normalTxt formTxtbottom boiIntro2024Text" style="display: none;" id="script">
                                    As a result of the Corporate Transparency Act, the Financial Crimes Enforcement Network is requiring 97% of companies to submit the Beneficial Ownership Information (BOI) forms within 90 days to the US
                                    Government about who ultimately owns and controls your company in an effort to combat financial crimes.
                                    <br />
                                    <br />
                                    Filing this properly is a significant concern because providing false information or failing to report or update beneficial ownership information may result in significant penalties.
                                    <br />
                                    <br />
                                    The civil penalty for failure to file by the deadline is $500 per day up to $10,000.
                                    <br />
                                    <br />
                                    Were you already aware of this?
                                </p>
                                <p class="normalTxt formTxtbottom boiIntro2023Text" style="display: none;" id="script">
                                    As a result of the Corporate Transparency Act, the Financial Crimes Enforcement Network is requiring 97% of existing companies to submit the Beneficial Ownership Information (BOI) form to the US
                                    Government about who ultimately owns and controls your company in an effort to combat financial crimes.
                                    <br />
                                    <br />
                                    Filing this properly is a significant concern because providing false information or failing to report or update beneficial ownership information may result in significant penalties. The civil penalty for
                                    failure to file is $500 per day up to $10,000.
                                    <br />
                                    <br />
                                    When it comes to a filing this important, would you agree it’s better to file sooner and be done with it or later and run the risk of forgetting?
                                </p>
                                <div id="engage" class="boiIntroEngageText" style="display: none;">
                                    <p id="engageTxt">
                                        ✋ Get an answer
                                    </p>
                                </div>
                                <div id="buttons">
                                    <button type="button" class="start" id="secondStart" style="color: white;" onclick="nextSection(null, null, 'boiIntroSCorp', 'properEntityStrugReviewSCorp');">
                                        <i class="fas fa-arrow-right">&nbsp;</i>Next Section
                                    </button>
                                    <div class="divider" />
                                    <p class="blast">Review Proper Entity Structuring</p>
                                </div>
                            </div>
                        </div>
                        <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="properEntityStrugReviewSCorp">
                            <div class="backMenu">
                                <button type="button" class="backBtn" onclick="backSection('Flow Through Entity', 'boiIntroSCorp', 'properEntityStrugReviewSCorp');">
                                    <table id="backTable">
                                        <tr>
                                            <td>
                                                <span class="material-icons" id="backArrow">arrow_back</span>
                                            </td>
                                            <td>
                                                <p class="backTitle">Previous section</p>
                                                <p class="backDesc">Beneficial Ownership Information (BOI)</p>
                                            </td>
                                        </tr>
                                    </table>
                                </button>
                            </div>
                            <div class="title">
                                <p class="titleTxt">
                                    Review Proper Entity Structuring
                                </p>
                            </div>
                            <div class="formTxt">
                                <p class="normalTxt formTxtbottom" id="script">
                                    Passing this type of knowledge to you through this consultation is what we pride ourselves on here at 1-800ACCOUNTANT.
                                    <br />
                                    <br />
                                    So, how am I doing so far <span id="additionalFirstName8">{!opportunity.Account.Primary_Contact__r.FirstName}</span>?
                                    <br />
                                    <br />
                                    Do you feel like you have a good grasp on Flow Through Entity, Self-Employment Tax, Reasonable Salary, and Beneficial Ownership Information?
                                </p>
                                <div id="engage">
                                    <p id="engageTxt">
                                        ✋ Wait for an answer
                                    </p>
                                </div>
                                <p class="normalTxt formTxtbottom" id="script">
                                    Let me pause and make sure we are in sync on the four main topics related to proper entity structuring, since our goal is to maximize your deductions and setup your business in the most tax-efficient way
                                    possible:
                                    <br />
                                    <br />
                                    1. <b>Flow-Through Entity: </b> do you understand that your profit or loss will flow through to your personal income?
                                    <br />
                                    <br />
                                    2. <b>Self-Employment Tax: </b> do you understand by creating a proper tax strategy you could reduce your Self-Employment Tax liability by up to 50%?
                                    <br />
                                    <br />
                                    3. <b>Reasonable Salary: </b> do you understand that paying you or your shareholders a reasonable salary may be crucial to your long term success? 
                                    <br />
                                    <br />
                                    4. <b>Beneficial Ownership Information: </b> do you understand that reporting who owns and controls your company is necessary and should be done as soon as possible?
                                    <br />
                                    <br />
                                    We good here? Great!
                                </p>
                                <div id="engage">
                                    <p id="engageTxt">
                                        ✋ Acknowledge the client understands these points
                                    </p>
                                </div>
                                <div id="buttons">
                                    <button type="button" class="start" id="secondStart" style="color: white;" onclick="nextSection(null, null, 'properEntityStrugReviewSCorp', 'deductionsIntro');">
                                        <i class="fas fa-arrow-right">&nbsp;</i>Next Section
                                    </button>
                                    <div class="divider" />
                                    <p class="blast">Deductions Introduction</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="deductionsIntro">
                        <div class="backMenu">
                            <button type="button" class="backBtn" onclick="backSection('Flow Through Entity', 'properEntityStrugReview', 'deductionsIntro');">
                                <table id="backTable">
                                    <tr>
                                        <td>
                                            <span class="material-icons" id="backArrow">arrow_back</span>
                                        </td>
                                        <td>
                                            <p class="backTitle">Previous section</p>
                                            <p class="backDesc">Proper Entity Structuring Review</p>
                                        </td>
                                    </tr>
                                </table>
                            </button>
                        </div>
                        <div class="title">
                            <p class="titleTxt">
                                Deductions Introduction
                            </p>
                        </div>
                        <div class="formTxt">
                            <p class="normalTxt formTxtbottom" id="script">
                                Now let’s move on to Deductions and the ability to write off expenses you’ve made or will make into your business. While there are potentially hundreds of available deductions your business may qualify for
                                over the years, for now, let’s just focus on some deductions that are relevant to you today and in the immediate future.
                            </p>
                            <div id="buttons">
                                <button type="button" class="start" id="secondStart" style="color: white;" onclick="nextSection(7, 'Start-up Costs', 'deductionsIntro', 'startUpCosts');">
                                    <i class="fas fa-arrow-right">&nbsp;</i>Next Section
                                </button>
                                <div class="divider" />
                                <p class="blast">Go to Start-up Costs</p>
                            </div>
                        </div>
                    </div>
                    <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="startUpCosts">
                        <div class="backMenu">
                            <button type="button" class="backBtn" onclick="backSection('Flow Through Entity', 'deductionsIntro', 'startUpCosts');">
                                <table id="backTable">
                                    <tr>
                                        <td>
                                            <span class="material-icons" id="backArrow">arrow_back</span>
                                        </td>
                                        <td>
                                            <p class="backTitle">Previous section</p>
                                            <p class="backDesc">Deductions Introduction</p>
                                        </td>
                                    </tr>
                                </table>
                            </button>
                        </div>
                        <div class="title">
                            <p class="titleTxt">
                                Start-up Costs
                            </p>
                        </div>
                        <div class="formTxt">
                            <p class="normalTxt formTxtbottom" id="script">
                                Let’s begin with Start-up Costs, <span id="additionalFirstName9">{!opportunity.Account.Primary_Contact__r.FirstName}</span>.
                                <br />
                                <br />
                                In our discovery session earlier, you stated that you have invested <span id="startUpAmount"></span> into your business so far. The good news is that with recent changes to the tax code, you are allowed to
                                deduct up to $5,000 dollars in start-up costs.
                                <br />
                                <br />
                                Start-up costs can be expenses like website development, storefront build out, marketing, equipment, supplies, educational seminars, continuing education, accounting services etc.
                                <br />
                                <br />
                                The IRS also allows you to deduct up to $5,000 in Organizational Expenses. These can be legal and accounting services related to entity formation and the state and federal fees associated with setting up your
                                business.
                                <br />
                                <br />
                                OK, so you understand startup costs and organizational expenses, correct <span id="additionalFirstName10">{!opportunity.Account.Primary_Contact__r.FirstName}</span>?
                            </p>
                            <div id="engage">
                                <p id="engageTxt" style="margin-bottom: 12px;">
                                    ✋ In order to proceed you must verify that the client understands Startup and Organizational Costs
                                </p>
                                <input type="checkbox" id="understands" name="understands" onchange="validateButtons()" />
                                <label class="normalTxt formTxtbottom" for="understands">&nbsp;Client understands start-up costs (Required).</label>
                            </div>
                            <br />
                            <p class="normalTxt formTxtbottom" id="script"><b>You must review at least one of the following deductions:</b></p>
                            <button type="button" class="start medicalbtn" id="medicalbtn" style="color: white; display: block; margin-bottom: 3%;" onclick="nextSection(8, 'Medical Deduction', 'startUpCosts', 'medicalDeduction');">
                                <i class="fas fa-arrow-right">&nbsp;</i>Go to Medical Deduction
                            </button>
                            <button type="button" class="start vehiclebtn" id="vehiclebtn" style="color: white; display: block; margin-bottom: 3%;" onclick="nextSection(9, 'Vehicle Deduction', 'startUpCosts', 'vehicleDeduction');">
                                <i class="fas fa-arrow-right">&nbsp;</i>Go to Vehicle Deduction
                            </button>
                            <button type="button" class="start officebtn" id="officebtn" style="color: white; display: block; margin-bottom: 3%;" onclick="nextSection(10, 'Home Office Deduction', 'startUpCosts', 'homeOfficeDeduction');">
                                <i class="fas fa-arrow-right">&nbsp;</i>Go to Home Office Deduction
                            </button>
                            <button type="button" class="start 199Abtn" id="199Abtn" style="color: white; display: block; margin-bottom: 3%;" onclick="nextSection(11, 'Code Section 199A Deduction', 'startUpCosts', 'codeDeduction');">
                                <i class="fas fa-arrow-right">&nbsp;</i>Go to Code Section 199A Deduction
                            </button>
                        </div>
                    </div>
                    <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="medicalDeduction">
                        <div class="backMenu">
                            <button type="button" class="backBtn" onclick="backSection('Start-up Costs', 'startUpCosts', 'medicalDeduction');">
                                <table id="backTable">
                                    <tr>
                                        <td>
                                            <span class="material-icons" id="backArrow">arrow_back</span>
                                        </td>
                                        <td>
                                            <p class="backTitle">Previous section</p>
                                            <p class="backDesc">Start-Up Costs</p>
                                        </td>
                                    </tr>
                                </table>
                            </button>
                        </div>
                        <div class="title">
                            <p class="titleTxt">
                                Medical Deduction
                            </p>
                        </div>
                        <div class="formTxt">
                            <p class="normalTxt formTxtbottom" id="script">
                                Let’s talk about Medical deductions.
                                <br />
                                <br />
                                When it comes to Medical, you need to understand that as a small-business owner, you now have the same opportunities for deductions as any major Fortune 500 corporation. Meaning,
                                <span id="additionalFirstName11">{!opportunity.Account.Primary_Contact__r.FirstName}</span>, if your new company is paying your premiums, then those premiums may become up to 100% tax deductible. With the
                                average premium paid for individual coverage coming in at over $400/month, that can mean thousands of dollars back in your pocket in the form of a tax deduction every single year.
                                <br />
                                <br />
                                Do you understand, <span id="additionalFirstName12">{!opportunity.Account.Primary_Contact__r.FirstName}</span>? Great!
                            </p>
                            <div id="engage">
                                <p id="engageTxt" style="margin-bottom: 12px;">
                                    ✋ In order to proceed you must verify that the client understands Medical Deduction
                                </p>
                                <input type="checkbox" id="understandsMed" name="understandsMed" onchange="showDeductBtns();" />
                                <label class="normalTxt formTxtbottom" for="understandsMed">&nbsp;Client understands Medical Deductions. (Required)</label>
                            </div>
                            <div id="buttons" style="margin-bottom: 3%;">
                                <button type="button" class="start" id="reviewDeductionNext1" style="color: white;" onclick="nextSection(12, 'Review Deductions', 'medicalDeduction', 'reviewDeduction');">
                                    <i class="fas fa-arrow-right">&nbsp;</i>Next Section
                                </button>
                                <div class="divider" />
                                <p class="blast">Review All Deductions</p>
                            </div>
                            <p class="normalTxt formTxtbottom" id="script"><b>Review other deductions (Optional)</b></p>
                            <button type="button" class="hidequestion" id="vehiclebtnWhite1" style="margin-bottom: 3%; display: block;" onclick="nextSection(9, 'Vehicle Deduction', 'medicalDeduction', 'vehicleDeduction');">
                                <i class="fas fa-arrow-right">&nbsp;</i>Go to Vehicle Deduction
                            </button>
                            <button type="button" class="hidequestion" id="officebtnWhite1" style="margin-bottom: 3%; display: block;" onclick="nextSection(10, 'Home Office Deduction', 'medicalDeduction', 'homeOfficeDeduction');">
                                <i class="fas fa-arrow-right">&nbsp;</i>Go to Home Office Deduction
                            </button>
                            <button type="button" class="hidequestion" id="199AbtnWhite1" style="margin-bottom: 3%; display: block;" onclick="nextSection(11, 'Code Section 199A Deduction', 'medicalDeduction', 'codeDeduction');">
                                <i class="fas fa-arrow-right">&nbsp;</i>Go to Code Section 199A Deduction
                            </button>
                        </div>
                    </div>
                    <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="vehicleDeduction">
                        <div class="backMenu">
                            <button type="button" class="backBtn" onclick="backSection('Medical Deduction', 'medicalDeduction', 'vehicleDeduction');">
                                <table id="backTable">
                                    <tr>
                                        <td>
                                            <span class="material-icons" id="backArrow">arrow_back</span>
                                        </td>
                                        <td>
                                            <p class="backTitle">Previous section</p>
                                            <p class="backDesc">Medical Deduction</p>
                                        </td>
                                    </tr>
                                </table>
                            </button>
                        </div>
                        <div class="title">
                            <p class="titleTxt">
                                Vehicle Deduction
                            </p>
                        </div>
                        <div class="formTxt">
                            <p class="normalTxt formTxtbottom" id="script">
                                Moving on to the Vehicle Deduction.
                                <br />
                                <br />
                                This is likely the most common deduction written off by small-businesses. The IRS allows one of two methods for deducting expenses related to the use of your vehicle for business. These are the “Actual
                                Expense Method” or the “Standard Mileage Method”.
                                <br />
                                <br />
                                The 'actual expense method' allows you to deduct the actual costs associated with maintaining the vehicle for business use, such as gas, oil changes, tires, insurance, and registration fees, etc. That could
                                add up to thousands of dollars per year.
                                <br />
                                <br />
                                The standard mileage method allows for a 65.5 cents per mile deduction. With the average American driving 15,000 miles per year, that can add up to a significant deduction. If just 50% of the mileage were for
                                business this year, that would be around a $4,800 annual write off. Would you say that’s significant, <span id="additionalFirstName13">{!opportunity.Account.Primary_Contact__r.FirstName}</span>?
                            </p>
                            <div id="engage">
                                <p id="engageTxt" style="margin-bottom: 12px;">
                                    ✋ In order to proceed you must verify that the client understands Vehicle Deduction
                                </p>
                                <input type="checkbox" id="understandsVeh" name="understandsVeh" onchange="showDeductBtns();" />
                                <label class="normalTxt formTxtbottom" for="understandsVeh">&nbsp;Client understands Vehicle Deductions. (Optional)</label>
                            </div>
                            <div id="buttons" style="margin-bottom: 3%;">
                                <button type="button" class="start" id="reviewDeductionNext2" style="color: white;" onclick="nextSection(12, 'Review Deductions', 'vehicleDeduction', 'reviewDeduction');">
                                    <i class="fas fa-arrow-right">&nbsp;</i>Next Section
                                </button>
                                <div class="divider" />
                                <p class="blast">Review All Deductions</p>
                            </div>
                            <p class="normalTxt formTxtbottom" id="script"><b>Review other deductions (Optional)</b></p>
                            <button type="button" class="hidequestion" id="vehiclebtnWhite2" style="margin-bottom: 3%; display: block;" onclick="nextSection(8, 'Medical Deduction', 'vehicleDeduction', 'medicalDeduction');">
                                <i class="fas fa-arrow-right">&nbsp;</i>Go to Medical Deduction
                            </button>
                            <button type="button" class="hidequestion" id="officebtnWhite2" style="margin-bottom: 3%; display: block;" onclick="nextSection(10, 'Home Office Deduction', 'vehicleDeduction', 'homeOfficeDeduction');">
                                <i class="fas fa-arrow-right">&nbsp;</i>Go to Home Office Deduction
                            </button>
                            <button type="button" class="hidequestion" id="199AbtnWhite2" style="margin-bottom: 3%; display: block;" onclick="nextSection(11, 'Code Section 199A Deduction', 'vehicleDeduction', 'codeDeduction');">
                                <i class="fas fa-arrow-right">&nbsp;</i>Go to Code Section 199A Deduction
                            </button>
                        </div>
                    </div>
                    <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="homeOfficeDeduction">
                        <div class="backMenu">
                            <button type="button" class="backBtn" onclick="backSection('Vehicle Deduction', 'vehicleDeduction', 'homeOfficeDeduction');">
                                <table id="backTable">
                                    <tr>
                                        <td>
                                            <span class="material-icons" id="backArrow">arrow_back</span>
                                        </td>
                                        <td>
                                            <p class="backTitle">Previous section</p>
                                            <p class="backDesc">Vehicle Deduction</p>
                                        </td>
                                    </tr>
                                </table>
                            </button>
                        </div>
                        <div class="title">
                            <p class="titleTxt">
                                Home Office Deduction
                            </p>
                        </div>
                        <div class="formTxt">
                            <p class="normalTxt formTxtbottom" id="script">
                                Moving to the Home Office deduction.
                                <br />
                                <br />
                                There are also two different methods allowed by the IRS for deducting these expenses.
                                <br />
                                <br />
                                There is the simplified method, where you can take up to 300 sq. ft. of your home, as an office, at $5 per foot and bam! You just found yourself another $1,500 annual write off.
                                <br />
                                <br />
                                With method two, it can get even better. It’s based on the square footage of your home, allowing you to deduct a percentage of the total costs of your rent/mortgage, taxes, maintenance and insurance, etc.
                                However, <span id="additionalFirstName14">{!opportunity.Account.Primary_Contact__r.FirstName}</span>, this deduction is more complicated due to a potential recapture tax in the event you sell your home.
                                Therefore, it is critical that you have a comprehensive tax strategy in place before taking advantage of the percentage deduction.
                            </p>
                            <div id="engage">
                                <p id="engageTxt" style="margin-bottom: 12px;">
                                    ✋ In order to proceed you must verify that the client understands Home Office deduction
                                </p>
                                <input type="checkbox" id="understandsHome" name="understandsHome" onchange="showDeductBtns();" />
                                <label class="normalTxt formTxtbottom" for="understandsHome">&nbsp;Client understands Home Office Deductions. (Optional)</label>
                            </div>
                            <div id="buttons" style="margin-bottom: 3%;">
                                <button type="button" class="start" id="reviewDeductionNext3" style="color: white;" onclick="nextSection(12, 'Review Deductions', 'homeOfficeDeduction', 'reviewDeduction');">
                                    <i class="fas fa-arrow-right">&nbsp;</i>Next Section
                                </button>
                                <div class="divider" />
                                <p class="blast">Review All Deductions</p>
                            </div>
                            <p class="normalTxt formTxtbottom" id="script"><b>Review other deductions (Optional)</b></p>
                            <button type="button" class="hidequestion" id="officebtnWhite3" style="margin-bottom: 3%; display: block;" onclick="nextSection(8, 'Medical Deduction', 'homeOfficeDeduction', 'medicalDeduction');">
                                <i class="fas fa-arrow-right">&nbsp;</i>Go to Medical Deduction
                            </button>
                            <button type="button" class="hidequestion" id="vehiclebtnWhite3" style="margin-bottom: 3%; display: block;" onclick="nextSection(9, 'Vehicle Deduction', 'homeOfficeDeduction', 'vehicleDeduction');">
                                <i class="fas fa-arrow-right">&nbsp;</i>Go to Vehicle Deduction
                            </button>
                            <button type="button" class="hidequestion" id="199AbtnWhite3" style="margin-bottom: 3%; display: block;" onclick="nextSection(11, 'Code Section 199A Deduction', 'homeOfficeDeduction', 'codeDeduction');">
                                <i class="fas fa-arrow-right">&nbsp;</i>Go to Code Section 199A Deduction
                            </button>
                        </div>
                    </div>
                    <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="codeDeduction">
                        <div class="backMenu">
                            <button type="button" class="backBtn" onclick="backSection('Home Office Deduction', 'homeOfficeDeduction', 'codeDeduction');">
                                <table id="backTable">
                                    <tr>
                                        <td>
                                            <span class="material-icons" id="backArrow">arrow_back</span>
                                        </td>
                                        <td>
                                            <p class="backTitle">Previous section</p>
                                            <p class="backDesc">Home Office Deduction</p>
                                        </td>
                                    </tr>
                                </table>
                            </button>
                        </div>
                        <div class="title">
                            <p class="titleTxt">
                                Code Section 199A Deduction
                            </p>
                        </div>
                        <div class="formTxt">
                            <p class="normalTxt formTxtbottom" id="script">
                                Now let’s talk about the Code Section 199A deduction.
                                <br />
                                <br />
                                Simply put, you may be able to deduct 20% of your Business Profits. Meaning, if you have net profits, you can take that 20% as a deduction on your personal income tax return.
                                <br />
                                <br />
                                Wouldn’t you agree that this is a major benefit to having a profitable business?
                            </p>
                            <div id="engage">
                                <p id="engageTxt">
                                    ✋ Wait for an answer
                                </p>
                            </div>
                            <p class="normalTxt formTxtbottom" id="script">
                                I agree completely!
                            </p>
                            <div id="engage">
                                <p id="engageTxt" style="margin-bottom: 12px;">
                                    ✋ In order to proceed you must verify that the client understands Code Section 199A deduction
                                </p>
                                <input type="checkbox" id="understandsCode" name="understandsCode" onchange="showDeductBtns();" />
                                <label class="normalTxt formTxtbottom" for="understandsCode">&nbsp;Client understands Code Section 199A. (Optional)</label>
                            </div>
                            <div id="buttons" style="margin-bottom: 3%;">
                                <button type="button" class="start" id="reviewDeductionNext4" style="color: white;" onclick="nextSection(12, 'Review Deductions', 'codeDeduction', 'reviewDeduction');">
                                    <i class="fas fa-arrow-right">&nbsp;</i>Next Section
                                </button>
                                <div class="divider" />
                                <p class="blast">Review All Deductions</p>
                            </div>
                            <p class="normalTxt formTxtbottom" id="script">
                                <b>
                                    <br />
                                    Review other deductions (Optional)
                                </b>
                            </p>
                            <button type="button" class="hidequestion" id="199AbtnWhite4" style="margin-bottom: 3%; display: block;" onclick="nextSection(8, 'Medical Deduction', 'codeDeduction', 'medicalDeduction');">
                                <i class="fas fa-arrow-right">&nbsp;</i>Go to Medical Deduction
                            </button>
                            <button type="button" class="hidequestion" id="vehiclebtnWhite4" style="margin-bottom: 3%; display: block;" onclick="nextSection(9, 'Vehicle Deduction', 'codeDeduction', 'vehicleDeduction');">
                                <i class="fas fa-arrow-right">&nbsp;</i>Go to Vehicle Deduction
                            </button>
                            <button type="button" class="hidequestion" id="officebtnWhite4" style="margin-bottom: 3%; display: block;" onclick="nextSection(10, 'Home Office Deduction', 'codeDeduction', 'homeOfficeDeduction');">
                                <i class="fas fa-arrow-right">&nbsp;</i>Go to Home Office Deduction
                            </button>
                        </div>
                    </div>
                    <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="reviewDeduction">
                        <div class="backMenu">
                            <button type="button" class="backBtn" onclick="backSection('Code Section 199A Deduction', 'codeDeduction', 'reviewDeduction');">
                                <table id="backTable">
                                    <tr>
                                        <td>
                                            <span class="material-icons" id="backArrow">arrow_back</span>
                                        </td>
                                        <td>
                                            <p class="backTitle">Previous section</p>
                                            <p class="backDesc">Code Section 199A Deduction</p>
                                        </td>
                                    </tr>
                                </table>
                            </button>
                        </div>
                        <div class="title">
                            <p class="titleTxt">
                                Review Deductions
                            </p>
                        </div>
                        <div class="formTxt">
                            <p class="normalTxt formTxtbottom" id="script">
                                So, a quick recap. <span id="revDeductForEntity"></span>
                                along with the deduction(s) of:
                                <span id="dedMedical" style="display: none;"> - Medical</span>
                                <span id="dedVehicle" style="display: none;"> - Vehicle</span>
                                <span id="dedHomeOffice" style="display: none;"> - Home Office</span>
                                <span id="dedCodeSec" style="display: none;"> - 199A</span>
                                <br />
                                <br />
                                Are you ready to tie all this together? Fantastic!
                            </p>
                            <div id="buttons" style="margin-bottom: 3%;">
                                <button type="button" class="start" id="next" style="color: white; opacity: 1;" onclick="nextSection(13, 'Paperloss', 'reviewDeduction', 'paperloss');">
                                    <i class="fas fa-arrow-right">&nbsp;</i>Next Section
                                </button>
                                <div class="divider" />
                                <p class="blast">Paperloss Formula</p>
                            </div>
                        </div>
                    </div>
                    <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="paperloss">
                        <div class="backMenu">
                            <button type="button" class="backBtn" onclick="backSection('Review Deductions', 'reviewDeduction', 'paperloss');">
                                <table id="backTable">
                                    <tr>
                                        <td>
                                            <span class="material-icons" id="backArrow">arrow_back</span>
                                        </td>
                                        <td>
                                            <p class="backTitle">Previous section</p>
                                            <p class="backDesc">Review Deductions</p>
                                        </td>
                                    </tr>
                                </table>
                            </button>
                        </div>
                        <div class="title">
                            <p class="titleTxt">
                                Paperloss
                            </p>
                        </div>
                        <!-- Paperloss Intro -->
                        <div class="formTxt" id="vertSectLine1">
                            <p class="normalTxt discoTitle2" id="script">
                                <button type="button" id="currtSlide1" onclick="getSecOne();">Current Slide</button>
                                <spam id="partSec1">Paperloss Intro</spam>
                            </p>
                            <div class="formTxt" id="PaperlossIntro">
                                <p class="normalTxt formTxtbottom" id="script">
                                    Alright then, here we go. Let’s get this to the finish line. We’re going to talk about “Paper Loss.”
                                    <br />
                                    <br />
                                    It’s not uncommon and frankly it’s expected by the IRS for a new business to have a paper loss when a new business is started. That said, if the previous items we discussed are part of a comprehensive tax
                                    strategy that is executed and maintained with a disciplined approach, you can achieve a maximum paper loss as outlined in the US tax code.
                                    <br />
                                    <br />
                                    The formula for understanding the benefits of being an entrepreneur while also being employed at a W-2/1099 job is:
                                    <br />
                                    <br />
                                    (W-2/1099 Income + Other Taxable Income - Standard or Itemized Deductions - Business Expenses = AGI (Adjusted Gross Income).
                                </p>
                            </div>
                        </div>
                        <!-- Paperloss Formula -->
                        <div class="formTxt" id="vertSectLine2">
                            <p class="normalTxt discoTitle2" id="script">
                                <button type="button" id="currtSlide2" onclick="getSecTwo();">Current Slide</button>
                                <spam id="partSec2">Paperloss Formula</spam>
                            </p>
                            <div class="formTxt" id="PaperlossFormula">
                                <p class="normalTxt formTxtbottom" id="script">
                                    So, I’m going to repeat that to ensure it makes sense, <span id="additionalFirstName15">{!opportunity.Account.Primary_Contact__r.FirstName}</span>. W-2/1099 earnings, minus a combination of write offs and
                                    deductions when added together will more than likely result in a lower adjusted gross income or AGI. This can significantly reduce your tax liability.
                                </p>
                            </div>
                        </div>
                        <!-- Paperloss Example -->
                        <div class="formTxt" id="vertSectLine3">
                            <p class="normalTxt discoTitle2" id="script">
                                <button type="button" id="currtSlide3" onclick="getSecThree();">Current Slide</button>
                                <spam id="partSec3">Paperloss Example</spam>
                            </p>
                            <div class="formTxt" id="PaperlossExample">
                                <p class="normalTxt formTxtbottom" id="script">
                                    For example, in your salary from your W-2 job, let's say you're earning
                                </p>
                                <div class="form-floating">
                                    <select class="form-select" id="salaryAmount" style="color: #f15f22; width: 50%; padding-top: 25px; height: 54px; margin-bottom: 5%;" onchange="changePaperlossSalaryAmount(this);">
                                        <option disabled="disabled" selected="selected" style="color: #f15f22;">Select an Amount</option>
                                        <!--0-->
                                        <option>30,000</option>
                                        <!--1-->
                                        <option>50,000</option>
                                        <!--2-->
                                        <option>75,000</option>
                                        <!--3-->
                                        <option>100,000</option>
                                        <!--4-->
                                    </select>
                                    <label for="salaryAmount">W-2 Job Salary Amount</label>
                                </div>
                                <p class="normalTxt formTxtbottom" id="script">
                                    and you have a loss from your business of
                                </p>
                                <div class="form-floating">
                                    <select class="form-select" id="businessLossAmount" style="color: #f15f22; width: 50%; padding-top: 25px; height: 54px; margin-bottom: 5%;" onchange="changePaperlossbusinessLossAmount(this);">
                                        <option disabled="disabled" selected="selected" style="color: #f15f22;">Select an Amount</option>
                                        <!--0-->
                                        <option></option>
                                        <option></option>
                                        <option></option>
                                        <option></option>
                                    </select>
                                    <label for="businessLossAmount">Business Loss Amount</label>
                                </div>
                                <p class="normalTxt formTxtbottom" id="script">
                                    Instead of reporting $<span id="amountforExample">__,___</span> in income on your personal taxes the business loss is going to pass through to your personal income tax and you would only report $
                                    <span id="incomeforExample">__,___</span> of income. The whole goal of corporate accounting and what we can provide for you is to help you potentially receive as much of a tax refund as you can get or
                                    help you owe less. After the first year and as your business grows, having a solo 401K or SEP IRA can become tools used to lower your AGI, control your tax rate, and shift income.
                                    <br />
                                    <br />
                                    This is what we call tax strategy and over the next year, we want to put together a plan that involves building that paper loss as high as possible since the IRS is expecting it.
                                </p>
                                <div id="engage">
                                    <p id="engageTxt">
                                        ✋ Wait for an answer
                                    </p>
                                </div>
                                <p class="normalTxt formTxtbottom" id="script">
                                    Okay, great! So, let me ask you, <span id="additionalFirstName17">{!opportunity.Account.Primary_Contact__r.FirstName}</span>, what’s driving you to be an entrepreneur?
                                </p>
                                <!--<p class="normalTxt formTxtbottom optText" id="script">
            <spam id="optTitle">Optional Dialog</spam>
            <br/>
            text
            </p>-->
                                <div id="engage">
                                    <p id="engageTxt">
                                        ✋ Wait and listen. Engage if needed.
                                    </p>
                                </div>
                                <p class="normalTxt formTxtbottom" id="script">
                                    Thank you for sharing that with me.
                                    <br />
                                    <br />
                                    Before we move on, I would like to ask you one more question:
                                    <br />
                                    <br />
                                    Do you see the importance of having a strategy or road map to follow when it comes to your taxes?
                                </p>
                                <div id="engage">
                                    <p id="engageTxt">
                                        ✋ Wait for an answer
                                    </p>
                                </div>
                                <p class="normalTxt formTxtbottom" id="script">
                                    Okay, great. That said, we’re not only here to help educate, we also work with entrepreneurs every day, developing and providing a range of advisory, accounting, tax, and bookkeeping services.
                                </p>
                            </div>
                        </div>
                        <div class="formTxt" id="btn-paperloss">
                            <div id="buttons">
                                <button type="button" class="start" id="secondStart" style="color: white;" onclick="nextSection(14, '1-800Accountant Introduction', 'paperloss', 'features');">
                                    <i class="fas fa-arrow-right">&nbsp;</i>Next Section
                                </button>
                                <div class="divider" />
                                <p class="blast" id="endNote">1800Accountant Features</p>
                            </div>
                        </div>
                    </div>
                    <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="features">
                        <div class="backMenu">
                            <button type="button" class="backBtn" onclick="backSection('Paperloss', 'paperloss', 'preparedPackages');">
                                <table id="backTable">
                                    <tr>
                                        <td>
                                            <span class="material-icons" id="backArrow">arrow_back</span>
                                        </td>
                                        <td>
                                            <p class="backTitle">Previous section</p>
                                            <p class="backDesc">Paperloss</p>
                                        </td>
                                    </tr>
                                </table>
                            </button>
                        </div>
                        <div class="title">
                            <p class="titleTxt">
                                1-800Accountant Introduction
                            </p>
                        </div>
                        <!-- 1-800Accountant Strategy -->
                        <div class="formTxt" id="vertLine1features">
                            <p class="normalTxt discoTitle2" id="script">
                                <button type="button" id="currtSlide1features" onclick="getSecOnefeat();">Current Slide</button>
                                <spam id="partSec1">1-800Accountant Strategy</spam>
                            </p>
                            <div class="formTxt" id="accountantStrategy">
                                <p class="normalTxt formTxtbottom" id="script">
                                    It is an absolute legal necessity to file your income taxes each year and to track your business expenses. This process is not just a once a year event but should be the execution of a year-round strategy
                                    that utilizes an advanced tax plan.
                                </p>
                            </div>
                        </div>
                        <div class="formTxt" id="vertLine2features">
                            <p class="normalTxt discoTitle2" id="script">
                                <button type="button" id="currtSlide2features" onclick="getSecTwofeat();">Current Slide</button>
                                <spam id="partSec1">Other CPAs</spam>
                            </p>
                            <div class="formTxt" id="otherCPAs">
                                <p class="normalTxt formTxtbottom" id="script">
                                    The average cost of these services from a traditional CPA firm, however, can range between $200 to $400 per hour–that’s a burden that a new business typically can’t afford. Additionally, new business
                                    owners can have a lot of questions which makes it difficult to project the hours you may need. This basically requires you to write your CPA a blank check.
                                </p>
                            </div>
                        </div>
                        <div class="formTxt" id="vertLine3features">
                            <p class="normalTxt discoTitle2" id="script">
                                <button type="button" id="currtSlide3features" onclick="getSecThreefeat();">Current Slide</button>
                                <spam id="partSec1">How We’re Different</spam>
                            </p>
                            <div class="formTxt" id="different">
                                <p class="normalTxt formTxtbottom" id="script">
                                    At 1-800Accountant, we operate differently. We don’t have any hourly fees or hidden costs. This is why our services are so affordable for the business owner. With us you get a proactive year-round
                                    strategy, access to powerful technology, and a team of experienced tax and accounting professionals that tie everything together.
                                    <br />
                                    <br />
                                    There is an initial, annual investment of
                                    <spam id="totalAnualCost"></spam>
                                    , (and a monthly cost of $30, if applicable). All of which is 100% tax deductible.And this is what you’ll get…
                                </p>
                            </div>
                        </div>
                        <div class="formTxt" id="btn-features">
                            <div id="buttons">
                                <button type="button" class="start" id="secondStart" style="color: white;" onclick="nextSection(15, 'Your Expert Accountant Team', 'features', 'expertAccountant');">
                                    <i class="fas fa-arrow-right">&nbsp;</i>Next Section
                                </button>
                                <div class="divider" />
                                <p class="blast" id="endNote">1800Accountant Features</p>
                            </div>
                        </div>
                    </div>
                    <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="expertAccountant">
                        <div class="backMenu">
                            <button type="button" class="backBtn" onclick="backSection('1-800Accountant Introduction', 'features', 'expertAccountant');">
                                <table id="backTable">
                                    <tr>
                                        <td>
                                            <span class="material-icons" id="backArrow">arrow_back</span>
                                        </td>
                                        <td>
                                            <p class="backTitle">Previous section</p>
                                            <p class="backDesc">1-800Accountant Cost</p>
                                        </td>
                                    </tr>
                                </table>
                            </button>
                        </div>
                        <div class="title">
                            <p class="titleTxt">
                                Your Expert Accountant Team
                            </p>
                        </div>
                        <div class="formTxt">
                            <p class="normalTxt formTxtbottom" id="script">
                                First, you will receive Unlimited Premier Support and Year-Round Consulting, including your own dedicated accountant who will be your Senior Tax Advisor, a Support Accountant and a Tax Analyst.
                                <br />
                                <br />
                                Your accountant and their team will take a proactive approach by establishing a comprehensive tax strategy for you and your business. They will handle time sensitive items to help you maximize deductions and
                                tax credits in order to save on taxes and save you thousands of dollars each year.
                                <br />
                                <br />
                                They will answer questions about entity classification options, tax compliance obligations, and crucial filing dates. Not only are we building a road map to help your business grow and keep more of your money
                                in your pocket, but we also help you plan for your future with access to a financial planner who can discuss setting up retirement accounts, restructuring debt, setting up life insurance, and more. We are
                                here to minimize your stress and maximize your tax savings through on-demand, unlimited access.
                            </p>
                        </div>
                        <div class="formTxt" id="btn-expertAccountant">
                            <div id="buttons">
                                <button type="button" class="start" id="secondStart" style="color: white;" onclick="nextSection(16, 'Features - 1-800Accountant Portal', 'expertAccountant', 'portalTour');">
                                    <i class="fas fa-arrow-right">&nbsp;</i>Next Section
                                </button>
                                <div class="divider" />
                                <p class="blast" id="endNote">1-800Accountant Portal Tour</p>
                            </div>
                        </div>
                    </div>
                    <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="portalTour">
                        <div class="backMenu">
                            <button type="button" class="backBtn" onclick="backSection('Your Expert Accountant Team', 'expertAccountant', 'portalTour');">
                                <table id="backTable">
                                    <tr>
                                        <td>
                                            <span class="material-icons" id="backArrow">arrow_back</span>
                                        </td>
                                        <td>
                                            <p class="backTitle">Previous section</p>
                                            <p class="backDesc">Your Expert Accountant Team</p>
                                        </td>
                                    </tr>
                                </table>
                            </button>
                        </div>
                        <div class="title">
                            <p class="titleTxt">
                                The 1-800Accountant Portal Tour
                            </p>
                        </div>
                        <div class="formTxt" id="vertLine1portalTour">
                            <p class="normalTxt discoTitle2" id="script">
                                <button type="button" id="currtSlide1portalTour" onclick="getSectionsPortal('Intro');">Current Slide</button>
                                <spam id="partSec1">1-800Accountant Portal</spam>
                            </p>
                            <div class="formTxt" id="accountantPortal">
                                <p class="normalTxt formTxtbottom" id="script">
                                    The second component is our 1-800Accountant Portal access, through this portal you will have access to all the resources 1-800Accountant has to offer you at your fingertips and it includes:
                                </p>
                            </div>
                        </div>
                        <div class="formTxt" id="vertLine2portalTour">
                            <p class="normalTxt discoTitle2" id="script">
                                <button type="button" id="currtSlide2portalTour" onclick="getSectionsPortal('Scheduler');">Current Slide</button>
                                <spam id="partSec1">Appointment Scheduler</spam>
                            </p>
                            <div class="formTxt" id="scheduler">
                                <p class="normalTxt formTxtbottom" id="script">
                                    Your accountant appointment scheduler: This is what gives you any time access for scheduling appointments with your accounting team.
                                </p>
                            </div>
                        </div>
                        <div class="formTxt" id="vertLine3portalTour">
                            <p class="normalTxt discoTitle2" id="script">
                                <button type="button" id="currtSlide3portalTour" onclick="getSectionsPortal('Message');">Current Slide</button>
                                <spam id="partSec1">Message Center</spam>
                            </p>
                            <div class="formTxt" id="messageCenter">
                                <p class="normalTxt formTxtbottom" id="script">
                                    The messaging center: This is for communication between you and your accounting team.
                                </p>
                            </div>
                        </div>
                        <div class="formTxt" id="vertLine4portalTour">
                            <p class="normalTxt discoTitle2" id="script">
                                <button type="button" id="currtSlide4portalTour" onclick="getSectionsPortal('Tax');">Current Slide</button>
                                <spam id="partSec1">Tax Planner</spam>
                            </p>
                            <div class="formTxt" id="taxPlanner">
                                <p class="normalTxt formTxtbottom" id="script">
                                    Tax Planner: You will be able to get a robust assessment of your potential tax liability or tax refund throughout the year so there are no surprises during tax season.
                                </p>
                            </div>
                        </div>
                        <div class="formTxt" id="vertLine5portalTour">
                            <p class="normalTxt discoTitle2" id="script">
                                <button type="button" id="currtSlide5portalTour" onclick="getSectionsPortal('Bookkeeping');">Current Slide</button>
                                <spam id="partSec1">Bookkeeping</spam>
                            </p>
                            <div class="formTxt" id="featBookkeeping">
                                <p class="normalTxt formTxtbottom" id="script">
                                    Automatically download bank and credit card transactions for nearly turn-key bookkeeping, allowing you to focus on business growth rather than paperwork. You can also generate your own financial
                                    statement.
                                </p>
                            </div>
                        </div>
                        <div class="formTxt" id="vertLine6portalTour">
                            <p class="normalTxt discoTitle2" id="script">
                                <button type="button" id="currtSlide6portalTour" onclick="getSectionsPortal('Document');">Current Slide</button>
                                <spam id="partSec1">Document Center</spam>
                            </p>
                            <div class="formTxt" id="DocumentCenter">
                                <p class="normalTxt formTxtbottom" id="script">
                                    Our Document Management Center allows you to upload important financial and IRS documents, as well as easy-to-lose receipts.
                                </p>
                            </div>
                        </div>
                        <div class="formTxt" id="vertLine7portalTour">
                            <p class="normalTxt discoTitle2" id="script">
                                <button type="button" id="currtSlide7portalTour" onclick="getSectionsPortal('Invoices');">Current Slide</button>
                                <spam id="partSec1">Invoices</spam>
                            </p>
                            <div class="formTxt" id="featInvoices">
                                <p class="normalTxt formTxtbottom" id="script">
                                    You can create invoices so you can organize your customer billing, send invoices, and get paid faster!
                                </p>
                            </div>
                        </div>
                        <div class="formTxt" id="vertLine8portalTour">
                            <p class="normalTxt discoTitle2" id="script">
                                <button type="button" id="currtSlide8portalTour" onclick="getSectionsPortal('Mobile');">Current Slide</button>
                                <spam id="partSec1">Mobile App</spam>
                            </p>
                            <div class="formTxt" id="mobileApp">
                                <p class="normalTxt formTxtbottom" id="script">
                                    We also have a mobile app that includes a GPS-based mileage tracker to track and deduct your vehicle mileage. <br />
                                    <br />
                                    You can also take pictures of receipts and invoices and upload them into the portal for quick and easy storage
                                </p>
                            </div>
                        </div>
                        <div class="formTxt" id="vertLine9portalTour">
                            <p class="normalTxt discoTitle2" id="script">
                                <button type="button" id="currtSlide9portalTour" onclick="getSectionsPortal('Summary');">Current Slide</button>
                                <spam id="partSec1">Summary</spam>
                            </p>
                            <div class="formTxt" id="summary">
                                <p class="normalTxt formTxtbottom" id="script">
                                    All of this automatically syncs to your accounting team as well, so there’s never a need to duplicate efforts.
                                </p>
                            </div>
                        </div>
                        <div class="formTxt" id="btn-portalTour">
                            <div id="buttons">
                                <button type="button" class="start" id="portalNextBtn" style="color: white;" onclick="nextSection(25, 'Features - Business & Personal...', 'portalTour', 'filingBusinessTaxes');">
                                    <i class="fas fa-arrow-right">&nbsp;</i>Next Section
                                </button>
                                <div class="divider" />
                                <p class="blast" id="endNote">Preparing and Filing Business Taxes</p>
                            </div>
                        </div>
                    </div>
                    <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="filingBusinessTaxes">
                        <div class="backMenu">
                            <button type="button" class="backBtn" onclick="backSection('Features - 1-800Accountant Portal', 'portalTour', 'filingBusinessTaxes');">
                                <table id="backTable">
                                    <tr>
                                        <td>
                                            <span class="material-icons" id="backArrow">arrow_back</span>
                                        </td>
                                        <td>
                                            <p class="backTitle">Previous section</p>
                                            <p class="backDesc">The 1-800Accountant Portal Tour</p>
                                        </td>
                                    </tr>
                                </table>
                            </button>
                        </div>
                        <div class="title">
                            <p class="titleTxt">
                                Preparing and Filing Business Taxes
                            </p>
                        </div>
                        <div class="formTxt">
                            <p class="normalTxt formTxtbottom" id="script">
                                The final component is the preparation and filing of your business and personal income taxes. Your accountant and their team will also be handling this for you. They will know exactly which filings you need
                                to complete based on your state, industry, and activity. They will complete all your business and personal income tax filings including federal, state, and local if necessary. This way you can have peace of
                                mind and never have to worry about unexpected fines, penalties, or missed filings.
                            </p>
                        </div>
                        <div class="formTxt" id="btn-filingBusinessTaxes">
                            <div id="buttons">
                                <button type="button" class="start" id="secondStart" style="color: white;" onclick="nextSection(26, 'Features - Filing ECE', 'filingBusinessTaxes', 'filingECE');">
                                    <i class="fas fa-arrow-right">&nbsp;</i>Next Section
                                </button>
                                <div class="divider" />
                                <p class="blast" id="endNote">Entity Classification Election</p>
                            </div>
                        </div>
                    </div>
                    <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="filingECE">
                        <div class="backMenu">
                            <button type="button" class="backBtn" onclick="backSection('Features - Business & Personal...', 'filingBusinessTaxes', 'filingECE');">
                                <table id="backTable">
                                    <tr>
                                        <td>
                                            <span class="material-icons" id="backArrow">arrow_back</span>
                                        </td>
                                        <td>
                                            <p class="backTitle">Previous section</p>
                                            <p class="backDesc">Preparing and Filing Business Taxes</p>
                                        </td>
                                    </tr>
                                </table>
                            </button>
                        </div>
                        <div class="title">
                            <p class="titleTxt">
                                Filing your Entity Classification Election
                            </p>
                        </div>
                        <div
                            class="businessFormationAlert"
                            style="width: fit-content; height: fit-content; padding-left: 16px; padding-right: 16px; padding-top: 5px; padding-bottom: 5px; background: rgba(23, 118, 182, 0.12); border-radius: 4px; justify-content: flex-start; align-items: center; gap: 12px; display: none; margin-top: 30px;"
                        >
                            <div style="padding-top: 8px; padding-bottom: 8px; border-radius: 4px; flex-direction: row; justify-content: flex-start; align-items: center; gap: 4px; display: inline-flex;">
                                <svg aria-hidden="true" class="slds-icon" style="fill: rgb(23, 118, 182, 1); width: 1.7rem; height: 1.7rem;">
                                    <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#info_alt')}"></use>
                                </svg>
                                <div
                                    class="businessFormationAlertText"
                                    style="color: rgba(17.7, 22.61, 36.12, 0.91); font-size: 17px; font-family: Poppins; font-weight: 400; line-height: 20px; letter-spacing: 0.14px; word-wrap: break-word;"
                                >
                                    The client’s business was formed {{x}} days ago.
                                </div>
                            </div>
                        </div>
                        <div class="formTxt">
                            <p class="normalTxt formTxtbottom eceFilingTextDefault" id="script">
                                The IRS recommends your ECE be filed within 75 days of forming your business and this is one of the first things your senior tax advisor will be addressing so you don’t 
                                miss this important filing. Every day that this is not filed you’re potentially losing thousands of dollars. 
                            </p>
                            <p class="normalTxt formTxtbottom eceFilingTextOverdue" id="script">
                                Since the IRS recommends the ECE be filed within 75 days and we are past this time period, this is an urgent matter we will want to address as soon as possible. At this 
                                point, we may need to ask the IRS permission to change your election. Every day that is not addressed, you are potentially losing thousands of dollars.
                            </p>
                        </div>
                        <div class="formTxt" id="btn-filingECE">
                            <div id="buttons">
                                <button type="button" class="start" id="secondStart" style="color: white;" onclick="nextSection(27, 'Features - BOI Summary', 'filingECE', 'boiSummary');">
                                    <i class="fas fa-arrow-right">&nbsp;</i>Next Section
                                </button>
                                <div class="divider" />
                                <p class="blast" id="endNote">Beneficial Ownership Information</p>
                            </div>
                        </div>
                    </div>

                    <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="boiSummary">
                        <div class="backMenu">
                            <button type="button" class="backBtn" onclick="backSection('Features - Filing ECE', 'filingECE', 'boiSummary');">
                                <table id="backTable">
                                    <tr>
                                        <td>
                                            <span class="material-icons" id="backArrow">arrow_back</span>
                                        </td>
                                        <td>
                                            <p class="backTitle">Previous section</p>
                                            <p class="backDesc">Filing your Entity Classification Election</p>
                                        </td>
                                    </tr>
                                </table>
                            </button>
                        </div>
                        <div class="title">
                            <p class="titleTxt">
                                Beneficial Ownership Information
                            </p>
                        </div>
                        <div
                            class="businessFormationAlert"
                            style="
                                width: fit-content;
                                height: fit-content;
                                padding-left: 16px;
                                padding-right: 16px;
                                padding-top: 5px;
                                padding-bottom: 5px;
                                background: rgba(23, 118, 182, 0.12);
                                border-radius: 4px;
                                justify-content: flex-start;
                                align-items: center;
                                gap: 12px;
                                display: none;
                                margin-top: 30px;
                            "
                        >
                            <div style="padding-top: 8px; padding-bottom: 8px; border-radius: 4px; flex-direction: row; justify-content: flex-start; align-items: center; gap: 4px; display: inline-flex;">
                                <svg aria-hidden="true" class="slds-icon" style="fill: rgb(23, 118, 182, 1); width: 1.7rem; height: 1.7rem;">
                                    <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#info_alt')}"></use>
                                </svg>
                                <div
                                    class="businessFormationAlertText"
                                    style="color: rgba(17.7, 22.61, 36.12, 0.91); font-size: 17px; font-family: Poppins; font-weight: 400; line-height: 20px; letter-spacing: 0.14px; word-wrap: break-word;"
                                >
                                    The client’s business was formed {{x}} days ago.
                                </div>
                            </div>
                        </div>
                        <div class="formTxt">
                            <p class="normalTxt formTxtbottom boiFilingTextDefault" id="script">
                                And of course, we want to get you compliant with your BOI filing right away, so this will 
                                also be a top priority and something we’ll want to do for you right away to avoid future penalties or fines.
                            </p>
                            <p class="normalTxt formTxtbottom boiFilingTextOverdue" id="script">
                                And of course, the most critical filing for your business right now is the BOI filing which 
                                we’ll want to address right away to stop penalties from accruing and growing interest.  I’ll 
                                get you logged into the Portal at the end of this call and send you directions for uploading the 
                                necessary IDs as well so we can complete the filing as soon as possible.
                            </p>
                        </div>
                        <div class="formTxt" id="btn-filingECE">
                            <div id="buttons">
                                <button type="button" class="start" id="secondStart" style="color: white;" onclick="nextSection(27, 'Features - Wrap Up', 'boiSummary', 'presWrapUp');">
                                    <i class="fas fa-arrow-right">&nbsp;</i>Next Section
                                </button>
                                <div class="divider" />
                                <p class="blast" id="endNote">Presentation Wrap Up</p>
                            </div>
                        </div>
                    </div>

                    <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="presWrapUp">
                        <div class="backMenu">
                            <button type="button" class="backBtn" onclick="backSection('Features - BOI Summary', 'boiSummary', 'presWrapUp');">
                                <table id="backTable">
                                    <tr>
                                        <td>
                                            <span class="material-icons" id="backArrow">arrow_back</span>
                                        </td>
                                        <td>
                                            <p class="backTitle">Previous section</p>
                                            <p class="backDesc">Beneficial Ownership Information</p>
                                        </td>
                                    </tr>
                                </table>
                            </button>
                        </div>
                        <div class="title">
                            <p class="titleTxt">
                                Presentation Wrap Up
                            </p>
                        </div>
                        <div class="formTxt">
                            <p class="normalTxt formTxtbottom" id="script">
                                Remember, all of this is 100% tax deductible, so we’ll be writing this off. Make sense? Great.
                            </p>
                        </div>
                        <div class="formTxt" id="btn-filingECE">
                            <div id="buttons">
                                <button type="button" class="start" id="secondStart" style="color: white;" onclick="nextSection(28, 'Prepared Packages', 'presWrapUp', 'preparedPackages');">
                                    <i class="fas fa-arrow-right">&nbsp;</i>Next Section
                                </button>
                                <div class="divider" />
                                <p class="blast" id="endNote">Prepared Packages</p>
                            </div>
                        </div>
                    </div>
                    <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="preparedPackages">
                        <div class="backMenu">
                            <button type="button" class="backBtn" onclick="backSection('Features - Wrap Up', 'presWrapUp', 'preparedPackages');">
                                <table id="backTable">
                                    <tr>
                                        <td>
                                            <span class="material-icons" id="backArrow">arrow_back</span>
                                        </td>
                                        <td>
                                            <p class="backTitle">Previous section</p>
                                            <p class="backDesc">Presentation Wrap Up</p>
                                        </td>
                                    </tr>
                                </table>
                            </button>
                        </div>
                        <div class="title">
                            <p class="titleTxt">
                                Prepared Packages
                            </p>
                        </div>
                        <div class="formTxt">
                            <p class="normalTxt formTxtbottom" id="script">
                                From our discussion today we’ve prepared a few plans that let you take advantage of our services to help your business grow.
                            </p>
                            <button type="button" class="yesBtn editPackageButton" id="editPackage" style="color: black; display: none;" onclick="showModalEditPackage();showWaitingScreen(false);">
                                <span class="material-icons">drive_file_rename_outline</span>&nbsp;Edit Package
                            </button>
                            <div id="buttons" style="margin-bottom: 3%;">
                                <button type="button" class="start" id="next" style="color: white; opacity: 1;" onclick="nextSection(29, 'Verify Information', 'preparedPackages', 'verifyInformation');">
                                    <i class="fas fa-arrow-right">&nbsp;</i>Next Section
                                </button>
                                <div class="divider" />
                                <p class="blast">Verify Your Information</p>
                            </div>
                        </div>
                    </div>
                    <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="verifyInformation">
                        <div class="backMenu">
                            <button type="button" class="backBtn backToPrep" onclick="backSection('Prepared Packages', 'preparedPackages', 'verifyInformation');">
                                <table id="backTable">
                                    <tr>
                                        <td>
                                            <span class="material-icons" id="backArrow">arrow_back</span>
                                        </td>
                                        <td>
                                            <p class="backTitle">Previous section</p>
                                            <p class="backDesc">Prepared Packages</p>
                                        </td>
                                    </tr>
                                </table>
                            </button>
                            <button type="button" class="backBtn backToReview" style="display: none;" onclick="backSection('Review Business Discovery', 'businessDiscParts', 'properEstityStrugleLLC');">
                                <table id="backTable">
                                    <tr>
                                        <td>
                                            <span class="material-icons" id="backArrow">arrow_back</span>
                                        </td>
                                        <td>
                                            <p class="backTitle">Previous section</p>
                                            <p class="backDesc">Review Discovery Questions</p>
                                        </td>
                                    </tr>
                                </table>
                            </button>
                        </div>
                        <div class="title">
                            <p class="titleTxt">
                                Verify Your Information
                            </p>
                        </div>
                        <div class="formTxt">
                            <div style="margin-top: 50px;">
                                <p class="normalTxt formTxtbottom" id="script">
                                    <span style="font-weight: 600;">Phone and Email Address</span>
                                    <br />
                                    <br />
                                    The next steps are very simple, {!businessOwner.First_Name__c}, I want to ensure the information we have on file is accurate.
                                    <br />
                                    <br />
                                    Is
                                    <spam id="busOwnerPhone">{!businessOwner.Phone__c}</spam>
                                    the best phone number to reach you?
                                    <br />
                                    <br />
                                    And
                                    <spam id="busOwnerEmail">{!businessOwner.Email__c}</spam>
                                    the best email address to reach you?
                                </p>
                                <button type="button" class="yesBtn" id="editPackage" style="color: black;" onclick="showModalEditClientInfo();">
                                    <span class="material-icons">drive_file_rename_outline</span>&nbsp;Edit Client Information
                                </button>
                            </div>
                            <div style="margin-top: 70px;">
                                <p class="normalTxt formTxtbottom" id="script">
                                    <span style="font-weight: 600;">Billing Address</span>
                                    <br />
                                    <br />
                                    Could you confirm your billing address for me?
                                    <br />
                                    <br />
                                    <spam id="busOwnerAddress">{!businessOwner.Address__c}</spam>
                                    <br />
                                    <spam id="busOwnerCity">{!businessOwner.City__c}</spam>
                                    <spam id="busOwnerState"></spam>
                                    <spam id="busOwnerZip">{!businessOwner.Zip__c}</spam>
                                    <br />
                                    <spam id="busOwnerCountry">{!businessOwner.Country__c}</spam>
                                </p>
                                <button type="button" class="yesBtn" id="editPackage" style="color: black;" onclick="showModalEditBillingAdd();">
                                    <span class="material-icons">drive_file_rename_outline</span>&nbsp;Edit Billing Address
                                </button>
                            </div>
                            <div style="margin-top: 80px;">
                                <p class="normalTxt formTxtbottom" id="script">
                                    <span style="font-weight: 600;">Payment Terms</span>
                                    <br />
                                    <br />
                                    <span id="planTerms">No Financing.</span>
                                </p>
                                <button type="button" class="yesBtn" id="editPackage" style="color: black;" onclick="showModalEditPayTerms();"><span class="material-icons">drive_file_rename_outline</span>&nbsp;Edit Payment Terms</button>
                            </div>
                            <div id="buttons" style="margin-bottom: 3%; margin-top: 5%;">
                                <button type="button" class="start" id="generateQuoteButton" style="color: white; opacity: 1;" onclick="showModalConfirmQuote();"><i class="fas fa-arrow-right">&nbsp;</i>Generate Quote</button>
                                <div class="divider" />
                                <p class="blast">Payment Details</p>
                                <div id="errorMesse" style="display: inline-flex;">
                                    <span class="material-icons" id="errorMessageIcon" style="padding-left: 2%; padding-top: 3%;">warning_amber</span>
                                    <p id="errorMessageText">
                                        Proceeding to payment details will lock the ChargeOver quote and require making any further edits to the quote within the Opportunity in Salesforce. To avoid this, make changes before proceeding and
                                        locking the quote by clicking the "Edit Quote" button in the top-left portion of the screen.
                                    </p>
                                </div>
                            </div>
                            <p id="commonObjections">Common Objections</p>
                            <button class="accordion" onclick="accordionFunct(this, '1');">
                                “I want to think about it”<span class="material-icons arrows" id="lessArrow1">expand_less</span><span class="material-icons arrows" id="moreArrow1">keyboard_arrow_down</span>
                            </button>
                            <div class="panel">
                                <p class="normalTxt formTxtbottom" id="script">
                                    I understand. This is an important decision for you and your business. May I ask: What is it you will be thinking about the most?
                                </p>
                                <p class="normalTxt formTxtbottom optText" id="script">
                                    <spam id="optTitle">If Value</spam>
                                    <br />
                                    Extending conversation with tax strategy and urgency.
                                </p>
                                <p class="normalTxt formTxtbottom optText" id="script">
                                    <spam id="optTitle">If Money</spam>
                                    <br />
                                    Extending conversation with strategy and urgency, then back to $
                                </p>
                                <p class="normalTxt formTxtbottom" id="script">
                                    With that in mind, would you like to use the same card you used with {!opportunity.Account.Lead_Source__c} or would you like to use another card?
                                </p>
                            </div>
                            <button class="accordion" onclick="accordionFunct(this, '2');">
                                “My business isn’t making money”<span class="material-icons arrows" id="lessArrow2">expand_less</span><span class="material-icons arrows" id="moreArrow2">keyboard_arrow_down</span>
                            </button>
                            <div class="panel">
                                <p class="normalTxt formTxtbottom" id="script">
                                    It is common for a new business to have more money going out than coming in and as a new business owner, you could use that to your advantage.
                                    <br />
                                    <br />
                                    That said, it’s important that we’re strategizing every deduction and credit you are entitled to. Also, we need to ensure you’re addressing your ECE with as soon as possible. Our whole goal is to make
                                    sure you’re not funding the IRS {!businessOwner.First_Name__c}.
                                    <br />
                                    <br />
                                    Is it more of the investment you’re thinking about, or the services?
                                </p>
                                <p class="normalTxt formTxtbottom optText" id="script">
                                    <spam id="optTitle">If Value</spam>
                                    <br />
                                    Extending conversation with tax strategy and urgency.
                                </p>
                                <p class="normalTxt formTxtbottom optText" id="script">
                                    <spam id="optTitle">If Money</spam>
                                    <br />
                                    Extending conversation with strategy and urgency, then back to $
                                </p>
                                <p class="normalTxt formTxtbottom" id="script">
                                    With that in mind, would you like to use the same card you used with {!opportunity.Account.Lead_Source__c} or would you like to use another card?
                                </p>
                            </div>
                            <button class="accordion" onclick="accordionFunct(this, '3');">
                                “I need to speak with spouse/partner”<span class="material-icons arrows" id="lessArrow3">expand_less</span><span class="material-icons arrows" id="moreArrow3">keyboard_arrow_down</span>
                            </button>
                            <div class="panel">
                                <p class="normalTxt formTxtbottom" id="script">
                                    I can understand. This is an important decision.
                                    <br />
                                    <br />
                                    May I ask what you think your spouse/partner will be thinking about the most?
                                </p>
                                <p class="normalTxt formTxtbottom optText" id="script">
                                    <spam id="optTitle">If Value</spam>
                                    <br />
                                    I know it feels like yesterday since you set your business up in {!opportunity.Account.Lead_Source_Date__c}, so we have some catching up to do.
                                    <br />
                                    <br />
                                    The good news is you are on the phone with me today.
                                    <br />
                                    <br />
                                    The next steps are very simple {!businessOwner.First_Name__c}, let’s schedule your Discovery call on a day that works for you and your spouse.
                                </p>
                                <p class="normalTxt formTxtbottom optText" id="script">
                                    <spam id="optTitle">If Money</spam>
                                    <br />
                                    Having everyone on the same page is important.
                                    <br />
                                    <br />
                                    Nevertheless, earlier you stated that you and your partner/spouse invested {!business.Startup_Costs__c} into your business, correct? This service ensures you protect that investment. In order to do that,
                                    it’s crucial that we create a comprehensive tax strategy that will help you find ways to recoup some of those startup costs.
                                </p>
                                <p class="normalTxt formTxtbottom" id="script">
                                    With that in mind, would you like to use the same card you used with {!opportunity.Account.Lead_Source__c} or would you like to use another card?
                                </p>
                            </div>
                            <button class="accordion" onclick="accordionFunct(this, '4');">
                                “I read negative reviews of 1-800Accountant”<span class="material-icons arrows" id="lessArrow4">expand_less</span><span class="material-icons arrows" id="moreArrow4">keyboard_arrow_down</span>
                            </button>
                            <div class="panel">
                                <p class="normalTxt formTxtbottom" id="script">
                                    I completely understand your concern. I also check reviews with the companies I may do business with and often factor them in prior to making a decision. So, I can absolutely relate with your concern.
                                    <br />
                                    <br />
                                    I want to assure you that a chief goal of 1-800Accountant is to not only meet but exceed the expectations of our clients. Keep in mind that we have an “A” rating with the Better Business Bureau, which is
                                    far above other well-known tax prep companies such as H &#38; R Block (1.2-star average rating) or TurboTax (1.1-star average rating.)
                                    <br />
                                    <br />
                                    We have earned the trust of hundreds of thousands of people like you for the past 20 years and that kind of trust has made us the nation’s leading virtual accounting firm. Additionally, whenever we do
                                    receive a negative review or a complaint from a customer, we ensure we go above and beyond to resolve the issue.
                                    <br />
                                    <br />
                                    With that in mind, would you like to use the same card you used with {!opportunity.Account.Lead_Source__c} or would you like to use another card?
                                </p>
                            </div>
                            <button class="accordion" onclick="accordionFunct(this, '5');">
                                “I want to research before moving forward”<span class="material-icons arrows" id="lessArrow5">expand_less</span><span class="material-icons arrows" id="moreArrow5">keyboard_arrow_down</span>
                            </button>
                            <div class="panel">
                                <p class="normalTxt formTxtbottom" id="script">
                                    I understand. As a business owner, you want to ensure you’re making the right decision for you and your business and I value that. Let me ask. What is it that you’d like to research?
                                </p>
                                <p class="normalTxt formTxtbottom optText" id="script">
                                    <spam id="optTitle">If they want to research the company</spam>
                                    <br />
                                    As a business owner, I would want to research as well. Let me save you the hassle. {!opportunity.Account.Lead_Source__c} has done the research for you. They know what it takes for a business to be
                                    successful, and our accountants know what it takes for a business to be successful, which is why out of all the accounting firms in the country, they trust us with their clients.This is why we don’t
                                    operate that way. Since we need to address your ECE, and the overall tax strategy for this year, let's at least set your discovery appointment and won’t think about taxes until then.
                                </p>
                                <p class="normalTxt formTxtbottom optText" id="script">
                                    <spam id="optTitle">If they want to compare</spam>
                                    <br />
                                    I understand, I would want to compare myself. One thing I’d like to point out is that your typical local accountant will charge billable hours typically $200-$300 per hour. We don’t charge per hour. This
                                    allows you the freedom to access your accountant whenever you feel the need arises.
                                </p>
                                <p class="normalTxt formTxtbottom" id="script">
                                    With that in mind, would you like to use the same card you used with {!opportunity.Account.Lead_Source__c} or would you like to use another card?
                                </p>
                            </div>
                            <button class="accordion" onclick="accordionFunct(this, '6');">
                                “I know a CPA or have a family member who is a CPA”<span class="material-icons arrows" id="lessArrow6">expand_less</span><span class="material-icons arrows" id="moreArrow6">keyboard_arrow_down</span>
                            </button>
                            <div class="panel">
                                <p class="normalTxt formTxtbottom optText" id="script">
                                    <spam id="optTitle">If CPA is NOT a family member</spam>
                                    <br />
                                    Remember, we operate differently, we don’t charge hourly fees or hidden costs which is why our services are so affordable for the start-up business owner.
                                </p>
                                <p class="normalTxt formTxtbottom optText" id="script">
                                    <spam id="optTitle">If CPA IS a family member</spam>
                                    <br />
                                    In my experience, a lot of business owners make it a common practice of keeping business and family separate. In the end it’s up to whatever works best for you. Keep in mind that you will have a team that
                                    will be here to minimize your stress and maximize your tax savings through on demand, unlimited access.
                                </p>
                                <p class="normalTxt formTxtbottom" id="script">
                                    With that in mind, would you like to use the same card you used with {!opportunity.Account.Lead_Source__c} or would you like to use another card?
                                </p>
                            </div>
                        </div>
                        <div class="modal" id="modalEditClientInfo">
                            <div class="content">
                                <div id="modalHeader">
                                    <table id="modalHeaderTable" style="border-bottom: 1px solid rgba(18, 23, 36, 0.2);">
                                        <tr>
                                            <td>
                                                <p class="modalHeaderTitle">Edit Client Information</p>
                                            </td>
                                            <td>
                                                <button class="modalHeaderClose" onclick="closeModalEditClientInfo();"><i class="fas fa-times"></i></button>
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                                <div id="modalBody">
                                    <div class="form-floating">
                                        <input type="email" class="form-control" id="emailModalEditClientInfo" placeholder="Email" required="required" value="{!businessOwner.Email__c}" onkeyup="" style="" />
                                        <label for="emailModalEditClientInfo">Email</label>
                                        <p id="emailFormatError" style="color: red;"></p>
                                    </div>
                                    <div class="form-floating">
                                        <input type="tel" class="form-control" id="phoneModalEditClientInfo" placeholder="Phone" required="required" value="{!businessOwner.Phone__c}" onkeyup="" style="" />
                                        <label for="phoneModalEditClientInfo">Phone</label>
                                    </div>
                                    <p id="modalEditClientInfoErrors" style="color: red;"></p>
                                </div>
                                <div id="modalFooter">
                                    <button class="btnCloseModal" onclick="closeModalEditClientInfo();">Cancel</button>
                                    <button class="btnAddRow saveChanges" style="opacity: 1;" id="" onclick="saveClientInfo('personal');">Save Changes</button>
                                </div>
                            </div>
                        </div>
                        <div class="modal" id="modalEditBillingAdd">
                            <div class="content">
                                <div id="modalHeader">
                                    <table id="modalHeaderTable" style="border-bottom: 1px solid rgba(18, 23, 36, 0.2);">
                                        <tr>
                                            <td>
                                                <p class="modalHeaderTitle">Edit Billing Address</p>
                                            </td>
                                            <td>
                                                <button class="modalHeaderClose" onclick="closeModalEditBillingAdd();"><i class="fas fa-times"></i></button>
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                                <div id="modalBody">
                                    <div class="form-floating">
                                        <input type="text" class="form-control" id="streetAddress" value="{!businessOwner.Address__c}" placeholder="streetAddress" required="required" onkeyup="" />
                                        <label for="streetAddress">Street Address</label>
                                    </div>
                                    <div style="position: relative; display: flex; padding-bottom: 24px;">
                                        <div class="form-floating" style="width: 75%;">
                                            <input type="text" class="form-control" id="cityAddress" value="{!businessOwner.City__c}" style="width: 225px; height: 54px;" placeholder="cityAddress" required="required" onkeyup="" />
                                            <label for="cityAddress">City</label>
                                        </div>
                                        <div class="form-floating">
                                            <label for="stateAddress" style="padding: 5px 12px; font-size: 11px; opacity: 0.75;">State</label>
                                            <apex:selectList styleClass="form-select" id="stateAddress" html-data-id="stateAddress" style="width: 225px; padding-top: 8%; height: 54px;" value="{!defaultState}" onchange="" size="1">
                                                <apex:selectOptions value="{!stateOfIncorporation}"></apex:selectOptions>
                                            </apex:selectList>
                                        </div>
                                    </div>
                                    <div style="position: relative; display: flex; padding-bottom: 24px;">
                                        <div class="form-floating" style="width: 75%;">
                                            <input type="tel" class="form-control" id="zipAddress" value="{!businessOwner.Zip__c}" style="width: 225px; height: 54px;" placeholder="zipAddress" required="required" onkeyup="" />
                                            <label for="zipAddress">Zip</label>
                                        </div>
                                        <div class="form-floating">
                                            <label for="countryAddress" style="padding: 5px 12px; font-size: 11px; opacity: 0.75;">Country</label>
                                            <apex:selectList styleClass="form-select" id="countryAddress" html-data-id="countryAddress" style="width: 225px; padding-top: 8%; height: 54px;" value="{!defaultCountry}" onchange="" size="1">
                                                <apex:selectOptions value="{!contries}"></apex:selectOptions>
                                            </apex:selectList>
                                        </div>
                                    </div>
                                    <p id="modalEditBillingAddErrors" style="color: red;"></p>
                                </div>
                                <div id="modalFooter">
                                    <button class="btnCloseModal" onclick="closeModalEditBillingAdd();">Cancel</button>
                                    <button class="btnAddRow saveChanges" style="opacity: 1;" id="" onclick="saveClientInfo('billing')">Save Changes</button>
                                </div>
                            </div>
                        </div>
                        <div class="modal" id="modalEditPayTerms">
                            <div class="content">
                                <div id="modalHeader">
                                    <table id="modalHeaderTable" style="border-bottom: 1px solid rgba(18, 23, 36, 0.2);">
                                        <tr>
                                            <td>
                                                <p class="modalHeaderTitle">Edit Payment Terms</p>
                                            </td>
                                            <td>
                                                <button class="modalHeaderClose" onclick="closeModalEditPayTerms(true);"><i class="fas fa-times"></i></button>
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                                <div id="modalBody">
                                    <div class="form-floating">
                                        <!--<apex:selectList styleClass="form-select" style="height: auto;padding-top: 5%;padding-bottom: 5%;" id="payTerms" html-data-id="payTerms" value="{defaultNumberOfRentalProperties}" onchange="" size="1">
                              <apex:selectOptions value="{!numberOfRentalProperties}"></apex:selectOptions>
                              </apex:selectList>-->
                                        <label for="payTerms" id="payTermsLabel" style="position: relative; padding: 1rem 0rem;">Payment Terms</label>
                                        <select class="form-select" id="payTerms" style="width: 70%; padding-top: 3%; height: 54px;" onchange="calcFinance(this.value, true);">
                                            <option>No Financing</option>
                                            <!--1-->
                                            <option>2 Pay</option>
                                            <!--2-->
                                            <option>3 Pay</option>
                                            <!--3-->
                                            <option>4 Pay</option>
                                            <!--4-->
                                            <option>6 Pay</option>
                                            <!--5-->
                                            <option>Apply for Monthly Installments</option>
                                            <!--6-->
                                        </select>
                                    </div>
                                    <table id="payTable">
                                        <tr style="border-bottom: 1px solid rgba(18, 23, 36, 0.2);">
                                            <td>
                                                <p class="payTableTitle" style="margin-bottom: 10%;">Total Due</p>
                                            </td>
                                            <td>
                                                <p class="payTableAmount" id="payAmountDue" style="margin-bottom: 10%;"></p>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <p class="payTableTitle" style="margin-top: 10%;">Due Today</p>
                                            </td>
                                            <td>
                                                <p class="payTableAmount" id="payAmountToday" style="margin-top: 10%;"></p>
                                            </td>
                                        </tr>
                                    </table>
                                    <p id="modalEditPayTermsErrors" style="color: red;"></p>
                                </div>
                                <div id="modalFooter">
                                    <button class="btnCloseModal" onclick="closeModalEditPayTerms(true);">Cancel</button>
                                    <button class="btnAddRow saveChanges" style="opacity: 1;" id="" onclick="savePayTerms();">Save Changes</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="paymentDetails">
                        <div class="backMenu">
                            <button type="button" class="backBtn" onclick="backSection('Verify Information', 'verifyInformation', 'paymentDetails');">
                                <table id="backTable">
                                    <tr>
                                        <td>
                                            <span class="material-icons" id="backArrow">arrow_back</span>
                                        </td>
                                        <td>
                                            <p class="backTitle">Previous section</p>
                                            <p class="backDesc">Verify Information</p>
                                        </td>
                                    </tr>
                                </table>
                            </button>
                        </div>
                        <div class="title">
                            <p class="titleTxt">
                                Payment Details
                            </p>
                        </div>
                        <div class="formTxt">
                            <p class="normalTxt formTxtbottom" id="script">
                                <br />
                                Do you want to use a Visa, Mastercard, American Express, or Discover card for your initial investment today of <span id="finalAmou"></span>
                                <span id="finalMonthAmou"></span>
                            </p>
                            <div id="engage">
                                <p id="engageTxt">
                                    ✋ Listen. Do not say anything.
                                </p>
                            </div>
                        </div>
                        <div class="formTxt" id="cardInformation">
                            <p class="normalTxt formTxtbottom" id="script">
                                To confirm, you, {!businessOwner.First_Name__c} {!businessOwner.Last_Name__c} are the cardholder and are authorized to approve this transaction, correct?
                            </p>
                            <div id="engage">
                                <p id="engageTxt">
                                    ✋ If the client is not the cardholder, send an invitation to the cardholder to join the call.
                                </p>
                            </div>
                            <p class="normalTxt formTxtbottom" id="script" style="margin-top: 45px;">
                                As confirmation:
                                <br />
                                <br />
                                Today you’ll be charged the following amount:
                                <br />
                                <br />
                                <span id="finalAmount"></span><br />
                                <span id="finalMonthAmount"></span>
                                <span id="financingScript">
                                    <br />
                                    <span id="paymentAmount"></span> will be processed on the <span id="numDay"></span> of every month for the next <span id="planLength"></span>
                                    months until the payment is made in full.
                                </span>
                                <br />
                                <br />
                                You’ll be charged the following amount. You agree to engage 1-800Accountant to provide the above tax, compliance and accounting services starting today, and agree to the terms and conditions and privacy
                                policy and give 1-800Accountant the ability to communicate with the IRS on your behalf and request necessary tax documents (form 8821).
                                <br />
                                You consent to receive text/SMS messages regarding our services.
                            </p>
                            <p class="normalTxt formTxtbottom" style="margin-top: 35px;" id="script">
                                Do you authorize this transaction and these terms?
                            </p>
                            <input type="checkbox" id="authorizes" name="authorizes" onchange="activateNext();" />
                            <label class="normalTxt formTxtbottom" for="authorizes" style="display: inline;">&nbsp;The client authorizes this transaction and terms. (Required)</label>
                            <div class="formTxt">
                                <iframe id="Changeover" title="Changeover" height="100%" width="100%" class="changeover" scrolling="yes" src=""> </iframe>
                            </div>
                            <div id="buttons" style="margin-bottom: 3%; margin-top: 5%; display: block;">
                                <p id="PostPurchaseError" style="color: red; padding-bottom: 10px; font-size: 18px; line-height: 28px; letter-spacing: 0.01em;"></p>
                                <button type="button" class="start" id="nextPayment" style="color: white;" onclick="isOpportunityPaid();"><i class="fas fa-arrow-right">&nbsp;</i>Confirm Purchase</button>
                                <div class="divider" />
                                <p class="blast">Post Purchase</p>
                            </div>
                            <div id="emailSent">
                                <p id="engageTxt">
                                    ✋ Email send to the client.
                                </p>
                            </div>
                            <div id="buttons">
                                <button type="button" id="btnSendQuote" onclick="sendQuoteByEmail();"><i class="fas fa-arrow-right">&nbsp;</i>Send Quote Via Email</button>
                                <button type="button" id="btnSendQuote" onclick="followUpCall();"><i class="fas fa-arrow-right">&nbsp;</i>Schedule a Follow-Up</button>
                            </div>
                            <p id="commonObjections">Common Objections</p>
                            <button class="accordion" onclick="accordionFunct(this, '1');">
                                “I want to think about it”<span class="material-icons arrows" id="lessArrow1">expand_less</span><span class="material-icons arrows" id="moreArrow1">keyboard_arrow_down</span>
                            </button>
                            <div class="panel">
                                <p class="normalTxt formTxtbottom" id="script">
                                    I understand. This is an important decision for you and your business. May I ask: What is it you will be thinking about the most?
                                </p>
                                <p class="normalTxt formTxtbottom optText" id="script">
                                    <spam id="optTitle">If Value</spam>
                                    <br />
                                    Extending conversation with tax strategy and urgency.
                                </p>
                                <p class="normalTxt formTxtbottom optText" id="script">
                                    <spam id="optTitle">If Money</spam>
                                    <br />
                                    Extending conversation with strategy and urgency, then back to $
                                </p>
                                <p class="normalTxt formTxtbottom" id="script">
                                    With that in mind, would you like to use the same card you used with {!opportunity.Account.Lead_Source__c} or would you like to use another card?
                                </p>
                            </div>
                            <button class="accordion" onclick="accordionFunct(this, '2');">
                                “My business isn’t making money”<span class="material-icons arrows" id="lessArrow2">expand_less</span><span class="material-icons arrows" id="moreArrow2">keyboard_arrow_down</span>
                            </button>
                            <div class="panel">
                                <p class="normalTxt formTxtbottom" id="script">
                                    It is common for a new business to have more money going out than coming in and as a new business owner, you could use that to your advantage.
                                    <br />
                                    <br />
                                    That said, it’s important that we’re strategizing every deduction and credit you are entitled to. Also, we need to ensure you’re addressing your ECE with as soon as possible. Our whole goal is to make
                                    sure you’re not funding the IRS {!businessOwner.First_Name__c}.
                                    <br />
                                    <br />
                                    Is it more of the investment you’re thinking about, or the services?
                                </p>
                                <p class="normalTxt formTxtbottom optText" id="script">
                                    <spam id="optTitle">If Value</spam>
                                    <br />
                                    Extending conversation with tax strategy and urgency.
                                </p>
                                <p class="normalTxt formTxtbottom optText" id="script">
                                    <spam id="optTitle">If Money</spam>
                                    <br />
                                    Extending conversation with strategy and urgency, then back to $
                                </p>
                                <p class="normalTxt formTxtbottom" id="script">
                                    With that in mind, would you like to use the same card you used with {!opportunity.Account.Lead_Source__c} or would you like to use another card?
                                </p>
                            </div>
                            <button class="accordion" onclick="accordionFunct(this, '3');">
                                “I need to speak with spouse/partner”<span class="material-icons arrows" id="lessArrow3">expand_less</span><span class="material-icons arrows" id="moreArrow3">keyboard_arrow_down</span>
                            </button>
                            <div class="panel">
                                <p class="normalTxt formTxtbottom" id="script">
                                    I can understand. This is an important decision.
                                    <br />
                                    <br />
                                    May I ask what you think your spouse/partner will be thinking about the most?
                                </p>
                                <p class="normalTxt formTxtbottom optText" id="script">
                                    <spam id="optTitle">If Value</spam>
                                    <br />
                                    I know it feels like yesterday since you set your business up in {{Date}}, so we have some catching up to do.
                                    <br />
                                    <br />
                                    The good news is you are on the phone with me today.
                                    <br />
                                    <br />
                                    The next steps are very simple {!businessOwner.First_Name__c}, let’s schedule your Discovery call on a day that works for you and your spouse.
                                </p>
                                <p class="normalTxt formTxtbottom optText" id="script">
                                    <spam id="optTitle">If Money</spam>
                                    <br />
                                    Having everyone on the same page is important.
                                    <br />
                                    <br />
                                    Nevertheless, earlier you stated that you and your partner/spouse invested {{Invested Amount}} into your business, correct? This service ensures you protect that investment. In order to do that, it’s
                                    crucial that we create a comprehensive tax strategy that will help you find ways to recoup some of those startup costs.
                                </p>
                                <p class="normalTxt formTxtbottom" id="script">
                                    With that in mind, would you like to use the same card you used with {!opportunity.Account.Lead_Source__c} or would you like to use another card?
                                </p>
                            </div>
                            <button class="accordion" onclick="accordionFunct(this, '4');">
                                “I read negative reviews of 1-800Accountant”<span class="material-icons arrows" id="lessArrow4">expand_less</span><span class="material-icons arrows" id="moreArrow4">keyboard_arrow_down</span>
                            </button>
                            <div class="panel">
                                <p class="normalTxt formTxtbottom" id="script">
                                    I completely understand your concern. I also check reviews with the companies I may do business with and often factor them in prior to making a decision. So, I can absolutely relate with your concern.
                                    <br />
                                    <br />
                                    I want to assure you that a chief goal of 1-800Accountant is to not only meet but exceed the expectations of our clients. Keep in mind that we have an “A” rating with the Better Business Bureau, which is
                                    far above other well-known tax prep companies such as H &#38; R Block (1.2-star average rating) or TurboTax (1.1-star average rating.)
                                    <br />
                                    <br />
                                    We have earned the trust of hundreds of thousands of people like you for the past 20 years and that kind of trust has made us the nation’s leading virtual accounting firm. Additionally, whenever we do
                                    receive a negative review or a complaint from a customer, we ensure we go above and beyond to resolve the issue.
                                    <br />
                                    <br />
                                    With that in mind, would you like to use the same card you used with {!opportunity.Account.Lead_Source__c} or would you like to use another card?
                                </p>
                            </div>
                            <button class="accordion" onclick="accordionFunct(this, '5');">
                                “I want to research before moving forward”<span class="material-icons arrows" id="lessArrow5">expand_less</span><span class="material-icons arrows" id="moreArrow5">keyboard_arrow_down</span>
                            </button>
                            <div class="panel">
                                <p class="normalTxt formTxtbottom" id="script">
                                    I understand. As a business owner, you want to ensure you’re making the right decision for you and your business and I value that. Let me ask. What is it that you’d like to research?
                                </p>
                                <p class="normalTxt formTxtbottom optText" id="script">
                                    <spam id="optTitle">If they want to research the company</spam>
                                    <br />
                                    As a business owner, I would want to research as well. Let me save you the hassle. {!opportunity.Account.Lead_Source__c} has done the research for you. They know what it takes for a business to be
                                    successful, and our accountants know what it takes for a business to be successful, which is why out of all the accounting firms in the country, they trust us with their clients.This is why we don’t
                                    operate that way. Since we need to address your ECE, and the overall tax strategy for this year, let's at least set your discovery appointment and won’t think about taxes until then.
                                </p>
                                <p class="normalTxt formTxtbottom optText" id="script">
                                    <spam id="optTitle">If they want to compare</spam>
                                    <br />
                                    I understand, I would want to compare myself. One thing I’d like to point out is that your typical local accountant will charge billable hours typically $200-$300 per hour. We don’t charge per hour. This
                                    allows you the freedom to access your accountant whenever you feel the need arises.
                                </p>
                                <p class="normalTxt formTxtbottom" id="script">
                                    With that in mind, would you like to use the same card you used with {!opportunity.Account.Lead_Source__c} or would you like to use another card?
                                </p>
                            </div>
                            <button class="accordion" onclick="accordionFunct(this, '6');">
                                “I know a CPA or have a family member who is a CPA”<span class="material-icons arrows" id="lessArrow6">expand_less</span><span class="material-icons arrows" id="moreArrow6">keyboard_arrow_down</span>
                            </button>
                            <div class="panel">
                                <p class="normalTxt formTxtbottom optText" id="script">
                                    <spam id="optTitle">If CPA is NOT a family member</spam>
                                    <br />
                                    Remember, we operate differently, we don’t charge hourly fees or hidden costs which is why our services are so affordable for the start-up business owner.
                                </p>
                                <p class="normalTxt formTxtbottom optText" id="script">
                                    <spam id="optTitle">If CPA IS a family member</spam>
                                    <br />
                                    In my experience, a lot of business owners make it a common practice of keeping business and family separate. In the end it’s up to whatever works best for you. Keep in mind that you will have a team that
                                    will be here to minimize your stress and maximize your tax savings through on demand, unlimited access.
                                </p>
                                <p class="normalTxt formTxtbottom" id="script">
                                    With that in mind, would you like to use the same card you used with {!opportunity.Account.Lead_Source__c} or would you like to use another card?
                                </p>
                            </div>
                        </div>
                    </div>
                    <div class="slds-box slds-box_x-small slds-text-align_left slds-m-around--x-small" id="postPurchase">
                        <div class="backMenu">
                            <button type="button" class="backBtn" onclick="backSection('Payment Details', 'paymentDetails', 'postPurchase');">
                                <table id="backTable">
                                    <tr>
                                        <td>
                                            <span class="material-icons" id="backArrow">arrow_back</span>
                                        </td>
                                        <td>
                                            <p class="backTitle">Previous section</p>
                                            <p class="backDesc">Payment Details</p>
                                        </td>
                                    </tr>
                                </table>
                            </button>
                        </div>
                        <div class="title">
                            <p class="titleTxt">
                                Post Purchase
                            </p>
                        </div>
                        <div class="formTxt">
                            <p class="normalTxt formTxtbottom" id="script">
                                Next, I want to schedule your Discovery meeting with your Senior Tax Advisor. This meeting will cover choosing your entity classification, information gathering, business goals, getting to know each other,
                                expectations, and Q&amp;A. We will surround you with a team of tax experts who specialize in your industry and state and are dedicated to your success.
                                <br />
                                <br />
                                I want to make sure to get you scheduled for the soonest time we have available. Are the mornings or afternoons typically better for you?
                            </p>
                        </div>
                        <!--<div class="scheduleCalendar" id="hourselection">
                     <p id="scheduleCalendarTitle">Schedule Appointment</p>
                     <input type="date" id="scheduleCalendarDate" name="scheduleCalendarDate" value="{!Today()}" min="1800-01-01" max="3000-12-31"/>
                     <div id="scheduleCalendarHours">
                         <button class="hourBtn" id="630am" onclick="selectHour('630am');">6:30 AM</button>
                         <button class="hourBtn" id="700am" onclick="selectHour('700am');">7:00 AM</button>
                         <button class="hourBtn" id="730am" onclick="selectHour('730am');">7:30 AM</button>
                         <button class="hourBtn" id="800am" onclick="selectHour('800am');">8:00 AM</button>
                         <button class="hourBtn" id="830am" onclick="selectHour('830am');">8:30 AM</button>
                         <button class="hourBtn" id="900am" onclick="selectHour('900am');">9:00 AM</button>
                         <button class="hourBtn" id="930am" onclick="selectHour('930am');">9:30 AM</button>
                         <button class="hourBtn" id="1000am" onclick="selectHour('1000am');">10:00 AM</button>
                         <button class="hourBtn" id="1030am" onclick="selectHour('1030am');">10:30 AM</button>
                         <button class="hourBtn" id="1100am" onclick="selectHour('1100am');">11:00 AM</button>
                         <button class="hourBtn" id="1130am" onclick="selectHour('1130am');">11:30 AM</button>
                         <button class="hourBtn" id="1200am" onclick="selectHour('1200am');">12:00 AM</button>
                         <button class="hourBtn" id="1230am" onclick="selectHour('1230am');">12:30 AM</button>
                         <button class="hourBtn" id="100pm" onclick="selectHour('100pm');">1:00 PM</button>
                         <button class="hourBtn" id="130pm" onclick="selectHour('130pm');">1:30 PM</button>
                         <button class="hourBtn" id="200pm" onclick="selectHour('200pm');">2:00 PM</button>
                         <button class="hourBtn" id="230pm" onclick="selectHour('230pm');">2:30 PM</button>
                         <button class="hourBtn" id="300pm" onclick="selectHour('300pm');">3:00 PM</button>
                         <button class="hourBtn" id="330pm" onclick="selectHour('330pm');">3:30 PM</button>
                         <button class="hourBtn" id="400pm" onclick="selectHour('400pm');">4:00 PM</button>
                         <button class="hourBtn" id="430pm" onclick="selectHour('430pm');">4:30 PM</button>
                         <button class="hourBtn" id="500pm" onclick="selectHour('500pm');">5:00 PM</button>
                         <button class="hourBtn" id="530pm" onclick="selectHour('530pm');">5:30 PM</button>
                         <button class="hourBtn" id="600pm" onclick="selectHour('600pm');">6:00 PM</button>
                         <button class="hourBtn" id="630pm" onclick="selectHour('630pm');">6:30 PM</button>
                         
                     </div>
                     <p id="scheduleCalendarNote">All times are displayed in {{client-timezone}} ({{currentTime}})</p>
                     </div>
                     
                     <div class="scheduleCalendar" id="confimAppointment">
                     <button type="button" class="backBtn" id="" onclick="goToPickDateTime()" style="margin: 3% 0%;"><span class="material-icons" style="vertical-align: middle;">replay</span>&nbsp;Change the date or time</button>
                     <p id="scheduleCalendarTitle">Confirm Appointment</p>
                     <table class="scheduleCalendarTable">
                         <tr>
                             <td> 
                                 <span class="material-icons cal">calendar_today</span>
                             </td>
                             <td style="padding-left: 3%;">
                                 <div class="">
                                     <p class="scheduleCalendarDatePayroll">Payroll Appointment</p>
                                     <p class="scheduleCalendarDateSelect">Thursday, September 1, 2022 • 3:00 PM {{client-timezone}}</p>
                                 </div>
                             </td>
                         </tr>
                     </table>
                     <button type="button" class="" id="confAppoi" style="color: white;" onclick="goToScheduled();">Confirm Appointment</button>
                     <table class="scheduleCalendarTable" id="scheduleCalendarTable">
                         <tr>
                             <td> 
                                 <span style="color: rgba(18, 23, 36, 0.91);padding-left: 9px;" class="material-icons">info</span>
                             </td>
                             <td style="padding-left: 3%;">
                                 <div class="">
                                     <p class="scheduleCalendarInfoNote">Confirming will override any other appointment of the same appointment type that is already scheduled.</p>
                                 </div>
                             </td>
                         </tr>
                     </table>
                     </div>
                     
                     <div class="scheduleCalendar" id="appointmentSchedule">
                     <p id="scheduleCalendarTitle">Appointment Scheduled!</p>
                     <table class="scheduleCalendarTable">
                         <tr>
                             <td> 
                                 <span class="material-icons cal">calendar_today</span>
                             </td>
                             <td style="padding-left: 3%;">
                                 <div class="">
                                     <p class="scheduleCalendarDatePayroll">Payroll Appointment</p>
                                     <p class="scheduleCalendarDateSelect">Thursday, September 1, 2022 • 3:00 PM {{client-timezone}}</p>
                                 </div>
                             </td>
                         </tr>
                     </table>
                     <button type="button" class="backBtn" id="" onclick="goToReschedule();" style="margin: 3% 1%;border: 1px solid rgba(18, 23, 36, 0.2);border-radius: 50px;padding: 8px;">Reschedule</button>
                     </div>-->
                        <div class="formTxt" style="height: 520px;">
                            <iframe id="Scheduler" title="Scheduler" height="100%" width="100%" class="scheduler" scrolling="yes" src=""> </iframe>
                        </div>
                        <div class="formTxt">
                            <p class="normalTxt formTxtbottom" id="script">
                                Fantastic, your appointment has been scheduled.
                            </p>
                            <p class="normalTxt formTxtbottom" id="script">
                                Starting today, your accountant team will get in contact with the IRS. You’ll also receive an email with instructions to get you into your 1-800Accountant profile.
                                <br />
                                <br />
                                It’s in the 1-800Accountat portal that you can use all the great cloud-based and mobile tools we provide you with to help your business succeed. These include access to our web-based bookkeeping platform,
                                Virtual Tax Organizer, Message Center and more! Feel free to login and familiarize yourself with the portal before your Discovery meeting. If you have any questions, don’t worry, your accountant can address
                                them during your next appointment!
                                <br />
                                <br />
                                Over the next few weeks and moving forward your accountant will:
                                <br />
                                <br />
                                1. Start on your tax savings plan.
                                <br />
                                2. Retrieve past relevant tax documents.
                                <br />
                                3. Inform you of any upcoming tax deadlines that affect you.
                                <br />
                                4. Keep your tax return draft up to date based on your transactions and bookkeeping.
                            </p>
                        </div>
                        <!-- Welcome to 1-800Accountant 
                     <div class="formTxt" id="verticaltLine1">
                         
                         <p class="normalTxt discoTitle2" id="script">
                             <button type="button" id="currSlide1" onclick="getOne();">Current Slide</button>
                             <spam id="part1">Welcome to 1-800Accountant</spam>
                         </p>
                         
                         <div class="formTxt"> 
                             
                             <p class="normalTxt formTxtbottom" id="script">
                                 Welcome to the 1-800Accountant family, {{Client Name}}!
                                 <br/>
                                 <br/>
                                 You’ve made a great decision for your business.
                                 <br/>
                                 <br/>
                                 Just to confirm, we have already scheduled your initial Discovery meeting for {{Date}} at {{Time}} with your Senior Tax 
                                 Advisor. This will begin the data collection, advisory, and planning process. 
                             </p>
                             
                             <button type="button" class="yesBtn" id="reschedule" style="color: black;" onclick=""><span class="material-icons">calendar_today</span>&nbsp;Reschedule Appointment</button>
                             
                             <p class="normalTxt formTxtbottom" id="script">
                                 I’ve also just sent you three emails that will detail next steps and outline our services.  The first email is your Statement of Work 
                                 which details the services you purchased today and our commitment to you.
                             </p>
                         </div>
                     </div>
                     -->
                        <!-- Access Your Account 
                     <div class="formTxt" id="verticaltLine2">
                         
                         <p class="normalTxt discoTitle2" id="script">
                             <button type="button" id="currSlide2" onclick="getTwo();">Current Slide</button>
                             <spam id="part2">Access Your Account</spam>
                         </p>
                         
                         <div class="formTxt" id="accessAccount"> 
                             
                             <p class="normalTxt formTxtbottom" id="script">
                                 Now that your profile has been created, you will also receive your login details to our 1-800Accountant <spam style="color: #CE0B74;">portal</spam> where 
                                 you can access all the great cloud-based and mobile tools we arm you with to help your business succeed.  
                                 <br/>
                                 <br/>
                                 This includes access to our web-based bookkeeping platform, Virtual Tax Organizer, Message Center and more!  Please feel 
                                 free to login to familiarize yourself before your Discovery meeting.  If for any reason you have questions, don’t worry, 
                                 your accountant can address them during your appointment!                                                                                     
                             </p>
                             
                         </div>
                         
                     </div>
                     -->
                        <!-- Experience Feedback Survey 
                     <div class="formTxt" id="verticaltLine3">
                         
                         <p class="normalTxt discoTitle2" id="script">
                             <button type="button" id="currSlide3" onclick="getThree();">Current Slide</button>
                             <spam id="part3">Experience Feedback Survey</spam>
                         </p>
                         
                         <div class="formTxt" id="expFeedback"> 
                             
                             <div Id="engage">
                                 <p Id="engageTxt">
                                     ✋ You are required to mention the survey
                                 </p>
                             </div>
                             
                             <p class="normalTxt formTxtbottom" id="script">
                                 The third email contains a short two question survey asking for your feedback on your experience. Our goal at 1-800Accountant is 
                                 to exceed every client expectation and your feedback will help us continue improving our client experience.
                                 <br/>
                                 <br/>
                                 I would really appreciate you taking a moment to complete the short survey. Thanks so much!
                             </p>
                             
                         </div>
                     </div>
                     -->
                        <div class="formTxt" id="btn-post">
                            <div id="buttons">
                                <button type="button" class="start" id="ending" style="color: white;" onclick="endPresentation();"><span class="material-icons" style="vertical-align: middle;">close</span>&nbsp;End Presentation</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>

    </apex:form>
    </html>
</apex:page>